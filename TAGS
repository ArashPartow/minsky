
test/tcl-cov.cc,669
int count_matched_braces(const string& x)count_matched_braces20,426
struct ElementElement35,722
  enum Type {namesp, proc};Type37,739
  enum Type {namesp, proc};namesp37,739
  enum Type {namesp, proc};proc37,739
  Type type;type38,767
  string name;name39,780
  unsigned braceCnt; //brace level of outermost scope of this elementbraceCnt40,795
  unsigned lineCnt=0;lineCnt41,865
  Element(Type type=namesp, string name="",  unsigned braceCnt=0):Element42,887
struct ElementStack: public vector<Element>ElementStack46,1008
  bool isProc() const {isProc49,1103
  string fqName() const {fqName55,1294
int main(int argc, char** argv)main76,1746

test/cmpFp.cc,90
int nextNonWS(FILE* f)nextNonWS11,306
int main(int argc, const char** argv)main18,409

test/testEqWrappedPrototype.tex,0

test/testDerivative.cc,288
struct BinOpFixture: public MinskyBinOpFixture28,896
  VariablePtr f; // to receive results of function before differentiationf38,1268
  IntOp& integ=dynamic_cast<IntOp&>integ39,1342
  BinOpFixture(): f(VariableType::flow,"f") {BinOpFixture41,1450
SUITE(Derivative)SUITE65,2108

test/createFileLog.tcl,0

test/constantCopyProblem.tcl,53
proc afterMinskyStarted {} {afterMinskyStarted3,38

test/00/t0023a.sh,38
fail()fail11,157
pass()pass20,254

test/00/t0033a.sh,38
fail()fail11,157
pass()pass20,254

test/00/t0029a.sh,38
fail()fail11,157
pass()pass20,254

test/00/t0002a.sh,0

test/00/t0015a.sh,38
fail()fail11,157
pass()pass20,254

test/00/t0021a.sh,38
fail()fail11,157
pass()pass20,254

test/00/t0030a.sh,38
fail()fail11,157
pass()pass20,254

test/00/t0034a.sh,38
fail()fail11,157
pass()pass20,254

test/00/t0018a.sh,38
fail()fail11,157
pass()pass20,254

test/00/t0035a.sh,38
fail()fail11,157
pass()pass20,254

test/00/t0004a.sh,38
fail()fail13,223
pass()pass22,320

test/00/t0031a.sh,38
fail()fail11,157
pass()pass20,254

test/00/t0019a.sh,38
fail()fail11,157
pass()pass20,254

test/00/t0026a.sh,38
fail()fail11,157
pass()pass20,254

test/00/t0032a.sh,38
fail()fail11,157
pass()pass20,254

test/00/t0022a.sh,38
fail()fail11,157
pass()pass20,254

test/00/t0020a.sh,38
fail()fail11,157
pass()pass20,254

test/00/t0016a.sh,38
fail()fail11,157
pass()pass20,254

test/00/t0008a.sh,37
fail()fail9,145
pass()pass18,242

test/00/t0027a.sh,38
fail()fail11,157
pass()pass20,254

test/00/t0009a.sh,37
fail()fail9,145
pass()pass18,242

test/00/t0014a.sh,38
fail()fail11,157
pass()pass20,254

test/00/t0024a.sh,38
fail()fail11,157
pass()pass20,254

test/00/t0013a.sh,38
fail()fail11,157
pass()pass20,254

test/00/t0012a.sh,38
fail()fail11,157
pass()pass20,254

test/00/t0006a.sh,38
fail()fail13,234
pass()pass22,331

test/00/t0007a.sh,37
fail()fail9,145
pass()pass18,242

test/00/t0005a.sh,38
fail()fail13,222
pass()pass22,319

test/00/t0017a.sh,38
fail()fail11,157
pass()pass20,254

test/00/t0003a.sh,38
fail()fail11,157
pass()pass20,254

test/00/t0028a.sh,38
fail()fail11,157
pass()pass20,254

test/00/t0001a.sh,0

test/00/t0025a.sh,71
killFireFox()killFireFox11,157
fail()fail16,236
pass()pass26,349

test/00/t0010a.sh,38
fail()fail11,157
pass()pass20,254

test/1FreeRecording.tcl,0

test/assert.tcl,34
proc assert {x args} {assert2,1

test/rewriteMky.tcl,0

test/groupButton1Recording.tcl,0

test/testEq.tcl,0

test/benchmark.tcl,53
proc afterMinskyStarted {} {afterMinskyStarted3,17

test/parseGodley.tcl,225
proc a {s} {a7,73
proc genTestResults {} {genTestResults97,1659
proc runtest {} {runtest104,1756
proc runtest2 {} {runtest2120,2163
proc chainingCheck {l} {chainingCheck130,2402
proc runtest3 {} {runtest3143,2943

test/testGeometry.cc,29
SUITE(Geometry)SUITE12,263

test/testEqPrototype.tex,0

test/run-tcl-cov.sh,0

test/testLatexToPango.cc,31
TEST(LaTeXToPango)TEST25,834

test/testDatabase.cc,131
  void checkVectorElements(Database& db, int modelId, const vector<T>& x)checkVectorElements33,939
SUITE(Database)SUITE63,2005

test/compareWithOctave.tcl,0

test/testGroup.cc,577
  void pWireCoords()pWireCoords27,854
  struct TestFixture: public MinskyTestFixture35,1125
    LocalMinsky lm;lm37,1165
    VariablePtr a,b,c;a38,1185
    VariablePtr a,b,c;b38,1185
    VariablePtr a,b,c;c38,1185
    int aid, bid, cid;aid39,1208
    int aid, bid, cid;bid39,1208
    int aid, bid, cid;cid39,1208
    int ab,bc; // wire idsab40,1231
    int ab,bc; // wire idsbc40,1231
    int gid;gid41,1258
    TestFixture(): lm(*this)TestFixture42,1271
    bool uniqueGroupMembership() constuniqueGroupMembership74,2550
SUITE(Group)SUITE81,2658

test/main.cc,398
  string name(const Test& t)name36,1370
  struct RegExPredicateRegExPredicate39,1468
    boost::regex exp;exp41,1496
    RegExPredicate(): exp(".*") {} // equivalent to trueRegExPredicate42,1518
    RegExPredicate(const string& exp): exp(exp) {}RegExPredicate43,1575
    bool operator()(const Test* const test) constoperator ()44,1626
int main(int argc, const char** argv)main49,1735

test/compareFileLog.tcl,34
proc fclose {x y} {fclose15,386

test/compareWithOctave.m,0

test/testMinsky.cc,245
  struct TestFixture: public MinskyTestFixture27,862
    LocalMinsky lm;lm29,902
    TestFixture(): lm(*this)TestFixture30,922
    void addWire(const Wire& w)addWire34,990
SUITE(Minsky)SUITE45,1245
#define testUnOp(testUnOp596,19326

test/Makefile,461
DEBUG=1DEBUG1,0
ECOLAB_HOME=$(HOME)/usr/ecolabECOLAB_HOME5,156
ECOLAB_HOME=/usr/local/ecolabECOLAB_HOME7,192
UNITTESTOBJS=main.o testMinsky.o testGroup.o testGeometry.o testDatabase.o testLatexToPango.o testVariable.o testDerivative.oUNITTESTOBJS12,270
MINSKYOBJS=$(filter-out ../tclmain.o ../server-main.o,$(wildcard ../*.o))MINSKYOBJS13,396
FLAGS:=-I.. $(FLAGS)FLAGS14,470
EXES=unittests cmpFp testDatabase testLatexToPango testGroup EXES26,956

test/renderEquations.tcl,53
proc afterMinskyStarted {} {afterMinskyStarted5,86

test/testtestEq.tex,0

test/checkMissing.sh,66
notAegisFile() notAegisFile8,188
checkAegis()checkAegis13,239

test/testVariable.cc,29
SUITE(Variable)SUITE25,827

test/runtests.sh,0

constMap.h,363
#define CONSTMAP_HCONSTMAP_H20,727
namespace minskyminsky22,747
  struct ConstMap: public std::map<K,V>ConstMap26,853
    ConstMap() {}ConstMap28,897
    explicit ConstMap(const T& x): std::map<K,V>(x) {}ConstMap30,938
    ConstMap(const T& x, const U& y): std::map<K,V>(x,y) {}ConstMap32,1025
    V operator[](const K& k) const {operator []35,1123

gui-wt/canvasView.h,4047
#define CANVASVIEW_HCANVASVIEW_H21,713
#undef NoneNone25,778
#undef NoneNone34,1021
namespace minsky { namespace gui {minsky42,1220
namespace minsky { namespace gui {gui42,1220
class CanvasView: public AbstractView, public ScrollBarAreaCanvasView69,2158
  typedef ScrollBarArea _base_class;_base_class85,2478
  typedef MinskyDoc::ObjectId ObjectId;ObjectId91,2581
  typedef std::vector<AbstractCanvasItem*> Selection;Selection96,2654
  typedef ::classdesc::shared_ptr<WPainter::Image> ImagePtr;ImagePtr103,2930
  typedef std::map<std::string, ImagePtr> SpriteStore;SpriteStore108,3067
  typedef classdesc::shared_ptr<Plot> PlotPtr;PlotPtr113,3158
  typedef std::map<MinskyDoc::ObjectId, AbstractCanvasItem*> ModelWidgets;ModelWidgets118,3287
  typedef std::map<int, PlotCanvasItem*> ModelPlotWidgets;ModelPlotWidgets124,3518
  enum MouseToolMouseTool129,3617
    toolDefault,  ///<  The default tools, allows for selection of objects,toolDefault131,3638
    toolLink,     ///<  The link tool lets the user create links between objects.toolLink133,3770
    toolPan,      ///<  The pan tool allows the user to move to move the viewport.toolPan134,3852
    toolLasso,    ///<  The lasso tool allows for advanced selection via a ploygon.toolLasso135,3935
  enum KeyModifierKeyModifier141,4114
    keyNoKey = 0x00, ///<  No keys are being pressed.keyNoKey143,4137
    keyShift = 0x01, ///<  The shift key is pressed.keyShift144,4191
    keyControl = 0x02, ///<  The control key is pressed.keyControl145,4244
    keyAlt = 0x04, ///<  The Alt key is pressed.keyAlt146,4301
  enum ActivityActivity153,4503
    actDefault,         ///<  Default: Add Items and move them around.actDefault155,4523
    actAddWire,         ///<  The user is adding wires.actAddWire156,4594
    actSelectGroup,     ///<  The user is selecting items to create a group.actSelectGroup157,4650
    actDelete,          ///<  The user is removing items.actDelete158,4727
  typedef std::vector<LinkCanvasItem*> WiresList;WiresList164,4825
  MinskyDoc& document;   ///<  The document.document167,4885
  MouseTool mouseTool;        ///<  The currently selected mouse tool.mouseTool168,4930
  Activity activity;activity169,5001
  Selection selection;        ///<  The current selection.selection170,5022
  KeyModifier keyModifier;    ///<  The keys currently pressed by the user.keyModifier171,5081
  Wt::Coordinates mousePos0;  ///<  Position of the mouse at the beginningmousePos0172,5157
  Wt::Coordinates mousePos;   ///<  Latest known mouse position.mousePos174,5294
  WiresList affectedWires;    ///<  List of wires affected by a move operation.affectedWires176,5360
  ModelWidgets widgets;       ///<  Items to draw, including wires.widgets182,5478
  ModelPlotWidgets plots;     ///<  Plots have no ID, but a name and need a differentplots183,5546
  LinkCanvasOverlayPtr linkOverlay;         ///< overlay to let the user position control points.linkOverlay189,5713
  WireEventAreaPtr     wireEventArea;       ///< Area to catch wire events.  Wires share this areawireEventArea190,5811
  RectSelectionOverlayPtr selectionOverlay; ///< this overlay allows selection within a rectangle.selectionOverlay198,6132
  WireCreateOverlayPtr    addWireOverlay;   ///< this overlay allows user to add wire links between objects.addWireOverlay199,6231
  DeleteItemsOverlayPtr   deleteItemsOverlay; ///<  this overlay allows user to remove items from the model.deleteItemsOverlay200,6340
  DisablingOverlayPtr     disablingOverlay; ///< Disables mouse acces to canvas items.disablingOverlay201,6449
  inline LinkCanvasOverlayPtr setLinkOverlay(LinkCanvasItem* item)setLinkOverlay266,8040
  inline LinkCanvasOverlayPtr getLinkOverlay()getLinkOverlay275,8251
  inline RectSelectionOverlayPtr createSelectionOverlay()createSelectionOverlay285,8477
  inline void destroySelectionOverlay()destroySelectionOverlay298,8771
  inline AbstractCanvasItem* getItem(MinskyDoc::ObjectId id)getItem347,9827

gui-wt/wireCreateOverlay.cc,469
namespace minsky { namespace gui {minsky28,892
namespace minsky { namespace gui {gui28,892
WireCreateOverlay::WireCreateOverlay(CanvasView* _parent)WireCreateOverlay30,928
WireCreateOverlay::~WireCreateOverlay()~WireCreateOverlay76,2287
CanvasView* WireCreateOverlay::parent()parent79,2332
int WireCreateOverlay::from ()from84,2436
int WireCreateOverlay::to ()to89,2491
void WireCreateOverlay::paintEvent(Wt::WPaintDevice* paintDevice)paintEvent94,2542

gui-wt/fileLoader.h,197
#define FILELOADER_H_FILELOADER_H_21,746
namespace minsky { namespace gui {minsky26,821
namespace minsky { namespace gui {gui26,821
class FileLoader: public Wt::WFileUploadFileLoader28,859

gui-wt/tempCairoImageFile.h,425
#define TEMPCAIROIMAGEFILE_H_TEMPCAIROIMAGEFILE_H_21,734
namespace minsky { namespace gui {minsky28,847
namespace minsky { namespace gui {gui28,847
class TempCairoImageFileTempCairoImageFile35,1047
  struct pngWriteExceptionpngWriteException38,1082
  std::string id;   ///< Unique ID.id43,1185
  Wt::WPainter::Image* image;   ///< Wt image.image44,1221
  inline Wt::WPainter::Image* getImage()getImage75,1673

gui-wt/server-main.cc,625
# define MINSKY_VERSION MINSKY_VERSION31,1005
class CommandLineOptionsCommandLineOptions44,1271
  unsigned int httpPort;httpPort47,1306
  string httpAddr;httpAddr48,1331
  string docRoot;docRoot49,1350
  bool quiet;quiet50,1368
  string wtConfig;wtConfig51,1382
  int64_t maxMemoryRequestSize;maxMemoryRequestSize52,1401
  inline CommandLineOptions ()CommandLineOptions55,1442
CommandLineOptions cmdLineOpts;cmdLineOpts65,1640
static void initCmdLineOptions()initCmdLineOptions67,1673
static int processCmdLine(int argc, char** argv)processCmdLine93,2714
int main(int argc, char **argv)main159,3878

gui-wt/wtGeometry.cc,1806
namespace minsky { namespace gui {minsky24,768
namespace minsky { namespace gui {gui24,768
# define M_PI M_PI28,858
void rotate(Polygon& polygon, double angle, const Wt::WPointF& center)rotate32,906
void rotate(Polygon& polygon, double angle)rotate41,1129
void rotate(Wt::WPointF& point, double angle, const Wt::WPointF& center)rotate50,1308
void rotate(Wt::WPointF& point, double angle)rotate63,1625
void rotate(Polygon& polygon, const Wt::WRectF& rect, double angle, const Wt::WPointF& center)rotate76,1880
void rotate(Polygon& polygon, const Wt::WRectF& rect, double angle)rotate88,2300
void translate(Polygon& polygon, const Wt::WPointF& offset)translate100,2685
void extents(double& left, double& top, double& right, double& bottom, const Polygon& polygon)extents109,2884
void extents(Wt::WRectF& rect, const Polygon& polygon)extents133,3478
void scale(Polygon& polygon, double factor, const Wt::WPointF& center)scale142,3681
void scale(Polygon& polygon, double factor)scale151,3905
void scale(Wt::WPointF& point, double factor, const Wt::WPointF& center)scale160,4087
  size_t _quadBezierCurve (PointsList& curve, int nPoints, const Wt::WPointF& p0,_quadBezierCurve173,4396
void quadBezierCurve (PointsList& curve, int nPoints, const Wt::WPointF& p0,quadBezierCurve203,5098
void quadBezierLine (PointsList& curve, int nPoints, const PointsList& controlPoints)quadBezierLine214,5386
void createPolygonArounPolyline(Polygon& poly, const double& width, const PointsList line)createPolygonArounPolyline258,6367
double distanceSquared(const Wt::WPointF& p0, const Wt::WPointF& p1)distanceSquared337,8200
double distance(const Wt::WPointF& p0, const Wt::WPointF& p1)distance343,8367
void rectToPolygon(Polygon& poly, const Wt::WRectF& rect)rectToPolygon348,8474

gui-wt/constantPropertiesDlg.h,722
#define CONSTANTPROPERTIESDLG_H_CONSTANTPROPERTIESDLG_H_21,737
namespace minsky { namespace gui {minsky26,835
namespace minsky { namespace gui {gui26,835
class ConstantPropertiesDlg: public OperationPropertiesDlgConstantPropertiesDlg28,871
  typedef OperationPropertiesDlg _base_class;_base_class31,941
  struct wrongOperationTypewrongOperationType34,996
  Wt::WString name;name39,1100
  double value = 0;value40,1120
  double sliderMin = -1;sliderMin41,1140
  double sliderMax = 1;sliderMax42,1165
  double sliderStepSize = 0.1;sliderStepSize43,1189
  bool   sliderIsRelative = false;sliderIsRelative44,1220
  bool   showSlider = false;showSlider45,1255
  inline Constant* getOp()getOp67,1568

gui-wt/displaySettings.h,3144
#define DISPLAYSETTINGS_HDISPLAYSETTINGS_H21,718
namespace minsky { namespace gui {minsky29,848
namespace minsky { namespace gui {gui29,848
class DisplaySettingsDisplaySettings33,936
  static const Wt::WColor canvasViewBackColor;canvasViewBackColor36,968
  static const Wt::WColor bezierSummitColor;bezierSummitColor37,1015
  static const Wt::WColor bezierPassThroughColor;bezierPassThroughColor38,1060
  static const Wt::WColor wireColor;wireColor39,1110
  static const Wt::WColor bevelInNorthColor;bevelInNorthColor40,1147
  static const Wt::WColor bevelInSouthColor;bevelInSouthColor41,1192
  static const Wt::WColor bevelInEastColor;bevelInEastColor42,1237
  static const Wt::WColor bevelInWestColor;bevelInWestColor43,1281
  static const Wt::WColor& bevelOutNorthColor;bevelOutNorthColor44,1325
  static const Wt::WColor& bevelOutSouthColor;bevelOutSouthColor45,1372
  static const Wt::WColor& bevelOutEastColor;bevelOutEastColor46,1419
  static const Wt::WColor& bevelOutWestColor;bevelOutWestColor47,1465
  static const Wt::WColor                sliderTrackColor;sliderTrackColor49,1512
  static const Wt::WColor                sliderTickMarkColor;sliderTickMarkColor50,1571
  static const Wt::WColor                sliderThumbColor;sliderThumbColor51,1633
  static const Wt::WFont::GenericFamily  sliderLabelFontFamily;sliderLabelFontFamily52,1692
  static const Wt::WFont::Weight         sliderLabelFontWeight;sliderLabelFontWeight53,1756
  static const Wt::WLength               sliderLabelFontSize;sliderLabelFontSize54,1820
  static const double defaultZoom;          ///<  default zoom.defaultZoom56,1883
  static const double minZoomFactor;        ///<  minimum zoom factor for canvasminZoomFactor57,1947
  static const double maxZoomFactor;        ///<  maximum zoom factor for canvasmaxZoomFactor58,2028
  static const double zoomFactorIncrement;  ///<  increment to the zoom factor via the zoom buttonszoomFactorIncrement59,2109
  enum zIndexzIndex65,2350
    widgetZIndex = -140,              ///<  z-index for widgetswidgetZIndex67,2368
    wireZIndex = -145,                //<  z-index for wireswireZIndex68,2432
    wireEventAreaZIndex = wireZIndex + 1, ///<  z-index for Wire event area.wireEventAreaZIndex69,2493
    dialogZIndex = -50,              ///<  z-index for dialogsdialogZIndex70,2570
    bezierSummitZIndex = -100,        ///<  z-index for bezier summit handles.bezierSummitZIndex71,2633
    bezierPassThroughZIndex = -110,   ///<  z-index for bezier passthrough point handles.bezierPassThroughZIndex72,2712
    sliderZIndex = -135,              ///<  z-index for slider widgetssliderZIndex73,2802
    selectionOverlayZIndex = 0,   ///<  z-indedx for the selection overlayselectionOverlayZIndex74,2873
    wireCreateZIndex = 0,         ///<  Wire creation overlay z-indexwireCreateZIndex76,3015
    deleteItemsOverlayZIndex = 0, ///<  Items delete overlay. @see DeleteItemsOverlay.deleteItemsOverlayZIndex78,3148
    disableItemsOverlay = 0,      ///<  Items disable overlay z index. @see DisablingOverlay.disableItemsOverlay79,3235

gui-wt/plotDlg.cc,806
namespace minsky { namespace gui {minsky28,876
namespace minsky { namespace gui {gui28,876
LargePlotWidget::LargePlotWidget(int _plotId,LargePlotWidget30,912
LargePlotWidget::~LargePlotWidget()~LargePlotWidget46,1309
void LargePlotWidget::reset()reset50,1350
void LargePlotWidget::layoutSizeChanged(int newWidth,int newHeight)layoutSizeChanged55,1397
void LargePlotWidget::paintEvent(WPaintDevice *paintDevice)paintEvent60,1482
PlotDlg::PlotDlg(int _plotId, MinskyDoc& doc)PlotDlg70,1729
PlotDlg::~PlotDlg()~PlotDlg98,2525
void PlotDlg::done(Wt::WDialog::DialogCode r)done101,2550
void PlotDlg::docHasChanged(AbstractView* source, MinskyDoc::Hint hint, const AnyParams& data)docHasChanged107,2640
void PlotDlg::layoutSizeChanged(int newWidth,int newHeight)layoutSizeChanged134,3159

gui-wt/variablePropertiesDlg.cc,516
namespace minsky { namespace gui {minsky26,836
namespace minsky { namespace gui {gui26,836
class VariableNameValidator : public Validator<WString>VariableNameValidator30,893
  virtual bool validate(WString& value)validate33,959
VariablePropertiesDlg::VariablePropertiesDlg(VariablePtr _var)VariablePropertiesDlg50,1229
VariablePropertiesDlg::~VariablePropertiesDlg()~VariablePropertiesDlg60,1464
void VariablePropertiesDlg::initialize()initialize64,1517
void VariablePropertiesDlg::save()save74,1850

gui-wt/canvasView.cc,3654
namespace minsky { namespace gui {minsky41,1273
namespace minsky { namespace gui {gui41,1273
CanvasView::CanvasView(MinskyDoc& doc, WContainerWidget* parent) :CanvasView45,1334
CanvasView::~CanvasView()~CanvasView59,1739
void CanvasView::initialize()initialize73,2089
void CanvasView::clear()clear82,2272
bool CanvasView::moveItem(AbstractCanvasItem& item,moveItem103,2638
WireEventAreaPtr CanvasView::getWireEventArea()getWireEventArea214,5987
void CanvasView::groupRect(const Wt::WRectF rect)groupRect227,6251
void CanvasView::enableItems()enableItems233,6362
void CanvasView::disableItems()disableItems241,6491
void CanvasView::auditSelection()auditSelection249,6634
void CanvasView::copySelectionToClipBoard()copySelectionToClipBoard253,6677
void CanvasView::editCopyImpl()editCopyImpl259,6809
void CanvasView::editCutImpl()editCutImpl264,6881
void CanvasView::editPasteImpl()editPasteImpl270,6975
void CanvasView::setActivity(Activity act)setActivity275,7028
void CanvasView::deleteItem(AbstractCanvasItem* item)deleteItem311,7809
void CanvasView::addOperation(minsky::OperationType::Type opType)addOperation348,8811
void CanvasView::addGodleyTable()addGodleyTable371,9447
void CanvasView::addPlotWidget()addPlotWidget383,9801
void CanvasView::addVariable()addVariable392,10036
void CanvasView::addWire(int from, int to)addWire412,10556
void CanvasView::docHasChanged(AbstractView* source, MinskyDoc::Hint hint,docHasChanged430,10987
void CanvasView::scanAndLoadDocument()scanAndLoadDocument494,12560
void CanvasView::loadOperation(ObjectId id, OperationPtr op)loadOperation558,14115
void CanvasView::loadWire(ObjectId id, Wire& wire)loadWire564,14282
void CanvasView::loadPlot(int name, PlotWidget& plot)loadPlot570,14435
void CanvasView::loadGodleyIcon(ObjectId id, minsky::GodleyIcon& table)loadGodleyIcon576,14593
void CanvasView::loadVariable(ObjectId id, minsky::VariablePtr var)loadVariable582,14776
void CanvasView::loadGroup(ObjectId id, GroupIcon& icon)loadGroup588,14945
void CanvasView::invalidate()invalidate594,15098
void CanvasView::clickedToolDefault()clickedToolDefault627,15831
void CanvasView::clickedToolLink()clickedToolLink632,15906
void CanvasView::clickedToolLasso()clickedToolLasso637,15978
void CanvasView::clickedToolPan()clickedToolPan642,16055
void CanvasView::clickedZoomIn()clickedZoomIn647,16125
void CanvasView::clickedZoomOut()clickedZoomOut652,16216
void CanvasView::clickedZoomReset()clickedZoomReset657,16309
void CanvasView::clickedPlot()clickedPlot663,16468
void CanvasView::layoutSizeChanged(int width, int height)layoutSizeChanged668,16510
void CanvasView::computeModelExtents()computeModelExtents675,16675
void CanvasView::adjustViewPos()adjustViewPos688,17001
void CanvasView::forAllViewObjects(forAllViewObjects720,17772
void CanvasView::forAllViewObjects(forAllViewObjects750,18507
void CanvasView::getAttachedWires(WiresList& wiresList, const AbstractCanvasItem& item)getAttachedWires780,19284
void CanvasView::auditModel()auditModel802,20034
void CanvasView::deleteItemsNotInModel()deleteItemsNotInModel808,20130
void CanvasView::createItemsNotRendered()createItemsNotRendered908,23165
bool CanvasView::isVisible(const GroupIcon& group)isVisible965,24809
bool CanvasView::isVisible(const PlotWidget& plot)isVisible971,24975
bool CanvasView::isVisible(const OperationPtr op)isVisible976,25051
bool CanvasView::isVisible(const VariablePtr var)isVisible981,25172
bool CanvasView::isVisible(const GodleyIcon& icon)isVisible986,25295
bool CanvasView::isVisible(const Wire& wire)isVisible991,25371

gui-wt/globalPreferencesPropDlg.h,348
#define GLOBALPREFERENCESPROPDLG_H_GLOBALPREFERENCESPROPDLG_H_21,740
namespace minsky { namespace gui {minsky26,836
namespace minsky { namespace gui {gui26,836
class GlobalPreferencesPropDlg: public PropertiesDlgGlobalPreferencesPropDlg28,872
  typedef PropertiesDlg _base_class;_base_class31,936
  GlobalPreferences& prefs;prefs33,974

gui-wt/rectSelectionOverlay.cc,478
namespace minsky { namespace gui {minsky28,876
namespace minsky { namespace gui {gui28,876
RectSelectionOverlay::RectSelectionOverlay(CanvasView* _parent)RectSelectionOverlay30,912
RectSelectionOverlay::~RectSelectionOverlay()~RectSelectionOverlay73,2058
CanvasView* RectSelectionOverlay::parent()parent76,2109
Wt::WRectF RectSelectionOverlay::rectangle() constrectangle81,2216
void RectSelectionOverlay::paintEvent(Wt::WPaintDevice* paintDevice)paintEvent88,2404

gui-wt/abstractCanvasItem.cc,1519
namespace minskyminsky30,961
namespace guigui32,982
AbstractCanvasItem::AbstractCanvasItem(MinskyDoc::ObjectId _id,AbstractCanvasItem37,1025
AbstractCanvasItem::~AbstractCanvasItem()~AbstractCanvasItem46,1292
CanvasView* AbstractCanvasItem::parent()parent50,1343
const CanvasView* AbstractCanvasItem::parent() constparent55,1453
void AbstractCanvasItem::initInteractive()initInteractive60,1581
WRectF AbstractCanvasItem::getModelRect() constgetModelRect140,3628
void AbstractCanvasItem::getShapeOutline(Polygon& poly) constgetShapeOutline149,3933
void AbstractCanvasItem::showContextMenu(const Wt::WMouseEvent& event)showContextMenu154,4028
bool AbstractCanvasItem::initPopupMenu(Wt::WPopupMenu& menu)initPopupMenu173,4370
void AbstractCanvasItem::resize(const WLength& width, const WLength& height)resize194,4844
void AbstractCanvasItem::moveTo(const double& x, const double& y)moveTo199,4969
void AbstractCanvasItem::adjustWidgetPos()adjustWidgetPos207,5214
void AbstractCanvasItem::setSelected(SelectionStatus sel,setSelected217,5364
void AbstractCanvasItem::beginMoveWithMouse(const WMouseEvent& event)beginMoveWithMouse230,5571
void AbstractCanvasItem::updateMoveWithMouse(const WMouseEvent& event)updateMoveWithMouse246,5950
void AbstractCanvasItem::endMoveWithMouse(const WMouseEvent& event)endMoveWithMouse268,6467
void AbstractCanvasItem::cancelMoveWithMouse()cancelMoveWithMouse288,6956
void AbstractCanvasItem::paintEvent (WPaintDevice *paintDevice)paintEvent301,7175

gui-wt/globalPreferencesPropDlg.cc,899
namespace minsky { namespace gui {minsky23,767
namespace minsky { namespace gui {gui23,767
class GodleyOutputStylePropertyComboBoxGodleyOutputStylePropertyComboBox25,803
  virtual void create(const Wt::WString& label, Wt::WLayout* parentLayout)create29,920
  virtual bool setValue(const GlobalPreferences::GodleyOutputStyle& val)setValue62,1912
  virtual bool getValue(GlobalPreferences::GodleyOutputStyle& val)getValue74,2186
  static int enumToIndex(GlobalPreferences::GodleyOutputStyle val)enumToIndex87,2463
  static GlobalPreferences::GodleyOutputStyle indexToEnum(int index)indexToEnum100,2708
GlobalPreferencesPropDlg::GlobalPreferencesPropDlg(GlobalPreferences& _prefs, WObject* _parent)GlobalPreferencesPropDlg114,2960
GlobalPreferencesPropDlg::~GlobalPreferencesPropDlg()~GlobalPreferencesPropDlg119,3105
void GlobalPreferencesPropDlg::initialize()initialize122,3164

gui-wt/remoteClipBoard.cc,403
namespace minsky { namespace gui {minsky11,155
namespace minsky { namespace gui {gui11,155
RemoteClipBoard::RemoteClipBoard()RemoteClipBoard19,294
RemoteClipBoard::~RemoteClipBoard()~RemoteClipBoard24,355
void RemoteClipBoard::insert(const DataChunk& data)insert28,400
bool RemoteClipBoard::get(DataChunk& data)get34,499
bool RemoteClipBoard::contains(const DataChunk& data)contains48,691

gui-wt/godleyTableDlg.h,609
#define _GODLEYTABLEDLG_H_GODLEYTABLEDLG_H21,730
#undef NoneNone26,824
namespace minsky { namespace gui {minsky32,939
namespace minsky { namespace gui {gui32,939
class GodleyTableDlg :GodleyTableDlg40,1042
  enum SizeConstants {SizeConstants49,1214
    defaultMinWidth = 100,defaultMinWidth50,1237
    defaultMinHeight = 100,defaultMinHeight51,1264
  MinskyDoc::ObjectId tableId;      ///< The table ID.tableId55,1307
  GodleyTableWidget* tableWidget;   ///< table edit widget. Pointer owned by WttableWidget56,1362
  CanvasView* parentView;           ///< Parent view.parentView57,1442

gui-wt/linkCanvasItem.h,688
#define LINKCANVASITEM_H_LINKCANVASITEM_H_21,750
#undef NoneNone26,859
namespace minsky { namespace gui {minsky30,922
namespace minsky { namespace gui {gui30,922
class LinkCanvasItem: public AbstractCanvasItemLinkCanvasItem37,1059
  typedef std::shared_ptr<Wt::WAbstractArea> AreaPtr;AreaPtr40,1120
  minsky::Wire& wire;wire46,1236
  PointsList lineSegments;lineSegments51,1324
  AreaPtr area;area56,1432
  inline minsky::Wire& getWire()getWire78,1887
class WireEventArea: public Wt::WPaintedWidgetWireEventArea146,3537
  typedef Wt::WPaintedWidget _base_class;_base_class149,3598
typedef std::shared_ptr<WireEventArea> WireEventAreaPtr;WireEventAreaPtr172,4038

gui-wt/scrollBarArea.cc,1923
namespace minsky { namespace gui {minsky26,828
namespace minsky { namespace gui {gui26,828
ScrollBarArea::ScrollBarArea(WContainerWidget *_parent)ScrollBarArea28,864
ScrollBarArea::~ScrollBarArea()~ScrollBarArea53,1277
void ScrollBarArea::initialize()initialize74,1866
WPointF ScrollBarArea::modelToDevice(const WPointF& modelCoords) constmodelToDevice106,2614
WPointF ScrollBarArea::deviceToModel(const WPointF& deviceCoords) constdeviceToModel111,2747
WPointF ScrollBarArea::modelToScreen(const WPointF& modelCoords, bool applyOffset) constmodelToScreen116,2882
WPointF ScrollBarArea::screenToModel(const WPointF& screenCoords, bool applyOffset) constscreenToModel126,3136
WRectF ScrollBarArea::modelToScreen(const WRectF& rect) constmodelToScreen136,3393
WRectF ScrollBarArea::screenToModel(const WRectF& rect) constscreenToModel144,3641
WRectF ScrollBarArea::getViewport() constgetViewport152,3889
bool ScrollBarArea::setZoom (double _zoomFactor, double xCenter, double yCenter)setZoom158,4053
bool ScrollBarArea::canZoomIn() constcanZoomIn186,4785
bool ScrollBarArea::canZoomOut() constcanZoomOut195,4964
void ScrollBarArea::zoomAll()zoomAll200,5064
void ScrollBarArea::scrollTo(double x, double y, bool force)scrollTo205,5110
void ScrollBarArea::scrollIntoView(const Wt::WRectF rect)scrollIntoView216,5433
void ScrollBarArea::setModelRect (double left, double top, double right, double bottom, bool keepScrollPos)setModelRect247,6028
void ScrollBarArea::addRectToModel(const Wt::WRectF& rect, bool keepScrollPos)addRectToModel282,7511
WPointF ScrollBarArea::getScreenCenter() constgetScreenCenter292,7794
void ScrollBarArea::setViewportSize(int width, int height)setViewportSize299,7979
void ScrollBarArea::resize (const double& cx, const double& cy)resize310,8231
void ScrollBarArea::setDeviceScrollPos(const Wt::WPointF& newPos, bool force)setDeviceScrollPos316,8400

gui-wt/resource.h,0

gui-wt/tempCairoImageFile.cc,515
namespace minsky { namespace gui {minsky25,821
namespace minsky { namespace gui {gui25,821
TempCairoImageFile::TempCairoImageFile(cairo_surface_t* surface)TempCairoImageFile29,893
TempCairoImageFile::~TempCairoImageFile()~TempCairoImageFile43,1223
std::string TempCairoImageFile::fileName() constfileName48,1286
std::string TempCairoImageFile::url() consturl60,1520
void TempCairoImageFile::deleteFile()deleteFile72,1708
std::string TempCairoImageFile::generateUniqueName()generateUniqueName85,1857

gui-wt/godleyTableDlg.cc,389
namespace minsky { namespace gui {minsky35,1073
namespace minsky { namespace gui {gui35,1073
GodleyTableDlg::GodleyTableDlg(MinskyDoc::ObjectId _tableId, CanvasView* _parentView)GodleyTableDlg39,1130
GodleyTableDlg::~GodleyTableDlg()~GodleyTableDlg98,3316
void GodleyTableDlg::docHasChanged(AbstractView* source, MinskyDoc::Hint hint, const AnyParams& data)docHasChanged101,3355

gui-wt/operationPropertiesDlg.h,564
#define OPERATIONPROPERTIESDLG_H_OPERATIONPROPERTIESDLG_H_21,738
namespace minsky { namespace gui {minsky26,828
namespace minsky { namespace gui {gui26,828
class OperationPropertiesDlg: public PropertiesDlgOperationPropertiesDlg32,989
  typedef PropertiesDlg _base_class;_base_class35,1051
  OperationPtr operation; ///<  Operation beign edited.operation38,1098
  double rotation  = 0;   ///<  Rotation on canvasrotation39,1154
  bool  flipped = false;  ///<  true if mirrored on canvas.flipped40,1205
  inline OperationBase* getOp()getOp62,1645

gui-wt/godleyCanvasItem.h,564
#define GODLEYCANVASITEM_H_GODLEYCANVASITEM_H_21,732
namespace minsky { namespace gui {minsky27,850
namespace minsky { namespace gui {gui27,850
class GodleyCanvasItem: public minsky::gui::AbstractCanvasItemGodleyCanvasItem29,886
  minsky::GodleyIcon& icon;           ///< Associated model itemicon32,960
  GodleyTableDlg* editDialog = NULL;  ///< Weak pointer to edit dialog if any, the pointer is managed by Wt.editDialog33,1025
  inline minsky::GodleyIcon& getIcon()getIcon58,1640
  inline const minsky::GodleyIcon& getIcon() constgetIcon63,1705

gui-wt/dialog.cc,185
namespace minsky { namespace gui {minsky22,746
namespace minsky { namespace gui {gui22,746
Dialog::Dialog(const WString& windowTitle)Dialog26,807
Dialog::~Dialog()~Dialog33,934

gui-wt/godleyCanvasItem.cc,599
namespace minsky { namespace gui {minsky28,895
namespace minsky { namespace gui {gui28,895
GodleyCanvasItem::GodleyCanvasItem(MinskyDoc::ObjectId id, minsky::GodleyIcon& _icon, CanvasView* parent)GodleyCanvasItem30,931
GodleyCanvasItem::~GodleyCanvasItem()~GodleyCanvasItem44,1305
void GodleyCanvasItem::getModelPos(double& x, double& y) constgetModelPos52,1400
bool GodleyCanvasItem::editProperties()editProperties58,1500
void GodleyCanvasItem::getPortsList(PortsList& ports) constgetPortsList73,1855
void GodleyCanvasItem::draw(CanvasPainter& painter, Polygon& outline)draw85,2106

gui-wt/toolbarBase.cc,165
namespace minsky { namespace gui {minsky24,782
namespace minsky { namespace gui {gui24,782
ToolbarBase::ToolbarBase(WContainerWidget* parent)ToolbarBase26,818

gui-wt/integralPropertiesDlg.h,492
#define INTEGRALPROPERTIESDLG_H_INTEGRALPROPERTIESDLG_H_21,737
namespace minsky { namespace gui {minsky26,835
namespace minsky { namespace gui {gui26,835
class IntegralPropertiesDlg: public OperationPropertiesDlgIntegralPropertiesDlg28,871
  typedef OperationPropertiesDlg _base_class;_base_class31,941
  struct wrongOperationTypewrongOperationType34,996
  Wt::WString varName;varName39,1100
  double initialValue = 0;initialValue40,1123
  inline IntOp* getOp()getOp49,1273

gui-wt/propertiesDlg.h,4115
#define _PROPERTIESDLG_H_PROPERTIESDLG_H21,717
namespace minsky { namespace gui {minsky35,1003
namespace minsky { namespace gui {gui35,1003
class AbstractPropertyControlAbstractPropertyControl41,1070
  typedef Wt::WContainerWidget _base_class;_base_class45,1143
  virtual ~AbstractPropertyControl()~AbstractPropertyControl49,1197
class PropertyControlPropertyControl63,1463
  typedef AbstractPropertyControl _base_class;_base_class67,1531
  Wt::WWebWidget* valueWidget; ///< Value widget, pointer belongs to Wt.valueWidget70,1590
  virtual ~PropertyControl()~PropertyControl74,1673
  virtual bool getValue(void* val)getValue84,1882
  virtual bool setValue(const void* val)setValue89,1970
class LineEditPropertyControlLineEditPropertyControl99,2129
  typedef PropertyControl<T> _base_class;_base_class103,2200
  virtual ~LineEditPropertyControl()~LineEditPropertyControl107,2252
  virtual void create(const Wt::WString& label, Wt::WLayout* parentLayout)create110,2296
  virtual bool setValue(const T& val)setValue136,3120
  virtual bool getValue(T& val)getValue144,3308
class CheckBoxPropertyControlCheckBoxPropertyControl158,3649
  virtual ~CheckBoxPropertyControl()~CheckBoxPropertyControl162,3724
  virtual void create(const Wt::WString& label, Wt::WLayout* parentLayout)create165,3768
  virtual bool setValue(const bool& val)setValue191,4483
  virtual bool getValue(bool& val)getValue197,4649
class AbstractValidatorAbstractValidator207,4824
  virtual ~AbstractValidator() { }~AbstractValidator210,4858
class ValidatorValidator219,5019
  virtual ~Validator() { }~Validator223,5076
  virtual bool validate(void* value)validate231,5213
class NullValidatorNullValidator240,5334
  virtual ~NullValidator()~NullValidator244,5395
  virtual bool validate(void*)validate247,5429
class MinMaxValidator: public Validator<T>MinMaxValidator257,5536
  T minVal;minVal260,5590
  T maxVal;maxVal261,5602
  MinMaxValidator(const T& _minVal, const T& _maxVal) :MinMaxValidator264,5623
  virtual ~MinMaxValidator()~MinMaxValidator268,5725
  virtual bool validate(T& val)validate271,5761
class ProcValidator : public Validator<T>ProcValidator281,5903
  typedef boost::function<bool(T&)> Procedure;Procedure284,5955
  Procedure userProc;userProc287,6012
  ProcValidator(Procedure _userProc)ProcValidator290,6043
  virtual ~ProcValidator()~ProcValidator293,6111
  virtual bool validate(T& val)validate296,6145
class AbstractPropertyAbstractProperty305,6241
  Wt::WString label;label308,6274
  AbstractValidator*        validator;validator309,6295
  AbstractPropertyControl*  editor;   ///<  pointer belongs to Wteditor310,6334
  AbstractProperty(const Wt::WString& _label,AbstractProperty313,6412
  virtual ~AbstractProperty()~AbstractProperty322,6649
class Property: public AbstractPropertyProperty338,6890
  T& value;value341,6940
  Property(const Wt::WString& _label, T& _value,Property343,6953
  PropertyControl<T>* widget()widget349,7164
  virtual bool validate()validate354,7258
  virtual void createControl(Wt::WLayout* parentLayout)createControl367,7488
  virtual void save()save373,7627
class PropertiesDlg: public Wt::Ext::DialogPropertiesDlg385,7782
  typedef Wt::Ext::Dialog _base_class;_base_class388,7837
  typedef std::shared_ptr<AbstractProperty> PropertyPtr;PropertyPtr391,7888
  typedef std::vector<PropertyPtr> Properties;Properties393,7946
  Properties properties;properties396,8003
  void addProperty(const Wt::WString& label, bool& value, AbstractPropertyControl* widget = NULL)addProperty423,8455
  void addProperty(const Wt::WString& label, T& value, AbstractPropertyControl* widget)addProperty437,8894
  void addProperty(const Wt::WString& label, T& value)addProperty448,9239
  void addProperty(const Wt::WString& label, T& value,addProperty460,9621
  void addProperty(const Wt::WString& label, T& value,addProperty476,10125
  void addProperty(const Wt::WString& label, T& value, const T& minVal, const T& maxVal, AbstractPropertyControl* widget = NULL)addProperty492,10594

gui-wt/fileLoader.cc,207
namespace minsky { namespace gui {minsky22,750
namespace minsky { namespace gui {gui22,750
FileLoader::FileLoader(WContainerWidget* parent)FileLoader26,811
FileLoader::~FileLoader()~FileLoader32,896

gui-wt/operationCanvasItem.h,665
#define OPERATIONCANVASITEM_H_OPERATIONCANVASITEM_H_21,755
namespace minsky { namespace gui {minsky30,947
namespace minsky { namespace gui {gui30,947
class OperationCanvasItem: public AbstractCanvasItemOperationCanvasItem40,1179
  typedef AbstractCanvasItem _base_class;_base_class43,1245
  OperationPtr operation;           ///<  The model object this widget represents.operation46,1300
  SliderWidget* sliderWidget = NULL;///<  Slider widget for constant ops.sliderWidget47,1384
  inline minsky::OperationType::Type type() consttype74,2177
  inline OperationPtr getOp() constgetOp82,2332
  inline void sliderDestroyed()sliderDestroyed111,3056

gui-wt/cairoWidget.h,1513
#define CAIROWIDGET_H_CAIROWIDGET_H_21,727
#undef NoneNone24,775
namespace minsky { namespace gui {minsky30,902
namespace minsky { namespace gui {gui30,902
class CairoWidget: public Wt::WPaintedWidgetCairoWidget32,938
  typedef ecolab::cairo::Surface RasterBuffer;RasterBuffer38,1035
  typedef classdesc::shared_ptr<RasterBuffer> RasterBufferPtr;RasterBufferPtr43,1150
  typedef classdesc::shared_ptr<Wt::WPainter::Image> ImagePtr;ImagePtr48,1280
    defaultWidth = 200,defaultWidth52,1355
    defaultHeight = 200,defaultHeight53,1379
  RasterBufferPtr buffer;     ///<  The raster buffer on which drawing is done.buffer57,1419
  Wt::WRectArea* entireArea;  ///<  A rectangle that spans the entire widget,entireArea58,1499
  Wt::WRectF viewport;        ///<  The viewport rectangle in source imageviewport62,1799
  ImagePtr image;             ///<  Image object used for transfer to theimage64,1922
  int clientWidth;            ///<  Display window width in pixelsclientWidth66,2040
  int clientHeight;           ///<  Display window height in pixelsclientHeight67,2107
  boost::filesystem::path tmpFileName;  ///< temporary filename to transfer filestmpFileName68,2175
  inline unsigned int bitmapWidth() constbitmapWidth87,2542
  inline unsigned int bitmapHeight() constbitmapHeight92,2620
  void getViewport(double& x, double& y, double& width, double& height)getViewport100,2760
  void setViewport(double x, double y, double width, double height)setViewport111,2999

gui-wt/mainMenu.h,365
#define _MAINMENU_H_MAINMENU_H21,724
namespace minsky { namespace gui {minsky28,847
namespace minsky { namespace gui {gui28,847
class MainMenu : public Ext::ToolBarMainMenu47,1414
  struct cantLocateWidgetExceptioncantLocateWidgetException53,1550
  typedef MainMenu _this_class;_this_class61,1708
  typedef Ext::ToolBar _base_class;_base_class66,1788

gui-wt/variablePropertiesDlg.h,513
#define VARIABLEPROPERTIESDLG_H_VARIABLEPROPERTIESDLG_H_21,737
namespace minsky { namespace gui {minsky26,822
namespace minsky { namespace gui {gui26,822
class VariablePropertiesDlg: public PropertiesDlgVariablePropertiesDlg28,858
  typedef PropertiesDlg _base_class;_base_class31,919
  VariablePtr var;var34,966
  Wt::WString varName;varName35,985
  double      varValue    = 0;varValue36,1008
  double      varRotation = 0;varRotation37,1039
  bool        flipped     = false;flipped38,1070

gui-wt/deleteItemsOverlay.cc,562
namespace minsky { namespace gui {minsky33,986
namespace minsky { namespace gui {gui33,986
DeleteItemsOverlay::DeleteItemsOverlay(CanvasView* _parent)DeleteItemsOverlay35,1022
DeleteItemsOverlay::~DeleteItemsOverlay()~DeleteItemsOverlay44,1266
void DeleteItemsOverlay::initInteractive()initInteractive47,1313
void DeleteItemsOverlay::createItemDeleteArea(AbstractCanvasItem* item)createItemDeleteArea59,1516
CanvasView* DeleteItemsOverlay::parent()parent84,2162
void DeleteItemsOverlay::paintEvent(Wt::WPaintDevice* paintDevice)paintEvent89,2267

gui-wt/displaySettings.cc,2468
namespace minsky { namespace gui {minsky22,734
namespace minsky { namespace gui {gui22,734
const Wt::WColor DisplaySettings::canvasViewBackColor   = Wt::WColor(255, 255, 255);canvasViewBackColor24,770
const Wt::WColor DisplaySettings::bevelInNorthColor  = Wt::WColor(32, 32, 32);bevelInNorthColor26,856
const Wt::WColor DisplaySettings::bevelInSouthColor  = Wt::WColor(255, 255, 255);bevelInSouthColor27,935
const Wt::WColor DisplaySettings::bevelInEastColor   = Wt::WColor(240, 240, 240);bevelInEastColor28,1017
const Wt::WColor DisplaySettings::bevelInWestColor   = Wt::WColor(48, 48, 48);bevelInWestColor29,1099
const Wt::WColor& DisplaySettings::bevelOutNorthColor= DisplaySettings::bevelInSouthColor;bevelOutNorthColor30,1178
const Wt::WColor& DisplaySettings::bevelOutSouthColor= DisplaySettings::bevelInNorthColor;bevelOutSouthColor31,1269
const Wt::WColor& DisplaySettings::bevelOutEastColor = DisplaySettings::bevelInWestColor;bevelOutEastColor32,1360
const Wt::WColor& DisplaySettings::bevelOutWestColor = DisplaySettings::bevelInEastColor;bevelOutWestColor33,1450
const Wt::WColor                DisplaySettings::sliderTrackColor      = Wt::WColor(240, 240, 255);sliderTrackColor35,1541
const Wt::WColor                DisplaySettings::sliderTickMarkColor   = Wt::WColor(0, 0, 255);sliderTickMarkColor36,1641
const Wt::WColor                DisplaySettings::sliderThumbColor      = Wt::WColor(250, 250, 255);sliderThumbColor37,1737
const Wt::WFont::GenericFamily  DisplaySettings::sliderLabelFontFamily = Wt::WFont::SansSerif;sliderLabelFontFamily38,1837
const Wt::WFont::Weight         DisplaySettings::sliderLabelFontWeight = Wt::WFont::Bold;sliderLabelFontWeight39,1932
const Wt::WLength               DisplaySettings::sliderLabelFontSize   = Wt::WLength(10);sliderLabelFontSize40,2022
const Wt::WColor DisplaySettings::bezierSummitColor     = Wt::WColor(255, 0, 0);bezierSummitColor42,2113
const Wt::WColor DisplaySettings::bezierPassThroughColor= Wt::WColor(0, 0, 255);bezierPassThroughColor43,2194
const Wt::WColor DisplaySettings::wireColor             = Wt::WColor(0, 0, 0);wireColor44,2275
const double DisplaySettings::defaultZoom         = 1;defaultZoom46,2355
const double DisplaySettings::minZoomFactor       = .30;minZoomFactor47,2410
const double DisplaySettings::maxZoomFactor       = 10.;maxZoomFactor48,2467
const double DisplaySettings::zoomFactorIncrement = .25;zoomFactorIncrement49,2524

gui-wt/variableCanvasItem.h,453
#define VARIABLECANVASITEM_H_VARIABLECANVASITEM_H_21,734
namespace minsky { namespace gui {minsky26,822
namespace minsky { namespace gui {gui26,822
class VariableCanvasItem: public minsky::gui::AbstractCanvasItemVariableCanvasItem31,910
  typedef AbstractCanvasItem _base_class;_base_class34,985
  VariablePtr variable;         ///<  The model object this widget represents.variable37,1037
  inline VariablePtr getVar() constgetVar53,1358

gui-wt/integralPropertiesDlg.cc,703
namespace minsky { namespace gui {minsky24,792
namespace minsky { namespace gui {gui24,792
  class NameValidator : public Validator<WString>NameValidator29,861
    minsky::IntOp* integrate;   ///< Weak pointer to edited objectintegrate32,925
    NameValidator(IntOp* _integrate)NameValidator34,993
    virtual bool validate(WString& value)validate38,1069
IntegralPropertiesDlg::IntegralPropertiesDlg(OperationPtr op)IntegralPropertiesDlg61,1433
IntegralPropertiesDlg::~IntegralPropertiesDlg()~IntegralPropertiesDlg76,1783
void IntegralPropertiesDlg::initialize()initialize79,1836
bool IntegralPropertiesDlg::validate()validate93,2381
void IntegralPropertiesDlg::save()save107,2649

gui-wt/propertiesDlg.cc,820
namespace minsky { namespace gui {minsky27,856
namespace minsky { namespace gui {gui27,856
bool LineEditPropertyControl<Wt::WString>::setValue(const Wt::WString& val)setValue32,924
bool LineEditPropertyControl<Wt::WString>::getValue(Wt::WString& val)getValue40,1114
PropertiesDlg::PropertiesDlg(WObject* _parent /* = 0 */)PropertiesDlg46,1263
void PropertiesDlg::show()show52,1403
Ext::Dialog::DialogCode PropertiesDlg::exec()exec60,1531
void PropertiesDlg::initialize()initialize66,1628
bool PropertiesDlg::validate()validate90,2329
void PropertiesDlg::onOk()onOk105,2585
void PropertiesDlg::onCancel()onCancel121,2825
void PropertiesDlg::onOkStub()onOkStub129,2906
void PropertiesDlg::onCancelStub()onCancelStub137,2989
void PropertiesDlg::onFinished(DialogCode exitCode)onFinished142,3043

gui-wt/guiDefs.h,81
#define _GUIDEFS_H_GUIDEFS_H21,723
#define GUI_CATCH_ALL(GUI_CATCH_ALL31,993

gui-wt/wtGeometry.h,857
#define WTGEOMETRY_H_WTGEOMETRY_H_21,726
namespace minsky { namespace gui {minsky27,811
namespace minsky { namespace gui {gui27,811
typedef std::vector<Wt::WPointF>  PointsList;PointsList32,877
typedef PointsList  Polygon;Polygon37,967
typedef std::vector<Polygon> PolygonsList;PolygonsList42,1030
inline Wt::WPointF operator+ (const Wt::WPointF& a, const Wt::WPointF& b)operator +131,3257
inline Wt::WPointF operator- (const Wt::WPointF& a, const Wt::WPointF& b)operator -139,3424
inline Wt::WPointF operator* (const Wt::WPointF& a, const double& s)operator *148,3597
inline Wt::WPointF operator* (const double& s, const Wt::WPointF& a)operator *153,3715
inline Wt::WPointF operator/ (const Wt::WPointF& a, const double& s)operator /158,3833
inline Wt::WPointF midPoint(const Wt::WPointF& p0, const Wt::WPointF& p1)midPoint171,4135

gui-wt/plotCanvasItem.h,382
#define PLOTCANVASITEM_HPLOTCANVASITEM_H21,729
namespace minsky { namespace gui {minsky27,837
namespace minsky { namespace gui {gui27,837
class PlotCanvasItem : public AbstractCanvasItemPlotCanvasItem29,873
  ::minsky::PlotWidget& plot;plot32,933
  int name;name33,963
  const int getName() constgetName52,1214
  inline ::minsky::PlotWidget& getPlot()getPlot65,1459

gui-wt/cairoImageResource.cc,580
namespace minsky { namespace gui {minsky25,819
namespace minsky { namespace gui {gui25,819
CairoImageResource::CairoImageResource(WObject* parent)CairoImageResource29,880
CairoImageResource::~CairoImageResource()~CairoImageResource36,1019
void CairoImageResource::updateData(cairo_surface_t* surface)updateData40,1070
void CairoImageResource::handleRequest (const Http::Request &request, Http::Response &response)handleRequest46,1233
cairo_status_t CairoImageResource::writeToStream(void* closure, const unsigned char* data, unsigned int length)writeToStream98,2417

gui-wt/minskyDoc.h,5083
#define _MINSKYDOC_H_MINSKYDOC_H21,725
#undef NoneNone32,944
namespace minsky { namespace gui {minsky34,957
namespace minsky { namespace gui {gui34,957
class MinskyDocMinskyDoc64,2031
  struct emptyFileNameException :emptyFileNameException71,2158
    typedef int ObjectId;ObjectId75,2272
      invalidId = -1, ///<  Invalid ID.invalidId82,2352
      maxSimulationDelay = 500,maxSimulationDelay90,2459
      minSimulationDelay = 20,minSimulationDelay91,2491
    enum HintHint107,3017
      hintDocumentLoad,       ///< A new Document has been loaded.hintDocumentLoad109,3037
      hintDocumentClose,      ///< The document is about to unload, all viewshintDocumentClose110,3104
      hintDocumentSaved,      ///< Document has been saved.hintDocumentSaved112,3251
      hintDocumentModified,   ///< The document has been modified.  Sent only once onhintDocumentModified113,3311
      hintAddOperation,       ///< An operation was inserted in the model.hintAddOperation115,3452
      hintEditOperation,      ///< An operation's attributes are about to change.hintEditOperation117,3604
      hintRemoveOperation,    ///< An operation is about to be removed from the model.hintRemoveOperation119,3759
      hintMoveOperation,      ///< An operation has been moved.hintMoveOperation121,3918
      hintAddWire,            ///< A wire was added to the model.hintAddWire127,4377
      hintRemoveWire,         ///< A wire is about to be deleted.hintRemoveWire129,4497
      hintEditWire,           ///< A wire was edited.hintEditWire131,4617
      hintAddVariable,        ///< A variable was added to the model.hintAddVariable135,4881
      hintMoveVariable,       /// A variable was moved on the canvas.hintMoveVariable137,5009
      hintEditVariable,       ///< An variables's attributes are about to change.hintEditVariable143,5474
      hintRemoveVariable,     ///< A variable os about tyo be removed from the model.hintRemoveVariable145,5629
      hintAddGodleyTable,     ///< A Godley table was added to the model.hintAddGodleyTable147,5773
      hintMoveGodleyTable,    ///< A godley table (icon) has been moved.hintMoveGodleyTable149,5902
      hintEditGodleyTable,    ///< A godley table's attributes are about to change.hintEditGodleyTable155,6370
      hintRemoveGodleyTable,  ///< A Godley table is about to be deleted.hintRemoveGodleyTable157,6521
      hintGodleyCellChanged,  ///< A Godley table cell value has changed.hintGodleyCellChanged159,6650
      hintAddPlot,            ///<  A PlotWidget was added to the model.hintAddPlot164,6982
      hintMovePlot,           ///<  A plot widget was moved.hintMovePlot166,7124
      hintRemovePlot,         /// A Plot is about to be removed from the model.hintRemovePlot172,7580
      hintMoveGroup,          ///<  A group icon was moved.hintMoveGroup174,7727
      hintAddVariableToGroup, ///< A variable reference was inserted in a group.hintAddVariableToGroup180,8182
      hintRemoveVariableFromGroup,  ///< A variable reference is about to be removed from a group.hintRemoveVariableFromGroup183,8384
      hintAddOperationToGroup,      ///< An operation is being inserted in a group.hintAddOperationToGroup186,8616
      hintRemoveOperationFromGroup, ///< An operation is about to be removed from a group.hintRemoveOperationFromGroup189,8833
      hintAddGroupToGroup,      ///< A group is being nested into another.hintAddGroupToGroup192,9057
      hintRemoveGroupFromGroup, ///< A Group is being removed from another group.hintRemoveGroupFromGroup195,9300
      hintNewGroup,             ///<  A Group was created.hintNewGroup198,9550
      hintSimulationStep,       ///< A simulation step has been generated.hintSimulationStep200,9683
      hintSimulationReset,      ///< Simulation reset.hintSimulationReset201,9758
      hintSimulationHalted,     ///< Simulation was halted.hintSimulationHalted202,9813
      hintSimulationError,      ///< An error has occured during simulationhintSimulationError203,9873
  typedef std::map<std::string, std::string> Properties;Properties211,10029
  bool        autoFileName;     ///<  Indicates whether the filename was set byautoFileName214,10096
  std::string fileName;         ///<  The filename for this document.fileName216,10254
  inline minsky::Minsky& getModel()getModel243,10807
  inline const minsky::Minsky& getModel() constgetModel248,10873
  const std::string& getFileName()getFileName296,12144
  inline bool isModified() constisModified310,12401
  inline void setModified(bool hasChanged = true)setModified319,12594
  minsky::OperationPtr getOperation(ObjectId id)getOperation344,13011
  minsky::VariablePtr getVariable(ObjectId id)getVariable349,13107
  minsky::Wire& getWire(ObjectId id)getWire354,13200
  minsky::GodleyIcon& getGodleyTable(ObjectId id)getGodleyTable368,13456
  inline bool variableExists(const std::string& name) constvariableExists586,19332
  inline double getVariableValue(const std::string& varName) constgetVariableValue596,19582

gui-wt/resources/themes/polished/stripes/generate.sh,0

gui-wt/resources/themes/polished/no-stripes/generate.sh,0

gui-wt/resources/themes/default/stripes/generate.sh,0

gui-wt/resources/themes/default/no-stripes/generate.sh,0

gui-wt/resources/jPlayer/jquery.min.js,21143
(function(z,w){function la(){if(!c.isReady){try{s.documentElement.doScroll("left")}catch(a){setTimeout(la,1);return}c.ready()}}function Ia(a,b){b.src?c.ajax({url:b.src,async:false,dataType:"script"}):c.globalEval(b.text||b.textContent||b.innerHTML||"");b.parentNode&&b.parentNode.removeChild(b)}function Z(a,b,d,e,g,i){var k=a.length;if(typeof b==="object"){for(var o in b)Z(a,o,b[o],e,g,d);return a}if(d!==w){e=e&&c.isFunction(d);for(o=0;o<k;o++)g(a[o],b,e?d.call(a[o],o,g(a[o],b)):d,i);return a}return k?Ia16,374
(function(z,w){function la(){if(!c.isReady){try{s.documentElement.doScroll("left")}catch(a){setTimeout(la,1);return}c.ready()}}function Ia(a,b){b.src?c.ajax({url:b.src,async:false,dataType:"script"}):c.globalEval(b.text||b.textContent||b.innerHTML||"");b.parentNode&&b.parentNode.removeChild(b)}function Z(a,b,d,e,g,i){var k=a.length;if(typeof b==="object"){for(var o in b)Z(a,o,b[o],e,g,d);return a}if(d!==w){e=e&&c.isFunction(d);for(o=0;o<k;o++)g(a[o],b,e?d.call(a[o],o,g(a[o],b)):d,i);return a}return k?Z16,374
g(a[0],b):null}function M(){return(new Date).getTime()}function $(){return false}function aa(){return true}function ma(a,b,d){d[0].type=a;return c.event.handle.apply(b,d)}function na(a){var b=true,d=[],e=[],g=arguments,i,k,o,p,n,u=c.extend({},c.data(this,"events").live);for(p in u){k=u[p];if(k.live===a.type||k.altLive&&c.inArray(a.type,k.altLive)>-1){i=k.data;i.beforeFilter&&i.beforeFilter[a.type]&&!i.beforeFilter[a.type](a)||e.push(k.selector)}else delete u[p]}i=c(a.target).closest(e,a.currentTarget);M17,881
g(a[0],b):null}function M(){return(new Date).getTime()}function $(){return false}function aa(){return true}function ma(a,b,d){d[0].type=a;return c.event.handle.apply(b,d)}function na(a){var b=true,d=[],e=[],g=arguments,i,k,o,p,n,u=c.extend({},c.data(this,"events").live);for(p in u){k=u[p];if(k.live===a.type||k.altLive&&c.inArray(a.type,k.altLive)>-1){i=k.data;i.beforeFilter&&i.beforeFilter[a.type]&&!i.beforeFilter[a.type](a)||e.push(k.selector)}else delete u[p]}i=c(a.target).closest(e,a.currentTarget);$17,881
g(a[0],b):null}function M(){return(new Date).getTime()}function $(){return false}function aa(){return true}function ma(a,b,d){d[0].type=a;return c.event.handle.apply(b,d)}function na(a){var b=true,d=[],e=[],g=arguments,i,k,o,p,n,u=c.extend({},c.data(this,"events").live);for(p in u){k=u[p];if(k.live===a.type||k.altLive&&c.inArray(a.type,k.altLive)>-1){i=k.data;i.beforeFilter&&i.beforeFilter[a.type]&&!i.beforeFilter[a.type](a)||e.push(k.selector)}else delete u[p]}i=c(a.target).closest(e,a.currentTarget);aa17,881
g(a[0],b):null}function M(){return(new Date).getTime()}function $(){return false}function aa(){return true}function ma(a,b,d){d[0].type=a;return c.event.handle.apply(b,d)}function na(a){var b=true,d=[],e=[],g=arguments,i,k,o,p,n,u=c.extend({},c.data(this,"events").live);for(p in u){k=u[p];if(k.live===a.type||k.altLive&&c.inArray(a.type,k.altLive)>-1){i=k.data;i.beforeFilter&&i.beforeFilter[a.type]&&!i.beforeFilter[a.type](a)||e.push(k.selector)}else delete u[p]}i=c(a.target).closest(e,a.currentTarget);ma17,881
n=0;for(l=i.length;n<l;n++)for(p in u){k=u[p];o=i[n].elem;e=null;if(i[n].selector===k.selector){if(k.live==="mouseenter"||k.live==="mouseleave")e=c(a.relatedTarget).closest(k.selector)[0];if(!e||e!==o)d.push({elem:o,fn:k})}}n=0;for(l=d.length;n<l;n++){i=d[n];a.currentTarget=i.elem;a.data=i.fn.data;if(i.fn.apply(i.elem,g)===false){b=false;break}}return b}function oa(a,b){return["live",a,b.replace(/\./g,"`").replace(/ /g,"&")].join(".")}function pa(a,b){var d=0;b.each(function(){if(this.nodeName===na.oa18,1389
n=0;for(l=i.length;n<l;n++)for(p in u){k=u[p];o=i[n].elem;e=null;if(i[n].selector===k.selector){if(k.live==="mouseenter"||k.live==="mouseleave")e=c(a.relatedTarget).closest(k.selector)[0];if(!e||e!==o)d.push({elem:o,fn:k})}}n=0;for(l=d.length;n<l;n++){i=d[n];a.currentTarget=i.elem;a.data=i.fn.data;if(i.fn.apply(i.elem,g)===false){b=false;break}}return b}function oa(a,b){return["live",a,b.replace(/\./g,"`").replace(/ /g,"&")].join(".")}function pa(a,b){var d=0;b.each(function(){if(this.nodeName===na.pa18,1389
(a[d]&&a[d].nodeName)){var e=c.data(a[d++]),g=c.data(this,e);if(e=e&&e.events){delete g.handle;g.events={};for(var i in e)for(var k in e[i])c.event.add(this,i,e[i][k],e[i][k].data)}}})}function qa(a,b,d){var e,g,i;if(a.length===1&&typeof a[0]==="string"&&a[0].length<512&&a[0].indexOf("<option")<0){g=true;if(i=c.fragments[a[0]])if(i!==1)e=i}if(!e){b=b&&b[0]?b[0].ownerDocument||b[0]:s;e=b.createDocumentFragment();c.clean(a,b,e,d)}if(g)c.fragments[a[0]]=i?e:1;return{fragment:e,cacheable:g}}function R(a){for(var b=na.qa19,1891
0,d,e;(d=a[b])!=null;b++)if(!c.noData[d.nodeName.toLowerCase()]&&(e=d[E]))delete c.cache[e]}function I(a,b){var d={};c.each(ra.concat.apply([],ra.slice(0,b)),function(){d[this]=a});return d}function sa(a){return"scrollTo"in a&&a.document?a:a.nodeType===9?a.defaultView||a.parentWindow:false}var c=function(a,b){return new c.fn.init(a,b)},Ja=z.jQuery,Ka=z.$,s=z.document,S,La=/^[^<]*(<[\w\W]+>)[^>]*$|^#([\w-]+)$/,Ma=/^.[^:#\[\.,]*$/,Na=/\S/,Oa=/^(\s|\u00A0)+|(\s|\u00A0)+$/g,Pa=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,na.R.I20,2408
0,d,e;(d=a[b])!=null;b++)if(!c.noData[d.nodeName.toLowerCase()]&&(e=d[E]))delete c.cache[e]}function I(a,b){var d={};c.each(ra.concat.apply([],ra.slice(0,b)),function(){d[this]=a});return d}function sa(a){return"scrollTo"in a&&a.document?a:a.nodeType===9?a.defaultView||a.parentWindow:false}var c=function(a,b){return new c.fn.init(a,b)},Ja=z.jQuery,Ka=z.$,s=z.document,S,La=/^[^<]*(<[\w\W]+>)[^>]*$|^#([\w-]+)$/,Ma=/^.[^:#\[\.,]*$/,Na=/\S/,Oa=/^(\s|\u00A0)+|(\s|\u00A0)+$/g,Pa=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,sa.c20,2408
0,d,e;(d=a[b])!=null;b++)if(!c.noData[d.nodeName.toLowerCase()]&&(e=d[E]))delete c.cache[e]}function I(a,b){var d={};c.each(ra.concat.apply([],ra.slice(0,b)),function(){d[this]=a});return d}function sa(a){return"scrollTo"in a&&a.document?a:a.nodeType===9?a.defaultView||a.parentWindow:false}var c=function(a,b){return new c.fn.init(a,b)},Ja=z.jQuery,Ka=z.$,s=z.document,S,La=/^[^<]*(<[\w\W]+>)[^>]*$|^#([\w-]+)$/,Ma=/^.[^:#\[\.,]*$/,Na=/\S/,Oa=/^(\s|\u00A0)+|(\s|\u00A0)+$/g,Pa=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,na.R.sa20,2408
(a[d]&&a[d].nodeName)){var e=c.data(a[d++]),g=c.data(this,e);if(e=e&&e.events){delete g.handle;g.events={};for(var i in e)for(var k in e[i])c.event.add(this,i,e[i][k],e[i][k].data)}}})}function qa(a,b,d){var e,g,i;if(a.length===1&&typeof a[0]==="string"&&a[0].length<512&&a[0].indexOf("<option")<0){g=true;if(i=c.fragments[a[0]])if(i!==1)e=i}if(!e){b=b&&b[0]?b[0].ownerDocument||b[0]:s;e=b.createDocumentFragment();c.clean(a,b,e,d)}if(g)c.fragments[a[0]]=i?e:1;return{fragment:e,cacheable:g}}function R(a){for(var b=na.R19,1891
g(a[0],b):null}function M(){return(new Date).getTime()}function $(){return false}function aa(){return true}function ma(a,b,d){d[0].type=a;return c.event.handle.apply(b,d)}function na(a){var b=true,d=[],e=[],g=arguments,i,k,o,p,n,u=c.extend({},c.data(this,"events").live);for(p in u){k=u[p];if(k.live===a.type||k.altLive&&c.inArray(a.type,k.altLive)>-1){i=k.data;i.beforeFilter&&i.beforeFilter[a.type]&&!i.beforeFilter[a.type](a)||e.push(k.selector)}else delete u[p]}i=c(a.target).closest(e,a.currentTarget);na17,881
a,b)},ready:function(a){c.bindReady();if(c.isReady)a.call(s,c);else O&&O.push(a);return this},eq:function(a){return a===-1?this.slice(a):this.slice(a,+a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(P.apply(this,arguments),"slice",P.call(arguments).join(","))},map:function(a){return this.pushStack(c.map(this,function(b,d){return a.call(b,d,b)}))},end:function(){return this.prevObject||c(null)},push:da,sort:[].sort,splice:[].splice};c.fn.init24,4459
[0,"0"])[1];return b},browser:{}});N=c.uaMatch(N);if(N.browser){c.browser[N.browser]=true;c.browser.version=N.version}if(c.browser.webkit)c.browser.safari=true;if(T)c.inArray=function(a,b){return T.call(b,a)};S=c(s);if(s.addEventListener)J=function(){s.removeEventListener("DOMContentLoaded",J,false);c.ready()};else if(s.attachEvent)J=function(){if(s.readyState==="complete"){s.detachEvent("onreadystatechange",J);c.ready()}};if(T)c.inArray=function(a,b){return T.call(b,a)};(function(){c.support={};inArray32,8571
var a=s.documentElement,b=s.createElement("script"),d=s.createElement("div"),e="script"+M();d.style.display="none";d.innerHTML="   <link/><table></table><a href='/a' style='color:red;float:left;opacity:.55;'>a</a><input type='checkbox'/>";var g=d.getElementsByTagName("*"),i=d.getElementsByTagName("a")[0];if(!(!g||!g.length||!i)){c.support={leadingWhitespace:d.firstChild.nodeType===3,tbody:!d.getElementsByTagName("tbody").length,htmlSerialize:!!d.getElementsByTagName("link").length,style:/red/.test(i.getAttribute("style")),a33,9073
var a=s.documentElement,b=s.createElement("script"),d=s.createElement("div"),e="script"+M();d.style.display="none";d.innerHTML="   <link/><table></table><a href='/a' style='color:red;float:left;opacity:.55;'>a</a><input type='checkbox'/>";var g=d.getElementsByTagName("*"),i=d.getElementsByTagName("a")[0];if(!(!g||!g.length||!i)){c.support={leadingWhitespace:d.firstChild.nodeType===3,tbody:!d.getElementsByTagName("tbody").length,htmlSerialize:!!d.getElementsByTagName("link").length,style:/red/.test(i.getAttribute("style")),g33,9073
var a=s.documentElement,b=s.createElement("script"),d=s.createElement("div"),e="script"+M();d.style.display="none";d.innerHTML="   <link/><table></table><a href='/a' style='color:red;float:left;opacity:.55;'>a</a><input type='checkbox'/>";var g=d.getElementsByTagName("*"),i=d.getElementsByTagName("a")[0];if(!(!g||!g.length||!i)){c.support={leadingWhitespace:d.firstChild.nodeType===3,tbody:!d.getElementsByTagName("tbody").length,htmlSerialize:!!d.getElementsByTagName("link").length,style:/red/.test(i.getAttribute("style")),c.support.leadingWhitespace33,9073
d.fireEvent){d.attachEvent("onclick",function o(){c.support.noCloneEvent=false;d.detachEvent("onclick",o)});d.cloneNode(true).fireEvent("onclick")}c(function(){var o=s.createElement("div");o.style.width=o.style.paddingLeft="1px";s.body.appendChild(o);c.boxModel=c.support.boxModel=o.offsetWidth===2;s.body.removeChild(o).style.display="none"});a=function(o){var p=s.createElement("div");o="on"+o;var n=o in p;if(!n){p.setAttribute(o,"return;");n=typeof p[o]==="function"}return n};c.support.submitBubbles=a35,10110
a("submit");c.support.changeBubbles=a("change");a=b=d=g=i=null}})();c.props={"for":"htmlFor","class":"className",readonly:"readOnly",maxlength:"maxLength",cellspacing:"cellSpacing",rowspan:"rowSpan",colspan:"colSpan",tabindex:"tabIndex",usemap:"useMap",frameborder:"frameBorder"};c.extend({queue:function(a,b,d){if(a){b=(b||"fx")+"queue";var e=c.data(a,b);if(!d)return e||[];if(!e||c.isArray(d))e=c.data(a,b,c.makeArray(d));else e.push(d);return e}},dequeue:function(a,b){b=b||"fx";var d=c.queue(a,b),c.props.for36,10616
a("submit");c.support.changeBubbles=a("change");a=b=d=g=i=null}})();c.props={"for":"htmlFor","class":"className",readonly:"readOnly",maxlength:"maxLength",cellspacing:"cellSpacing",rowspan:"rowSpan",colspan:"colSpan",tabindex:"tabIndex",usemap:"useMap",frameborder:"frameBorder"};c.extend({queue:function(a,b,d){if(a){b=(b||"fx")+"queue";var e=c.data(a,b);if(!d)return e||[];if(!e||c.isArray(d))e=c.data(a,b,c.makeArray(d));else e.push(d);return e}},dequeue:function(a,b){b=b||"fx";var d=c.queue(a,b),c.props.class36,10616
a("submit");c.support.changeBubbles=a("change");a=b=d=g=i=null}})();c.props={"for":"htmlFor","class":"className",readonly:"readOnly",maxlength:"maxLength",cellspacing:"cellSpacing",rowspan:"rowSpan",colspan:"colSpan",tabindex:"tabIndex",usemap:"useMap",frameborder:"frameBorder"};c.extend({queue:function(a,b,d){if(a){b=(b||"fx")+"queue";var e=c.data(a,b);if(!d)return e||[];if(!e||c.isArray(d))e=c.data(a,b,c.makeArray(d));else e.push(d);return e}},dequeue:function(a,b){b=b||"fx";var d=c.queue(a,b),c.props.readonly36,10616
a("submit");c.support.changeBubbles=a("change");a=b=d=g=i=null}})();c.props={"for":"htmlFor","class":"className",readonly:"readOnly",maxlength:"maxLength",cellspacing:"cellSpacing",rowspan:"rowSpan",colspan:"colSpan",tabindex:"tabIndex",usemap:"useMap",frameborder:"frameBorder"};c.extend({queue:function(a,b,d){if(a){b=(b||"fx")+"queue";var e=c.data(a,b);if(!d)return e||[];if(!e||c.isArray(d))e=c.data(a,b,c.makeArray(d));else e.push(d);return e}},dequeue:function(a,b){b=b||"fx";var d=c.queue(a,b),c.props.maxlength36,10616
a("submit");c.support.changeBubbles=a("change");a=b=d=g=i=null}})();c.props={"for":"htmlFor","class":"className",readonly:"readOnly",maxlength:"maxLength",cellspacing:"cellSpacing",rowspan:"rowSpan",colspan:"colSpan",tabindex:"tabIndex",usemap:"useMap",frameborder:"frameBorder"};c.extend({queue:function(a,b,d){if(a){b=(b||"fx")+"queue";var e=c.data(a,b);if(!d)return e||[];if(!e||c.isArray(d))e=c.data(a,b,c.makeArray(d));else e.push(d);return e}},dequeue:function(a,b){b=b||"fx";var d=c.queue(a,b),c.props.cellspacing36,10616
a("submit");c.support.changeBubbles=a("change");a=b=d=g=i=null}})();c.props={"for":"htmlFor","class":"className",readonly:"readOnly",maxlength:"maxLength",cellspacing:"cellSpacing",rowspan:"rowSpan",colspan:"colSpan",tabindex:"tabIndex",usemap:"useMap",frameborder:"frameBorder"};c.extend({queue:function(a,b,d){if(a){b=(b||"fx")+"queue";var e=c.data(a,b);if(!d)return e||[];if(!e||c.isArray(d))e=c.data(a,b,c.makeArray(d));else e.push(d);return e}},dequeue:function(a,b){b=b||"fx";var d=c.queue(a,b),c.props.rowspan36,10616
a("submit");c.support.changeBubbles=a("change");a=b=d=g=i=null}})();c.props={"for":"htmlFor","class":"className",readonly:"readOnly",maxlength:"maxLength",cellspacing:"cellSpacing",rowspan:"rowSpan",colspan:"colSpan",tabindex:"tabIndex",usemap:"useMap",frameborder:"frameBorder"};c.extend({queue:function(a,b,d){if(a){b=(b||"fx")+"queue";var e=c.data(a,b);if(!d)return e||[];if(!e||c.isArray(d))e=c.data(a,b,c.makeArray(d));else e.push(d);return e}},dequeue:function(a,b){b=b||"fx";var d=c.queue(a,b),c.props.colspan36,10616
a("submit");c.support.changeBubbles=a("change");a=b=d=g=i=null}})();c.props={"for":"htmlFor","class":"className",readonly:"readOnly",maxlength:"maxLength",cellspacing:"cellSpacing",rowspan:"rowSpan",colspan:"colSpan",tabindex:"tabIndex",usemap:"useMap",frameborder:"frameBorder"};c.extend({queue:function(a,b,d){if(a){b=(b||"fx")+"queue";var e=c.data(a,b);if(!d)return e||[];if(!e||c.isArray(d))e=c.data(a,b,c.makeArray(d));else e.push(d);return e}},dequeue:function(a,b){b=b||"fx";var d=c.queue(a,b),c.props.tabindex36,10616
a("submit");c.support.changeBubbles=a("change");a=b=d=g=i=null}})();c.props={"for":"htmlFor","class":"className",readonly:"readOnly",maxlength:"maxLength",cellspacing:"cellSpacing",rowspan:"rowSpan",colspan:"colSpan",tabindex:"tabIndex",usemap:"useMap",frameborder:"frameBorder"};c.extend({queue:function(a,b,d){if(a){b=(b||"fx")+"queue";var e=c.data(a,b);if(!d)return e||[];if(!e||c.isArray(d))e=c.data(a,b,c.makeArray(d));else e.push(d);return e}},dequeue:function(a,b){b=b||"fx";var d=c.queue(a,b),c.props.usemap36,10616
a("submit");c.support.changeBubbles=a("change");a=b=d=g=i=null}})();c.props={"for":"htmlFor","class":"className",readonly:"readOnly",maxlength:"maxLength",cellspacing:"cellSpacing",rowspan:"rowSpan",colspan:"colSpan",tabindex:"tabIndex",usemap:"useMap",frameborder:"frameBorder"};c.extend({queue:function(a,b,d){if(a){b=(b||"fx")+"queue";var e=c.data(a,b);if(!d)return e||[];if(!e||c.isArray(d))e=c.data(a,b,c.makeArray(d));else e.push(d);return e}},dequeue:function(a,b){b=b||"fx";var d=c.queue(a,b),c.props.frameborder36,10616
b)},a)})},clearQueue:function(a){return this.queue(a||"fx",[])}});var Qa=function(a){return a.replace(/[^\w\s\.\|`]/g,function(b){return"\\"+b})};c.event={add:function(a,b,d,e){if(!(a.nodeType===3||a.nodeType===8)){if(a.setInterval&&a!==z&&!a.frameElement)a=z;if(!d.guid)d.guid=c.guid++;if(e!==w){d=c.proxy(d);d.data=e}var g=c.data(a,"events")||c.data(a,"events",{}),i=c.data(a,"handle"),k;if(!i){k=function(){return typeof c!=="undefined"&&!c.event.triggered?c.event.handle.apply(k.elem,arguments):w};var.Qa38,11653
b)},a)})},clearQueue:function(a){return this.queue(a||"fx",[])}});var Qa=function(a){return a.replace(/[^\w\s\.\|`]/g,function(b){return"\\"+b})};c.event={add:function(a,b,d,e){if(!(a.nodeType===3||a.nodeType===8)){if(a.setInterval&&a!==z&&!a.frameElement)a=z;if(!d.guid)d.guid=c.guid++;if(e!==w){d=c.proxy(d);d.data=e}var g=c.data(a,"events")||c.data(a,"events",{}),i=c.data(a,"handle"),k;if(!i){k=function(){return typeof c!=="undefined"&&!c.event.triggered?c.event.handle.apply(k.elem,arguments):w};c.event.add38,11653
b)},a)})},clearQueue:function(a){return this.queue(a||"fx",[])}});var Qa=function(a){return a.replace(/[^\w\s\.\|`]/g,function(b){return"\\"+b})};c.event={add:function(a,b,d,e){if(!(a.nodeType===3||a.nodeType===8)){if(a.setInterval&&a!==z&&!a.frameElement)a=z;if(!d.guid)d.guid=c.guid++;if(e!==w){d=c.proxy(d);d.data=e}var g=c.data(a,"events")||c.data(a,"events",{}),i=c.data(a,"handle"),k;if(!i){k=function(){return typeof c!=="undefined"&&!c.event.triggered?c.event.handle.apply(k.elem,arguments):w};k38,11653
a[0]+"(\\.|$)");c.each(c.data(this,"events").live||{},function(){d.test(this.type)&&b++});b<1&&c.event.remove(this,a[0],na)}},special:{}},beforeunload:{setup:function(a,b,d){if(this.setInterval)this.onbeforeunload=d;return false},teardown:function(a,b){if(this.onbeforeunload===b)this.onbeforeunload=null}}}};c.Event=function(a){if(!this.preventDefault)return new c.Event(a);if(a&&a.type){this.originalEvent=a;this.type=a.type}else this.type=a;this.timeStamp=M();this[E]=true};c.Event.prototype={preventDefault:function(){this.isDefaultPrevented=c47,16264
a[0]+"(\\.|$)");c.each(c.data(this,"events").live||{},function(){d.test(this.type)&&b++});b<1&&c.event.remove(this,a[0],na)}},special:{}},beforeunload:{setup:function(a,b,d){if(this.setInterval)this.onbeforeunload=d;return false},teardown:function(a,b){if(this.onbeforeunload===b)this.onbeforeunload=null}}}};c.Event=function(a){if(!this.preventDefault)return new c.Event(a);if(a&&a.type){this.originalEvent=a;this.type=a.type}else this.type=a;this.timeStamp=M();this[E]=true};c.Event.prototype={preventDefault:function(){this.isDefaultPrevented=c.c.preventDefault47,16264
aa;var a=this.originalEvent;if(a){a.preventDefault&&a.preventDefault();a.returnValue=false}},stopPropagation:function(){this.isPropagationStopped=aa;var a=this.originalEvent;if(a){a.stopPropagation&&a.stopPropagation();a.cancelBubble=true}},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=aa;this.stopPropagation()},isDefaultPrevented:$,isPropagationStopped:$,isImmediatePropagationStopped:$};var ua=function(a){for(var b=a.relatedTarget;b&&b!==this;)try{b=b.parentNode}catch(d){break}if(b!==c.Event.ua48,16811
a[0]+"(\\.|$)");c.each(c.data(this,"events").live||{},function(){d.test(this.type)&&b++});b<1&&c.event.remove(this,a[0],na)}},special:{}},beforeunload:{setup:function(a,b,d){if(this.setInterval)this.onbeforeunload=d;return false},teardown:function(a,b){if(this.onbeforeunload===b)this.onbeforeunload=null}}}};c.Event=function(a){if(!this.preventDefault)return new c.Event(a);if(a&&a.type){this.originalEvent=a;this.type=a.type}else this.type=a;this.timeStamp=M();this[E]=true};c.Event.prototype={preventDefault:function(){this.isDefaultPrevented=c.Event47,16264
/textarea|input|select/i;function wa(a){var b=a.type,d=a.value;if(b==="radio"||b==="checkbox")d=a.checked;else if(b==="select-multiple")d=a.selectedIndex>-1?c.map(a.options,function(e){return e.selected}).join("-"):"";else if(a.nodeName.toLowerCase()==="select")d=a.selectedIndex;return d}function fa(a,b){var d=a.target,e,g;if(!(!ea.test(d.nodeName)||d.readOnly)){e=c.data(d,"_change_data");g=wa(d);if(g!==e){if(a.type!=="focusout"||d.type!=="radio")c.data(d,"_change_data",g);if(d.type!=="select"&&(e!=function.wa51,18353
/textarea|input|select/i;function wa(a){var b=a.type,d=a.value;if(b==="radio"||b==="checkbox")d=a.checked;else if(b==="select-multiple")d=a.selectedIndex>-1?c.map(a.options,function(e){return e.selected}).join("-"):"";else if(a.nodeName.toLowerCase()==="select")d=a.selectedIndex;return d}function fa(a,b){var d=a.target,e,g;if(!(!ea.test(d.nodeName)||d.readOnly)){e=c.data(d,"_change_data");g=wa(d);if(g!==e){if(a.type!=="focusout"||d.type!=="radio")c.data(d,"_change_data",g);if(d.type!=="select"&&(e!=function.fa51,18353
null||g)){a.type="change";return c.event.trigger(a,b,this)}}}}c.event.special.change={filters:{focusout:fa,click:function(a){var b=a.target,d=b.type;if(d==="radio"||d==="checkbox"||b.nodeName.toLowerCase()==="select")return fa.call(this,a)},keydown:function(a){var b=a.target,d=b.type;if(a.keyCode===13&&b.nodeName.toLowerCase()!=="textarea"||a.keyCode===32&&(d==="checkbox"||d==="radio")||d==="select-multiple")return fa.call(this,a)},beforeactivate:function(a){a=a.target;a.nodeName.toLowerCase()===c.event.special.change.filters52,18858

gui-wt/resources/jPlayer/jquery.jplayer.min.js,45784
(function(c,j){c.fn.jPlayer=function(a){var b=typeof a==="string",d=Array.prototype.slice.call(arguments,1),f=this;a=!b&&d.length?c.extend.apply(null,[true,a].concat(d)):a;if(b&&a.charAt(0)==="_")return f;b?this.each(function(){var e=c.data(this,"jPlayer"),g=e&&c.isFunction(e[a])?e[a].apply(e,d):e;if(g!==e&&g!==j){f=g;return false}}):this.each(function(){var e=c.data(this,"jPlayer");e?e.option(a||{}):c.data(this,"jPlayer",new c.jPlayer(a,this))});return f};c.jPlayer=function(a,b){if(arguments.length){this.element=fn.jPlayer0,0
c(b);this.options=c.extend(true,{},this.options,a);var d=this;this.element.bind("remove.jPlayer",function(){d.destroy()});this._init()}};c.jPlayer.emulateMethods="load play pause";c.jPlayer.emulateStatus="src readyState networkState currentTime duration paused ended playbackRate";c.jPlayer.emulateOptions="muted volume";c.jPlayer.reservedEvent="ready flashreset resize repeat error warning";c.jPlayer.event={ready:"jPlayer_ready",flashreset:"jPlayer_flashreset",resize:"jPlayer_resize",repeat:"jPlayer_repeat",c.jPlayer.event.ready2,520
c(b);this.options=c.extend(true,{},this.options,a);var d=this;this.element.bind("remove.jPlayer",function(){d.destroy()});this._init()}};c.jPlayer.emulateMethods="load play pause";c.jPlayer.emulateStatus="src readyState networkState currentTime duration paused ended playbackRate";c.jPlayer.emulateOptions="muted volume";c.jPlayer.reservedEvent="ready flashreset resize repeat error warning";c.jPlayer.event={ready:"jPlayer_ready",flashreset:"jPlayer_flashreset",resize:"jPlayer_resize",repeat:"jPlayer_repeat",c.jPlayer.event.flashreset2,520
c(b);this.options=c.extend(true,{},this.options,a);var d=this;this.element.bind("remove.jPlayer",function(){d.destroy()});this._init()}};c.jPlayer.emulateMethods="load play pause";c.jPlayer.emulateStatus="src readyState networkState currentTime duration paused ended playbackRate";c.jPlayer.emulateOptions="muted volume";c.jPlayer.reservedEvent="ready flashreset resize repeat error warning";c.jPlayer.event={ready:"jPlayer_ready",flashreset:"jPlayer_flashreset",resize:"jPlayer_resize",repeat:"jPlayer_repeat",c.jPlayer.event.resize2,520
c(b);this.options=c.extend(true,{},this.options,a);var d=this;this.element.bind("remove.jPlayer",function(){d.destroy()});this._init()}};c.jPlayer.emulateMethods="load play pause";c.jPlayer.emulateStatus="src readyState networkState currentTime duration paused ended playbackRate";c.jPlayer.emulateOptions="muted volume";c.jPlayer.reservedEvent="ready flashreset resize repeat error warning";c.jPlayer.event={ready:"jPlayer_ready",flashreset:"jPlayer_flashreset",resize:"jPlayer_resize",repeat:"jPlayer_repeat",c.jPlayer.event.repeat2,520
c(b);this.options=c.extend(true,{},this.options,a);var d=this;this.element.bind("remove.jPlayer",function(){d.destroy()});this._init()}};c.jPlayer.emulateMethods="load play pause";c.jPlayer.emulateStatus="src readyState networkState currentTime duration paused ended playbackRate";c.jPlayer.emulateOptions="muted volume";c.jPlayer.reservedEvent="ready flashreset resize repeat error warning";c.jPlayer.event={ready:"jPlayer_ready",flashreset:"jPlayer_flashreset",resize:"jPlayer_resize",repeat:"jPlayer_repeat",c.jPlayer.event.error2,520
error:"jPlayer_error",warning:"jPlayer_warning",loadstart:"jPlayer_loadstart",progress:"jPlayer_progress",suspend:"jPlayer_suspend",abort:"jPlayer_abort",emptied:"jPlayer_emptied",stalled:"jPlayer_stalled",play:"jPlayer_play",pause:"jPlayer_pause",loadedmetadata:"jPlayer_loadedmetadata",loadeddata:"jPlayer_loadeddata",waiting:"jPlayer_waiting",playing:"jPlayer_playing",canplay:"jPlayer_canplay",canplaythrough:"jPlayer_canplaythrough",seeking:"jPlayer_seeking",seeked:"jPlayer_seeked",timeupdate:"jPlayer_timeupdate",c.jPlayer.event.warning3,1032
error:"jPlayer_error",warning:"jPlayer_warning",loadstart:"jPlayer_loadstart",progress:"jPlayer_progress",suspend:"jPlayer_suspend",abort:"jPlayer_abort",emptied:"jPlayer_emptied",stalled:"jPlayer_stalled",play:"jPlayer_play",pause:"jPlayer_pause",loadedmetadata:"jPlayer_loadedmetadata",loadeddata:"jPlayer_loadeddata",waiting:"jPlayer_waiting",playing:"jPlayer_playing",canplay:"jPlayer_canplay",canplaythrough:"jPlayer_canplaythrough",seeking:"jPlayer_seeking",seeked:"jPlayer_seeked",timeupdate:"jPlayer_timeupdate",c.jPlayer.event.loadstart3,1032
error:"jPlayer_error",warning:"jPlayer_warning",loadstart:"jPlayer_loadstart",progress:"jPlayer_progress",suspend:"jPlayer_suspend",abort:"jPlayer_abort",emptied:"jPlayer_emptied",stalled:"jPlayer_stalled",play:"jPlayer_play",pause:"jPlayer_pause",loadedmetadata:"jPlayer_loadedmetadata",loadeddata:"jPlayer_loadeddata",waiting:"jPlayer_waiting",playing:"jPlayer_playing",canplay:"jPlayer_canplay",canplaythrough:"jPlayer_canplaythrough",seeking:"jPlayer_seeking",seeked:"jPlayer_seeked",timeupdate:"jPlayer_timeupdate",c.jPlayer.event.progress3,1032
error:"jPlayer_error",warning:"jPlayer_warning",loadstart:"jPlayer_loadstart",progress:"jPlayer_progress",suspend:"jPlayer_suspend",abort:"jPlayer_abort",emptied:"jPlayer_emptied",stalled:"jPlayer_stalled",play:"jPlayer_play",pause:"jPlayer_pause",loadedmetadata:"jPlayer_loadedmetadata",loadeddata:"jPlayer_loadeddata",waiting:"jPlayer_waiting",playing:"jPlayer_playing",canplay:"jPlayer_canplay",canplaythrough:"jPlayer_canplaythrough",seeking:"jPlayer_seeking",seeked:"jPlayer_seeked",timeupdate:"jPlayer_timeupdate",c.jPlayer.event.suspend3,1032
error:"jPlayer_error",warning:"jPlayer_warning",loadstart:"jPlayer_loadstart",progress:"jPlayer_progress",suspend:"jPlayer_suspend",abort:"jPlayer_abort",emptied:"jPlayer_emptied",stalled:"jPlayer_stalled",play:"jPlayer_play",pause:"jPlayer_pause",loadedmetadata:"jPlayer_loadedmetadata",loadeddata:"jPlayer_loadeddata",waiting:"jPlayer_waiting",playing:"jPlayer_playing",canplay:"jPlayer_canplay",canplaythrough:"jPlayer_canplaythrough",seeking:"jPlayer_seeking",seeked:"jPlayer_seeked",timeupdate:"jPlayer_timeupdate",c.jPlayer.event.abort3,1032
error:"jPlayer_error",warning:"jPlayer_warning",loadstart:"jPlayer_loadstart",progress:"jPlayer_progress",suspend:"jPlayer_suspend",abort:"jPlayer_abort",emptied:"jPlayer_emptied",stalled:"jPlayer_stalled",play:"jPlayer_play",pause:"jPlayer_pause",loadedmetadata:"jPlayer_loadedmetadata",loadeddata:"jPlayer_loadeddata",waiting:"jPlayer_waiting",playing:"jPlayer_playing",canplay:"jPlayer_canplay",canplaythrough:"jPlayer_canplaythrough",seeking:"jPlayer_seeking",seeked:"jPlayer_seeked",timeupdate:"jPlayer_timeupdate",c.jPlayer.event.emptied3,1032
error:"jPlayer_error",warning:"jPlayer_warning",loadstart:"jPlayer_loadstart",progress:"jPlayer_progress",suspend:"jPlayer_suspend",abort:"jPlayer_abort",emptied:"jPlayer_emptied",stalled:"jPlayer_stalled",play:"jPlayer_play",pause:"jPlayer_pause",loadedmetadata:"jPlayer_loadedmetadata",loadeddata:"jPlayer_loadeddata",waiting:"jPlayer_waiting",playing:"jPlayer_playing",canplay:"jPlayer_canplay",canplaythrough:"jPlayer_canplaythrough",seeking:"jPlayer_seeking",seeked:"jPlayer_seeked",timeupdate:"jPlayer_timeupdate",c.jPlayer.event.stalled3,1032
error:"jPlayer_error",warning:"jPlayer_warning",loadstart:"jPlayer_loadstart",progress:"jPlayer_progress",suspend:"jPlayer_suspend",abort:"jPlayer_abort",emptied:"jPlayer_emptied",stalled:"jPlayer_stalled",play:"jPlayer_play",pause:"jPlayer_pause",loadedmetadata:"jPlayer_loadedmetadata",loadeddata:"jPlayer_loadeddata",waiting:"jPlayer_waiting",playing:"jPlayer_playing",canplay:"jPlayer_canplay",canplaythrough:"jPlayer_canplaythrough",seeking:"jPlayer_seeking",seeked:"jPlayer_seeked",timeupdate:"jPlayer_timeupdate",c.jPlayer.event.play3,1032
error:"jPlayer_error",warning:"jPlayer_warning",loadstart:"jPlayer_loadstart",progress:"jPlayer_progress",suspend:"jPlayer_suspend",abort:"jPlayer_abort",emptied:"jPlayer_emptied",stalled:"jPlayer_stalled",play:"jPlayer_play",pause:"jPlayer_pause",loadedmetadata:"jPlayer_loadedmetadata",loadeddata:"jPlayer_loadeddata",waiting:"jPlayer_waiting",playing:"jPlayer_playing",canplay:"jPlayer_canplay",canplaythrough:"jPlayer_canplaythrough",seeking:"jPlayer_seeking",seeked:"jPlayer_seeked",timeupdate:"jPlayer_timeupdate",c.jPlayer.event.pause3,1032
error:"jPlayer_error",warning:"jPlayer_warning",loadstart:"jPlayer_loadstart",progress:"jPlayer_progress",suspend:"jPlayer_suspend",abort:"jPlayer_abort",emptied:"jPlayer_emptied",stalled:"jPlayer_stalled",play:"jPlayer_play",pause:"jPlayer_pause",loadedmetadata:"jPlayer_loadedmetadata",loadeddata:"jPlayer_loadeddata",waiting:"jPlayer_waiting",playing:"jPlayer_playing",canplay:"jPlayer_canplay",canplaythrough:"jPlayer_canplaythrough",seeking:"jPlayer_seeking",seeked:"jPlayer_seeked",timeupdate:"jPlayer_timeupdate",c.jPlayer.event.loadedmetadata3,1032
error:"jPlayer_error",warning:"jPlayer_warning",loadstart:"jPlayer_loadstart",progress:"jPlayer_progress",suspend:"jPlayer_suspend",abort:"jPlayer_abort",emptied:"jPlayer_emptied",stalled:"jPlayer_stalled",play:"jPlayer_play",pause:"jPlayer_pause",loadedmetadata:"jPlayer_loadedmetadata",loadeddata:"jPlayer_loadeddata",waiting:"jPlayer_waiting",playing:"jPlayer_playing",canplay:"jPlayer_canplay",canplaythrough:"jPlayer_canplaythrough",seeking:"jPlayer_seeking",seeked:"jPlayer_seeked",timeupdate:"jPlayer_timeupdate",c.jPlayer.event.loadeddata3,1032
error:"jPlayer_error",warning:"jPlayer_warning",loadstart:"jPlayer_loadstart",progress:"jPlayer_progress",suspend:"jPlayer_suspend",abort:"jPlayer_abort",emptied:"jPlayer_emptied",stalled:"jPlayer_stalled",play:"jPlayer_play",pause:"jPlayer_pause",loadedmetadata:"jPlayer_loadedmetadata",loadeddata:"jPlayer_loadeddata",waiting:"jPlayer_waiting",playing:"jPlayer_playing",canplay:"jPlayer_canplay",canplaythrough:"jPlayer_canplaythrough",seeking:"jPlayer_seeking",seeked:"jPlayer_seeked",timeupdate:"jPlayer_timeupdate",c.jPlayer.event.waiting3,1032
error:"jPlayer_error",warning:"jPlayer_warning",loadstart:"jPlayer_loadstart",progress:"jPlayer_progress",suspend:"jPlayer_suspend",abort:"jPlayer_abort",emptied:"jPlayer_emptied",stalled:"jPlayer_stalled",play:"jPlayer_play",pause:"jPlayer_pause",loadedmetadata:"jPlayer_loadedmetadata",loadeddata:"jPlayer_loadeddata",waiting:"jPlayer_waiting",playing:"jPlayer_playing",canplay:"jPlayer_canplay",canplaythrough:"jPlayer_canplaythrough",seeking:"jPlayer_seeking",seeked:"jPlayer_seeked",timeupdate:"jPlayer_timeupdate",c.jPlayer.event.playing3,1032
error:"jPlayer_error",warning:"jPlayer_warning",loadstart:"jPlayer_loadstart",progress:"jPlayer_progress",suspend:"jPlayer_suspend",abort:"jPlayer_abort",emptied:"jPlayer_emptied",stalled:"jPlayer_stalled",play:"jPlayer_play",pause:"jPlayer_pause",loadedmetadata:"jPlayer_loadedmetadata",loadeddata:"jPlayer_loadeddata",waiting:"jPlayer_waiting",playing:"jPlayer_playing",canplay:"jPlayer_canplay",canplaythrough:"jPlayer_canplaythrough",seeking:"jPlayer_seeking",seeked:"jPlayer_seeked",timeupdate:"jPlayer_timeupdate",c.jPlayer.event.canplay3,1032
error:"jPlayer_error",warning:"jPlayer_warning",loadstart:"jPlayer_loadstart",progress:"jPlayer_progress",suspend:"jPlayer_suspend",abort:"jPlayer_abort",emptied:"jPlayer_emptied",stalled:"jPlayer_stalled",play:"jPlayer_play",pause:"jPlayer_pause",loadedmetadata:"jPlayer_loadedmetadata",loadeddata:"jPlayer_loadeddata",waiting:"jPlayer_waiting",playing:"jPlayer_playing",canplay:"jPlayer_canplay",canplaythrough:"jPlayer_canplaythrough",seeking:"jPlayer_seeking",seeked:"jPlayer_seeked",timeupdate:"jPlayer_timeupdate",c.jPlayer.event.canplaythrough3,1032
error:"jPlayer_error",warning:"jPlayer_warning",loadstart:"jPlayer_loadstart",progress:"jPlayer_progress",suspend:"jPlayer_suspend",abort:"jPlayer_abort",emptied:"jPlayer_emptied",stalled:"jPlayer_stalled",play:"jPlayer_play",pause:"jPlayer_pause",loadedmetadata:"jPlayer_loadedmetadata",loadeddata:"jPlayer_loadeddata",waiting:"jPlayer_waiting",playing:"jPlayer_playing",canplay:"jPlayer_canplay",canplaythrough:"jPlayer_canplaythrough",seeking:"jPlayer_seeking",seeked:"jPlayer_seeked",timeupdate:"jPlayer_timeupdate",c.jPlayer.event.seeking3,1032
error:"jPlayer_error",warning:"jPlayer_warning",loadstart:"jPlayer_loadstart",progress:"jPlayer_progress",suspend:"jPlayer_suspend",abort:"jPlayer_abort",emptied:"jPlayer_emptied",stalled:"jPlayer_stalled",play:"jPlayer_play",pause:"jPlayer_pause",loadedmetadata:"jPlayer_loadedmetadata",loadeddata:"jPlayer_loadeddata",waiting:"jPlayer_waiting",playing:"jPlayer_playing",canplay:"jPlayer_canplay",canplaythrough:"jPlayer_canplaythrough",seeking:"jPlayer_seeking",seeked:"jPlayer_seeked",timeupdate:"jPlayer_timeupdate",c.jPlayer.event.seeked3,1032
error:"jPlayer_error",warning:"jPlayer_warning",loadstart:"jPlayer_loadstart",progress:"jPlayer_progress",suspend:"jPlayer_suspend",abort:"jPlayer_abort",emptied:"jPlayer_emptied",stalled:"jPlayer_stalled",play:"jPlayer_play",pause:"jPlayer_pause",loadedmetadata:"jPlayer_loadedmetadata",loadeddata:"jPlayer_loadeddata",waiting:"jPlayer_waiting",playing:"jPlayer_playing",canplay:"jPlayer_canplay",canplaythrough:"jPlayer_canplaythrough",seeking:"jPlayer_seeking",seeked:"jPlayer_seeked",timeupdate:"jPlayer_timeupdate",c.jPlayer.event.timeupdate3,1032
error:"jPlayer_error",warning:"jPlayer_warning",loadstart:"jPlayer_loadstart",progress:"jPlayer_progress",suspend:"jPlayer_suspend",abort:"jPlayer_abort",emptied:"jPlayer_emptied",stalled:"jPlayer_stalled",play:"jPlayer_play",pause:"jPlayer_pause",loadedmetadata:"jPlayer_loadedmetadata",loadeddata:"jPlayer_loadeddata",waiting:"jPlayer_waiting",playing:"jPlayer_playing",canplay:"jPlayer_canplay",canplaythrough:"jPlayer_canplaythrough",seeking:"jPlayer_seeking",seeked:"jPlayer_seeked",timeupdate:"jPlayer_timeupdate",c.jPlayer.event.ended3,1032
ended:"jPlayer_ended",ratechange:"jPlayer_ratechange",durationchange:"jPlayer_durationchange",volumechange:"jPlayer_volumechange"};c.jPlayer.htmlEvent=["loadstart","abort","emptied","stalled","loadedmetadata","loadeddata","canplay","canplaythrough","ratechange"];c.jPlayer.pause=function(){c.each(c.jPlayer.prototype.instances,function(a,b){b.data("jPlayer").status.srcSet&&b.jPlayer("pause")})};c.jPlayer.timeFormat={showHour:false,showMin:true,showSec:true,padHour:false,padMin:true,padSec:true,sepHour:":",c.jPlayer.event.ratechange4,1553
ended:"jPlayer_ended",ratechange:"jPlayer_ratechange",durationchange:"jPlayer_durationchange",volumechange:"jPlayer_volumechange"};c.jPlayer.htmlEvent=["loadstart","abort","emptied","stalled","loadedmetadata","loadeddata","canplay","canplaythrough","ratechange"];c.jPlayer.pause=function(){c.each(c.jPlayer.prototype.instances,function(a,b){b.data("jPlayer").status.srcSet&&b.jPlayer("pause")})};c.jPlayer.timeFormat={showHour:false,showMin:true,showSec:true,padHour:false,padMin:true,padSec:true,sepHour:":",c.jPlayer.event.durationchange4,1553
ended:"jPlayer_ended",ratechange:"jPlayer_ratechange",durationchange:"jPlayer_durationchange",volumechange:"jPlayer_volumechange"};c.jPlayer.htmlEvent=["loadstart","abort","emptied","stalled","loadedmetadata","loadeddata","canplay","canplaythrough","ratechange"];c.jPlayer.pause=function(){c.each(c.jPlayer.prototype.instances,function(a,b){b.data("jPlayer").status.srcSet&&b.jPlayer("pause")})};c.jPlayer.timeFormat={showHour:false,showMin:true,showSec:true,padHour:false,padMin:true,padSec:true,sepHour:":",c.jPlayer.event.volumechange4,1553
ended:"jPlayer_ended",ratechange:"jPlayer_ratechange",durationchange:"jPlayer_durationchange",volumechange:"jPlayer_volumechange"};c.jPlayer.htmlEvent=["loadstart","abort","emptied","stalled","loadedmetadata","loadeddata","canplay","canplaythrough","ratechange"];c.jPlayer.pause=function(){c.each(c.jPlayer.prototype.instances,function(a,b){b.data("jPlayer").status.srcSet&&b.jPlayer("pause")})};c.jPlayer.timeFormat={showHour:false,showMin:true,showSec:true,padHour:false,padMin:true,padSec:true,sepHour:":",c.jPlayer.pause4,1553
ended:"jPlayer_ended",ratechange:"jPlayer_ratechange",durationchange:"jPlayer_durationchange",volumechange:"jPlayer_volumechange"};c.jPlayer.htmlEvent=["loadstart","abort","emptied","stalled","loadedmetadata","loadeddata","canplay","canplaythrough","ratechange"];c.jPlayer.pause=function(){c.each(c.jPlayer.prototype.instances,function(a,b){b.data("jPlayer").status.srcSet&&b.jPlayer("pause")})};c.jPlayer.timeFormat={showHour:false,showMin:true,showSec:true,padHour:false,padMin:true,padSec:true,sepHour:":",c.jPlayer.timeFormat.showHour4,1553
ended:"jPlayer_ended",ratechange:"jPlayer_ratechange",durationchange:"jPlayer_durationchange",volumechange:"jPlayer_volumechange"};c.jPlayer.htmlEvent=["loadstart","abort","emptied","stalled","loadedmetadata","loadeddata","canplay","canplaythrough","ratechange"];c.jPlayer.pause=function(){c.each(c.jPlayer.prototype.instances,function(a,b){b.data("jPlayer").status.srcSet&&b.jPlayer("pause")})};c.jPlayer.timeFormat={showHour:false,showMin:true,showSec:true,padHour:false,padMin:true,padSec:true,sepHour:":",c.jPlayer.timeFormat.showMin4,1553
ended:"jPlayer_ended",ratechange:"jPlayer_ratechange",durationchange:"jPlayer_durationchange",volumechange:"jPlayer_volumechange"};c.jPlayer.htmlEvent=["loadstart","abort","emptied","stalled","loadedmetadata","loadeddata","canplay","canplaythrough","ratechange"];c.jPlayer.pause=function(){c.each(c.jPlayer.prototype.instances,function(a,b){b.data("jPlayer").status.srcSet&&b.jPlayer("pause")})};c.jPlayer.timeFormat={showHour:false,showMin:true,showSec:true,padHour:false,padMin:true,padSec:true,sepHour:":",c.jPlayer.timeFormat.showSec4,1553
ended:"jPlayer_ended",ratechange:"jPlayer_ratechange",durationchange:"jPlayer_durationchange",volumechange:"jPlayer_volumechange"};c.jPlayer.htmlEvent=["loadstart","abort","emptied","stalled","loadedmetadata","loadeddata","canplay","canplaythrough","ratechange"];c.jPlayer.pause=function(){c.each(c.jPlayer.prototype.instances,function(a,b){b.data("jPlayer").status.srcSet&&b.jPlayer("pause")})};c.jPlayer.timeFormat={showHour:false,showMin:true,showSec:true,padHour:false,padMin:true,padSec:true,sepHour:":",c.jPlayer.timeFormat.padHour4,1553
ended:"jPlayer_ended",ratechange:"jPlayer_ratechange",durationchange:"jPlayer_durationchange",volumechange:"jPlayer_volumechange"};c.jPlayer.htmlEvent=["loadstart","abort","emptied","stalled","loadedmetadata","loadeddata","canplay","canplaythrough","ratechange"];c.jPlayer.pause=function(){c.each(c.jPlayer.prototype.instances,function(a,b){b.data("jPlayer").status.srcSet&&b.jPlayer("pause")})};c.jPlayer.timeFormat={showHour:false,showMin:true,showSec:true,padHour:false,padMin:true,padSec:true,sepHour:":",c.jPlayer.timeFormat.padMin4,1553
ended:"jPlayer_ended",ratechange:"jPlayer_ratechange",durationchange:"jPlayer_durationchange",volumechange:"jPlayer_volumechange"};c.jPlayer.htmlEvent=["loadstart","abort","emptied","stalled","loadedmetadata","loadeddata","canplay","canplaythrough","ratechange"];c.jPlayer.pause=function(){c.each(c.jPlayer.prototype.instances,function(a,b){b.data("jPlayer").status.srcSet&&b.jPlayer("pause")})};c.jPlayer.timeFormat={showHour:false,showMin:true,showSec:true,padHour:false,padMin:true,padSec:true,sepHour:":",c.jPlayer.timeFormat.padSec4,1553
ended:"jPlayer_ended",ratechange:"jPlayer_ratechange",durationchange:"jPlayer_durationchange",volumechange:"jPlayer_volumechange"};c.jPlayer.htmlEvent=["loadstart","abort","emptied","stalled","loadedmetadata","loadeddata","canplay","canplaythrough","ratechange"];c.jPlayer.pause=function(){c.each(c.jPlayer.prototype.instances,function(a,b){b.data("jPlayer").status.srcSet&&b.jPlayer("pause")})};c.jPlayer.timeFormat={showHour:false,showMin:true,showSec:true,padHour:false,padMin:true,padSec:true,sepHour:":",c.jPlayer.timeFormat.sepHour4,1553
ended:"jPlayer_ended",ratechange:"jPlayer_ratechange",durationchange:"jPlayer_durationchange",volumechange:"jPlayer_volumechange"};c.jPlayer.htmlEvent=["loadstart","abort","emptied","stalled","loadedmetadata","loadeddata","canplay","canplaythrough","ratechange"];c.jPlayer.pause=function(){c.each(c.jPlayer.prototype.instances,function(a,b){b.data("jPlayer").status.srcSet&&b.jPlayer("pause")})};c.jPlayer.timeFormat={showHour:false,showMin:true,showSec:true,padHour:false,padMin:true,padSec:true,sepHour:":",c.jPlayer.timeFormat.sepMin4,1553
sepMin:":",sepSec:""};c.jPlayer.convertTime=function(a){var b=new Date(a*1E3),d=b.getUTCHours();a=b.getUTCMinutes();b=b.getUTCSeconds();d=c.jPlayer.timeFormat.padHour&&d<10?"0"+d:d;a=c.jPlayer.timeFormat.padMin&&a<10?"0"+a:a;b=c.jPlayer.timeFormat.padSec&&b<10?"0"+b:b;return(c.jPlayer.timeFormat.showHour?d+c.jPlayer.timeFormat.sepHour:"")+(c.jPlayer.timeFormat.showMin?a+c.jPlayer.timeFormat.sepMin:"")+(c.jPlayer.timeFormat.showSec?b+c.jPlayer.timeFormat.sepSec:"")};c.jPlayer.uaBrowser=function(a){a=c.jPlayer.timeFormat.sepSec5,2063
sepMin:":",sepSec:""};c.jPlayer.convertTime=function(a){var b=new Date(a*1E3),d=b.getUTCHours();a=b.getUTCMinutes();b=b.getUTCSeconds();d=c.jPlayer.timeFormat.padHour&&d<10?"0"+d:d;a=c.jPlayer.timeFormat.padMin&&a<10?"0"+a:a;b=c.jPlayer.timeFormat.padSec&&b<10?"0"+b:b;return(c.jPlayer.timeFormat.showHour?d+c.jPlayer.timeFormat.sepHour:"")+(c.jPlayer.timeFormat.showMin?a+c.jPlayer.timeFormat.sepMin:"")+(c.jPlayer.timeFormat.showSec?b+c.jPlayer.timeFormat.sepSec:"")};c.jPlayer.uaBrowser=function(a){a=c.jPlayer.convertTime5,2063
sepMin:":",sepSec:""};c.jPlayer.convertTime=function(a){var b=new Date(a*1E3),d=b.getUTCHours();a=b.getUTCMinutes();b=b.getUTCSeconds();d=c.jPlayer.timeFormat.padHour&&d<10?"0"+d:d;a=c.jPlayer.timeFormat.padMin&&a<10?"0"+a:a;b=c.jPlayer.timeFormat.padSec&&b<10?"0"+b:b;return(c.jPlayer.timeFormat.showHour?d+c.jPlayer.timeFormat.sepHour:"")+(c.jPlayer.timeFormat.showMin?a+c.jPlayer.timeFormat.sepMin:"")+(c.jPlayer.timeFormat.showSec?b+c.jPlayer.timeFormat.sepSec:"")};c.jPlayer.uaBrowser=function(a){a=c.jPlayer.uaBrowser5,2063
(function(c,j){c.fn.jPlayer=function(a){var b=typeof a==="string",d=Array.prototype.slice.call(arguments,1),f=this;a=!b&&d.length?c.extend.apply(null,[true,a].concat(d)):a;if(b&&a.charAt(0)==="_")return f;b?this.each(function(){var e=c.data(this,"jPlayer"),g=e&&c.isFunction(e[a])?e[a].apply(e,d):e;if(g!==e&&g!==j){f=g;return false}}):this.each(function(){var e=c.data(this,"jPlayer");e?e.option(a||{}):c.data(this,"jPlayer",new c.jPlayer(a,this))});return f};c.jPlayer=function(a,b){if(arguments.length){this.element=c.jPlayer1,0
a.toLowerCase();var b=/(opera)(?:.*version)?[ \/]([\w.]+)/,d=/(msie) ([\w.]+)/,f=/(mozilla)(?:.*? rv:([\w.]+))?/;a=/(webkit)[ \/]([\w.]+)/.exec(a)||b.exec(a)||d.exec(a)||a.indexOf("compatible")<0&&f.exec(a)||[];return{browser:a[1]||"",version:a[2]||"0"}};c.jPlayer.uaPlatform=function(a){var b=a.toLowerCase(),d=/(android)/,f=/(mobile)/;a=/(ipad|iphone|ipod|android|blackberry|playbook|windows ce|webos)/.exec(b)||[];b=/(ipad|playbook)/.exec(b)||!f.exec(b)&&d.exec(b)||[];return{platform:a[1]||"",tablet:b[1]||c.jPlayer.uaPlatform6,2568
""}};c.jPlayer.browser={};c.jPlayer.platform={};var l=c.jPlayer.uaBrowser(navigator.userAgent);if(l.browser){c.jPlayer.browser[l.browser]=true;c.jPlayer.browser.version=l.version}l=c.jPlayer.uaPlatform(navigator.userAgent);if(l.platform){c.jPlayer.platform[l.platform]=true;c.jPlayer.platform.mobile=!l.tablet;c.jPlayer.platform.tablet=!!l.tablet}c.jPlayer.prototype={count:0,version:{script:"2.0.23",needFlash:"2.0.9",flash:"unknown"},options:{swfPath:"js",solution:"html, flash",supplied:"mp3",preload:"metadata",l7,3079
""}};c.jPlayer.browser={};c.jPlayer.platform={};var l=c.jPlayer.uaBrowser(navigator.userAgent);if(l.browser){c.jPlayer.browser[l.browser]=true;c.jPlayer.browser.version=l.version}l=c.jPlayer.uaPlatform(navigator.userAgent);if(l.platform){c.jPlayer.platform[l.platform]=true;c.jPlayer.platform.mobile=!l.tablet;c.jPlayer.platform.tablet=!!l.tablet}c.jPlayer.prototype={count:0,version:{script:"2.0.23",needFlash:"2.0.9",flash:"unknown"},options:{swfPath:"js",solution:"html, flash",supplied:"mp3",preload:"metadata",c.jPlayer7,3079
""}};c.jPlayer.browser={};c.jPlayer.platform={};var l=c.jPlayer.uaBrowser(navigator.userAgent);if(l.browser){c.jPlayer.browser[l.browser]=true;c.jPlayer.browser.version=l.version}l=c.jPlayer.uaPlatform(navigator.userAgent);if(l.platform){c.jPlayer.platform[l.platform]=true;c.jPlayer.platform.mobile=!l.tablet;c.jPlayer.platform.tablet=!!l.tablet}c.jPlayer.prototype={count:0,version:{script:"2.0.23",needFlash:"2.0.9",flash:"unknown"},options:{swfPath:"js",solution:"html, flash",supplied:"mp3",preload:"metadata",c.jPlayer.count7,3079
""}};c.jPlayer.browser={};c.jPlayer.platform={};var l=c.jPlayer.uaBrowser(navigator.userAgent);if(l.browser){c.jPlayer.browser[l.browser]=true;c.jPlayer.browser.version=l.version}l=c.jPlayer.uaPlatform(navigator.userAgent);if(l.platform){c.jPlayer.platform[l.platform]=true;c.jPlayer.platform.mobile=!l.tablet;c.jPlayer.platform.tablet=!!l.tablet}c.jPlayer.prototype={count:0,version:{script:"2.0.23",needFlash:"2.0.9",flash:"unknown"},options:{swfPath:"js",solution:"html, flash",supplied:"mp3",preload:"metadata",c.jPlayer.version7,3079
{},this.optionsVideo,this.options):c.extend(true,{},this.optionsAudio,this.options);this._setSize();this.htmlElement.poster=document.createElement("img");this.htmlElement.poster.id=this.internal.poster.id;this.htmlElement.poster.onload=function(){if(!a.status.video||a.status.waitForPlay)a.internal.poster.jq.show()};this.element.append(this.htmlElement.poster);this.internal.poster.jq=c("#"+this.internal.poster.id);this.internal.poster.jq.css({width:this.status.width,height:this.status.height});this.internal.poster.jq.hide();htmlElement.poster.onload16,7726
8){d=['<param name="movie" value="'+this.internal.flash.swf+'" />','<param name="FlashVars" value="'+d+'" />','<param name="allowScriptAccess" value="always" />','<param name="bgcolor" value="'+this.options.backgroundColor+'" />','<param name="wmode" value="'+this.options.wmode+'" />'];b=document.createElement('<object id="'+this.internal.flash.id+'" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="0" height="0"></object>');for(var f=0;f<d.length;f++)b.appendChild(document.createElement(d[f]))}else{f=f21,10316
this._emulateHtmlBridge();this.html.used&&!this.flash.used&&setTimeout(function(){a.internal.ready=true;a.version.flash="n/a";a._trigger(c.jPlayer.event.repeat);a._trigger(c.jPlayer.event.ready)},100);this._updateInterface();this._updateButtons(false);this._updateAutohide();this._updateVolume(this.options.volume);this._updateMute(this.options.muted);this.css.jq.videoPlay.length&&this.css.jq.videoPlay.hide();c.jPlayer.prototype.count++},destroy:function(){this._resetStatus();this._updateInterface();c24,11868
this._emulateHtmlBridge();this.html.used&&!this.flash.used&&setTimeout(function(){a.internal.ready=true;a.version.flash="n/a";a._trigger(c.jPlayer.event.repeat);a._trigger(c.jPlayer.event.ready)},100);this._updateInterface();this._updateButtons(false);this._updateAutohide();this._updateVolume(this.options.volume);this._updateMute(this.options.muted);this.css.jq.videoPlay.length&&this.css.jq.videoPlay.hide();c.jPlayer.prototype.count++},destroy:function(){this._resetStatus();this._updateInterface();c.c.count24,11868
c.each(c.jPlayer.emulateOptions.split(/\s+/g),function(b,d){a.internal.domNode[d]=a.options[d]})},_destroyHtmlBridge:function(){var a=this;this.element.unbind(".jPlayerHtml");c.each((c.jPlayer.emulateMethods+" "+c.jPlayer.emulateStatus+" "+c.jPlayer.emulateOptions).split(/\s+/g),function(b,d){delete a.internal.domNode[d]})}};c.jPlayer.error={FLASH:"e_flash",FLASH_DISABLED:"e_flash_disabled",NO_SOLUTION:"e_no_solution",NO_SUPPORT:"e_no_support",URL:"e_url",URL_NOT_SET:"e_url_not_set",VERSION:"e_version"};c.jPlayer.error.FLASH73,37373
c.each(c.jPlayer.emulateOptions.split(/\s+/g),function(b,d){a.internal.domNode[d]=a.options[d]})},_destroyHtmlBridge:function(){var a=this;this.element.unbind(".jPlayerHtml");c.each((c.jPlayer.emulateMethods+" "+c.jPlayer.emulateStatus+" "+c.jPlayer.emulateOptions).split(/\s+/g),function(b,d){delete a.internal.domNode[d]})}};c.jPlayer.error={FLASH:"e_flash",FLASH_DISABLED:"e_flash_disabled",NO_SOLUTION:"e_no_solution",NO_SUPPORT:"e_no_support",URL:"e_url",URL_NOT_SET:"e_url_not_set",VERSION:"e_version"};c.jPlayer.error.FLASH_DISABLED73,37373
c.each(c.jPlayer.emulateOptions.split(/\s+/g),function(b,d){a.internal.domNode[d]=a.options[d]})},_destroyHtmlBridge:function(){var a=this;this.element.unbind(".jPlayerHtml");c.each((c.jPlayer.emulateMethods+" "+c.jPlayer.emulateStatus+" "+c.jPlayer.emulateOptions).split(/\s+/g),function(b,d){delete a.internal.domNode[d]})}};c.jPlayer.error={FLASH:"e_flash",FLASH_DISABLED:"e_flash_disabled",NO_SOLUTION:"e_no_solution",NO_SUPPORT:"e_no_support",URL:"e_url",URL_NOT_SET:"e_url_not_set",VERSION:"e_version"};c.jPlayer.error.NO_SOLUTION73,37373
c.each(c.jPlayer.emulateOptions.split(/\s+/g),function(b,d){a.internal.domNode[d]=a.options[d]})},_destroyHtmlBridge:function(){var a=this;this.element.unbind(".jPlayerHtml");c.each((c.jPlayer.emulateMethods+" "+c.jPlayer.emulateStatus+" "+c.jPlayer.emulateOptions).split(/\s+/g),function(b,d){delete a.internal.domNode[d]})}};c.jPlayer.error={FLASH:"e_flash",FLASH_DISABLED:"e_flash_disabled",NO_SOLUTION:"e_no_solution",NO_SUPPORT:"e_no_support",URL:"e_url",URL_NOT_SET:"e_url_not_set",VERSION:"e_version"};c.jPlayer.error.NO_SUPPORT73,37373
c.each(c.jPlayer.emulateOptions.split(/\s+/g),function(b,d){a.internal.domNode[d]=a.options[d]})},_destroyHtmlBridge:function(){var a=this;this.element.unbind(".jPlayerHtml");c.each((c.jPlayer.emulateMethods+" "+c.jPlayer.emulateStatus+" "+c.jPlayer.emulateOptions).split(/\s+/g),function(b,d){delete a.internal.domNode[d]})}};c.jPlayer.error={FLASH:"e_flash",FLASH_DISABLED:"e_flash_disabled",NO_SOLUTION:"e_no_solution",NO_SUPPORT:"e_no_support",URL:"e_url",URL_NOT_SET:"e_url_not_set",VERSION:"e_version"};c.jPlayer.error.URL73,37373
c.each(c.jPlayer.emulateOptions.split(/\s+/g),function(b,d){a.internal.domNode[d]=a.options[d]})},_destroyHtmlBridge:function(){var a=this;this.element.unbind(".jPlayerHtml");c.each((c.jPlayer.emulateMethods+" "+c.jPlayer.emulateStatus+" "+c.jPlayer.emulateOptions).split(/\s+/g),function(b,d){delete a.internal.domNode[d]})}};c.jPlayer.error={FLASH:"e_flash",FLASH_DISABLED:"e_flash_disabled",NO_SOLUTION:"e_no_solution",NO_SUPPORT:"e_no_support",URL:"e_url",URL_NOT_SET:"e_url_not_set",VERSION:"e_version"};c.jPlayer.error.URL_NOT_SET73,37373
c.each(c.jPlayer.emulateOptions.split(/\s+/g),function(b,d){a.internal.domNode[d]=a.options[d]})},_destroyHtmlBridge:function(){var a=this;this.element.unbind(".jPlayerHtml");c.each((c.jPlayer.emulateMethods+" "+c.jPlayer.emulateStatus+" "+c.jPlayer.emulateOptions).split(/\s+/g),function(b,d){delete a.internal.domNode[d]})}};c.jPlayer.error={FLASH:"e_flash",FLASH_DISABLED:"e_flash_disabled",NO_SOLUTION:"e_no_solution",NO_SUPPORT:"e_no_support",URL:"e_url",URL_NOT_SET:"e_url_not_set",VERSION:"e_version"};c.jPlayer.error.VERSION73,37373
c.jPlayer.errorMsg={FLASH:"jPlayer's Flash fallback is not configured correctly, or a command was issued before the jPlayer Ready event. Details: ",FLASH_DISABLED:"jPlayer's Flash fallback has been disabled by the browser due to the CSS rules you have used. Details: ",NO_SOLUTION:"No solution can be found by jPlayer in this browser. Neither HTML nor Flash can be used.",NO_SUPPORT:"It is not possible to play any media format provided in setMedia() on this browser using your current options.",URL:"Media URL could not be loaded.",c.jPlayer.errorMsg.FLASH74,37883
c.jPlayer.errorMsg={FLASH:"jPlayer's Flash fallback is not configured correctly, or a command was issued before the jPlayer Ready event. Details: ",FLASH_DISABLED:"jPlayer's Flash fallback has been disabled by the browser due to the CSS rules you have used. Details: ",NO_SOLUTION:"No solution can be found by jPlayer in this browser. Neither HTML nor Flash can be used.",NO_SUPPORT:"It is not possible to play any media format provided in setMedia() on this browser using your current options.",URL:"Media URL could not be loaded.",c.jPlayer.errorMsg.FLASH_DISABLED74,37883
c.jPlayer.errorMsg={FLASH:"jPlayer's Flash fallback is not configured correctly, or a command was issued before the jPlayer Ready event. Details: ",FLASH_DISABLED:"jPlayer's Flash fallback has been disabled by the browser due to the CSS rules you have used. Details: ",NO_SOLUTION:"No solution can be found by jPlayer in this browser. Neither HTML nor Flash can be used.",NO_SUPPORT:"It is not possible to play any media format provided in setMedia() on this browser using your current options.",URL:"Media URL could not be loaded.",c.jPlayer.errorMsg.NO_SOLUTION74,37883
c.jPlayer.errorMsg={FLASH:"jPlayer's Flash fallback is not configured correctly, or a command was issued before the jPlayer Ready event. Details: ",FLASH_DISABLED:"jPlayer's Flash fallback has been disabled by the browser due to the CSS rules you have used. Details: ",NO_SOLUTION:"No solution can be found by jPlayer in this browser. Neither HTML nor Flash can be used.",NO_SUPPORT:"It is not possible to play any media format provided in setMedia() on this browser using your current options.",URL:"Media URL could not be loaded.",c.jPlayer.errorMsg.NO_SUPPORT74,37883
c.jPlayer.errorMsg={FLASH:"jPlayer's Flash fallback is not configured correctly, or a command was issued before the jPlayer Ready event. Details: ",FLASH_DISABLED:"jPlayer's Flash fallback has been disabled by the browser due to the CSS rules you have used. Details: ",NO_SOLUTION:"No solution can be found by jPlayer in this browser. Neither HTML nor Flash can be used.",NO_SUPPORT:"It is not possible to play any media format provided in setMedia() on this browser using your current options.",URL:"Media URL could not be loaded.",c.jPlayer.errorMsg.URL74,37883
c.jPlayer.errorMsg={FLASH:"jPlayer's Flash fallback is not configured correctly, or a command was issued before the jPlayer Ready event. Details: ",FLASH_DISABLED:"jPlayer's Flash fallback has been disabled by the browser due to the CSS rules you have used. Details: ",NO_SOLUTION:"No solution can be found by jPlayer in this browser. Neither HTML nor Flash can be used.",NO_SUPPORT:"It is not possible to play any media format provided in setMedia() on this browser using your current options.",URL:"Media URL could not be loaded.",c.jPlayer.errorMsg.URL_NOT_SET74,37883
URL_NOT_SET:"Attempt to issue media playback commands, while no media url is set.",VERSION:"jPlayer "+c.jPlayer.prototype.version.script+" needs Jplayer.swf version "+c.jPlayer.prototype.version.needFlash+" but found "};c.jPlayer.errorHint={FLASH:"Check your swfPath option and that Jplayer.swf is there.",FLASH_DISABLED:"Check that you have not display:none; the jPlayer entity or any ancestor.",NO_SOLUTION:"Review the jPlayer options: support and supplied.",NO_SUPPORT:"Video or audio formats defined in the supplied option are missing.",c.jPlayer.errorMsg.VERSION75,38417
URL_NOT_SET:"Attempt to issue media playback commands, while no media url is set.",VERSION:"jPlayer "+c.jPlayer.prototype.version.script+" needs Jplayer.swf version "+c.jPlayer.prototype.version.needFlash+" but found "};c.jPlayer.errorHint={FLASH:"Check your swfPath option and that Jplayer.swf is there.",FLASH_DISABLED:"Check that you have not display:none; the jPlayer entity or any ancestor.",NO_SOLUTION:"Review the jPlayer options: support and supplied.",NO_SUPPORT:"Video or audio formats defined in the supplied option are missing.",c.jPlayer.errorHint.FLASH75,38417
URL_NOT_SET:"Attempt to issue media playback commands, while no media url is set.",VERSION:"jPlayer "+c.jPlayer.prototype.version.script+" needs Jplayer.swf version "+c.jPlayer.prototype.version.needFlash+" but found "};c.jPlayer.errorHint={FLASH:"Check your swfPath option and that Jplayer.swf is there.",FLASH_DISABLED:"Check that you have not display:none; the jPlayer entity or any ancestor.",NO_SOLUTION:"Review the jPlayer options: support and supplied.",NO_SUPPORT:"Video or audio formats defined in the supplied option are missing.",c.jPlayer.errorHint.FLASH_DISABLED75,38417
URL_NOT_SET:"Attempt to issue media playback commands, while no media url is set.",VERSION:"jPlayer "+c.jPlayer.prototype.version.script+" needs Jplayer.swf version "+c.jPlayer.prototype.version.needFlash+" but found "};c.jPlayer.errorHint={FLASH:"Check your swfPath option and that Jplayer.swf is there.",FLASH_DISABLED:"Check that you have not display:none; the jPlayer entity or any ancestor.",NO_SOLUTION:"Review the jPlayer options: support and supplied.",NO_SUPPORT:"Video or audio formats defined in the supplied option are missing.",c.jPlayer.errorHint.NO_SOLUTION75,38417
URL_NOT_SET:"Attempt to issue media playback commands, while no media url is set.",VERSION:"jPlayer "+c.jPlayer.prototype.version.script+" needs Jplayer.swf version "+c.jPlayer.prototype.version.needFlash+" but found "};c.jPlayer.errorHint={FLASH:"Check your swfPath option and that Jplayer.swf is there.",FLASH_DISABLED:"Check that you have not display:none; the jPlayer entity or any ancestor.",NO_SOLUTION:"Review the jPlayer options: support and supplied.",NO_SUPPORT:"Video or audio formats defined in the supplied option are missing.",c.jPlayer.errorHint.NO_SUPPORT75,38417
URL_NOT_SET:"Attempt to issue media playback commands, while no media url is set.",VERSION:"jPlayer "+c.jPlayer.prototype.version.script+" needs Jplayer.swf version "+c.jPlayer.prototype.version.needFlash+" but found "};c.jPlayer.errorHint={FLASH:"Check your swfPath option and that Jplayer.swf is there.",FLASH_DISABLED:"Check that you have not display:none; the jPlayer entity or any ancestor.",NO_SOLUTION:"Review the jPlayer options: support and supplied.",NO_SUPPORT:"Video or audio formats defined in the supplied option are missing.",c.jPlayer.errorHint.URL75,38417
URL:"Check media URL is valid.",URL_NOT_SET:"Use setMedia() to set the media URL.",VERSION:"Update jPlayer files."};c.jPlayer.warning={CSS_SELECTOR_COUNT:"e_css_selector_count",CSS_SELECTOR_METHOD:"e_css_selector_method",CSS_SELECTOR_STRING:"e_css_selector_string",OPTION_KEY:"e_option_key"};c.jPlayer.warningMsg={CSS_SELECTOR_COUNT:"The number of css selectors found did not equal one: ",CSS_SELECTOR_METHOD:"The methodName given in jPlayer('cssSelector') is not a valid jPlayer method.",CSS_SELECTOR_STRING:"The methodCssSelector given in jPlayer('cssSelector') is not a String or is empty.",c.jPlayer.errorHint.URL_NOT_SET76,38959
URL:"Check media URL is valid.",URL_NOT_SET:"Use setMedia() to set the media URL.",VERSION:"Update jPlayer files."};c.jPlayer.warning={CSS_SELECTOR_COUNT:"e_css_selector_count",CSS_SELECTOR_METHOD:"e_css_selector_method",CSS_SELECTOR_STRING:"e_css_selector_string",OPTION_KEY:"e_option_key"};c.jPlayer.warningMsg={CSS_SELECTOR_COUNT:"The number of css selectors found did not equal one: ",CSS_SELECTOR_METHOD:"The methodName given in jPlayer('cssSelector') is not a valid jPlayer method.",CSS_SELECTOR_STRING:"The methodCssSelector given in jPlayer('cssSelector') is not a String or is empty.",c.jPlayer.errorHint.VERSION76,38959
URL:"Check media URL is valid.",URL_NOT_SET:"Use setMedia() to set the media URL.",VERSION:"Update jPlayer files."};c.jPlayer.warning={CSS_SELECTOR_COUNT:"e_css_selector_count",CSS_SELECTOR_METHOD:"e_css_selector_method",CSS_SELECTOR_STRING:"e_css_selector_string",OPTION_KEY:"e_option_key"};c.jPlayer.warningMsg={CSS_SELECTOR_COUNT:"The number of css selectors found did not equal one: ",CSS_SELECTOR_METHOD:"The methodName given in jPlayer('cssSelector') is not a valid jPlayer method.",CSS_SELECTOR_STRING:"The methodCssSelector given in jPlayer('cssSelector') is not a String or is empty.",c.jPlayer.warning.CSS_SELECTOR_COUNT76,38959
URL:"Check media URL is valid.",URL_NOT_SET:"Use setMedia() to set the media URL.",VERSION:"Update jPlayer files."};c.jPlayer.warning={CSS_SELECTOR_COUNT:"e_css_selector_count",CSS_SELECTOR_METHOD:"e_css_selector_method",CSS_SELECTOR_STRING:"e_css_selector_string",OPTION_KEY:"e_option_key"};c.jPlayer.warningMsg={CSS_SELECTOR_COUNT:"The number of css selectors found did not equal one: ",CSS_SELECTOR_METHOD:"The methodName given in jPlayer('cssSelector') is not a valid jPlayer method.",CSS_SELECTOR_STRING:"The methodCssSelector given in jPlayer('cssSelector') is not a String or is empty.",c.jPlayer.warning.CSS_SELECTOR_METHOD76,38959
URL:"Check media URL is valid.",URL_NOT_SET:"Use setMedia() to set the media URL.",VERSION:"Update jPlayer files."};c.jPlayer.warning={CSS_SELECTOR_COUNT:"e_css_selector_count",CSS_SELECTOR_METHOD:"e_css_selector_method",CSS_SELECTOR_STRING:"e_css_selector_string",OPTION_KEY:"e_option_key"};c.jPlayer.warningMsg={CSS_SELECTOR_COUNT:"The number of css selectors found did not equal one: ",CSS_SELECTOR_METHOD:"The methodName given in jPlayer('cssSelector') is not a valid jPlayer method.",CSS_SELECTOR_STRING:"The methodCssSelector given in jPlayer('cssSelector') is not a String or is empty.",c.jPlayer.warning.CSS_SELECTOR_STRING76,38959
URL:"Check media URL is valid.",URL_NOT_SET:"Use setMedia() to set the media URL.",VERSION:"Update jPlayer files."};c.jPlayer.warning={CSS_SELECTOR_COUNT:"e_css_selector_count",CSS_SELECTOR_METHOD:"e_css_selector_method",CSS_SELECTOR_STRING:"e_css_selector_string",OPTION_KEY:"e_option_key"};c.jPlayer.warningMsg={CSS_SELECTOR_COUNT:"The number of css selectors found did not equal one: ",CSS_SELECTOR_METHOD:"The methodName given in jPlayer('cssSelector') is not a valid jPlayer method.",CSS_SELECTOR_STRING:"The methodCssSelector given in jPlayer('cssSelector') is not a String or is empty.",c.jPlayer.warning.OPTION_KEY76,38959
URL:"Check media URL is valid.",URL_NOT_SET:"Use setMedia() to set the media URL.",VERSION:"Update jPlayer files."};c.jPlayer.warning={CSS_SELECTOR_COUNT:"e_css_selector_count",CSS_SELECTOR_METHOD:"e_css_selector_method",CSS_SELECTOR_STRING:"e_css_selector_string",OPTION_KEY:"e_option_key"};c.jPlayer.warningMsg={CSS_SELECTOR_COUNT:"The number of css selectors found did not equal one: ",CSS_SELECTOR_METHOD:"The methodName given in jPlayer('cssSelector') is not a valid jPlayer method.",CSS_SELECTOR_STRING:"The methodCssSelector given in jPlayer('cssSelector') is not a String or is empty.",c.jPlayer.warningMsg.CSS_SELECTOR_COUNT76,38959
URL:"Check media URL is valid.",URL_NOT_SET:"Use setMedia() to set the media URL.",VERSION:"Update jPlayer files."};c.jPlayer.warning={CSS_SELECTOR_COUNT:"e_css_selector_count",CSS_SELECTOR_METHOD:"e_css_selector_method",CSS_SELECTOR_STRING:"e_css_selector_string",OPTION_KEY:"e_option_key"};c.jPlayer.warningMsg={CSS_SELECTOR_COUNT:"The number of css selectors found did not equal one: ",CSS_SELECTOR_METHOD:"The methodName given in jPlayer('cssSelector') is not a valid jPlayer method.",CSS_SELECTOR_STRING:"The methodCssSelector given in jPlayer('cssSelector') is not a String or is empty.",c.jPlayer.warningMsg.CSS_SELECTOR_METHOD76,38959
URL:"Check media URL is valid.",URL_NOT_SET:"Use setMedia() to set the media URL.",VERSION:"Update jPlayer files."};c.jPlayer.warning={CSS_SELECTOR_COUNT:"e_css_selector_count",CSS_SELECTOR_METHOD:"e_css_selector_method",CSS_SELECTOR_STRING:"e_css_selector_string",OPTION_KEY:"e_option_key"};c.jPlayer.warningMsg={CSS_SELECTOR_COUNT:"The number of css selectors found did not equal one: ",CSS_SELECTOR_METHOD:"The methodName given in jPlayer('cssSelector') is not a valid jPlayer method.",CSS_SELECTOR_STRING:"The methodCssSelector given in jPlayer('cssSelector') is not a String or is empty.",c.jPlayer.warningMsg.CSS_SELECTOR_STRING76,38959
URL:"Check media URL is valid.",URL_NOT_SET:"Use setMedia() to set the media URL.",VERSION:"Update jPlayer files."};c.jPlayer.warning={CSS_SELECTOR_COUNT:"e_css_selector_count",CSS_SELECTOR_METHOD:"e_css_selector_method",CSS_SELECTOR_STRING:"e_css_selector_string",OPTION_KEY:"e_option_key"};c.jPlayer.warningMsg={CSS_SELECTOR_COUNT:"The number of css selectors found did not equal one: ",CSS_SELECTOR_METHOD:"The methodName given in jPlayer('cssSelector') is not a valid jPlayer method.",CSS_SELECTOR_STRING:"The methodCssSelector given in jPlayer('cssSelector') is not a String or is empty.",c.jPlayer.warningMsg.OPTION_KEY76,38959
OPTION_KEY:"The option requested in jPlayer('option') is undefined."};c.jPlayer.warningHint={CSS_SELECTOR_COUNT:"Check your css selector and the ancestor.",CSS_SELECTOR_METHOD:"Check your method name.",CSS_SELECTOR_STRING:"Check your css selector is a string.",OPTION_KEY:"Check your option name."}})(jQuery);c.jPlayer.warningHint.CSS_SELECTOR_COUNT77,39554
OPTION_KEY:"The option requested in jPlayer('option') is undefined."};c.jPlayer.warningHint={CSS_SELECTOR_COUNT:"Check your css selector and the ancestor.",CSS_SELECTOR_METHOD:"Check your method name.",CSS_SELECTOR_STRING:"Check your css selector is a string.",OPTION_KEY:"Check your option name."}})(jQuery);c.jPlayer.warningHint.CSS_SELECTOR_METHOD77,39554
OPTION_KEY:"The option requested in jPlayer('option') is undefined."};c.jPlayer.warningHint={CSS_SELECTOR_COUNT:"Check your css selector and the ancestor.",CSS_SELECTOR_METHOD:"Check your method name.",CSS_SELECTOR_STRING:"Check your css selector is a string.",OPTION_KEY:"Check your option name."}})(jQuery);c.jPlayer.warningHint.CSS_SELECTOR_STRING77,39554
OPTION_KEY:"The option requested in jPlayer('option') is undefined."};c.jPlayer.warningHint={CSS_SELECTOR_COUNT:"Check your css selector and the ancestor.",CSS_SELECTOR_METHOD:"Check your method name.",CSS_SELECTOR_STRING:"Check your css selector is a string.",OPTION_KEY:"Check your option name."}})(jQuery);c.jPlayer.warningHint.OPTION_KEY77,39554

gui-wt/mainToolbar.cc,501
namespace minsky { namespace gui {minsky15,244
namespace minsky { namespace gui {gui15,244
MainToolbar::MainToolbar(WContainerWidget* parent)MainToolbar19,305
MainToolbar::~MainToolbar()~MainToolbar27,489
void MainToolbar::initialize(CanvasView& canvas)initialize31,526
MainToolbar::Button* MainToolbar::addOperationButton(const string& id)addOperationButton164,7069
void MainToolbar::docHasChanged(AbstractView* source, MinskyDoc::Hint hint, const AnyParams& data)docHasChanged187,7617

gui-wt/cairoImageResource.h,696
#define CAIROIMAGERESOURCE_H_CAIROIMAGERESOURCE_H_21,754
#undef NoneNone24,812
namespace minsky { namespace gui {minsky30,925
namespace minsky { namespace gui {gui30,925
class ::Wt::Http::Request;Request32,963
class ::Wt::Http::Response;Response33,991
class CairoImageResource: public Wt::WResourceCairoImageResource39,1125
  struct httpDownloadRequestExceptionhttpDownloadRequestException45,1264
  typedef std::vector<char> Buffer;Buffer49,1375
  Buffer  buffer;                 ///< transport bufferbuffer52,1424
  Wt::Signal<> transferComplete_; ///< Event signals end of transfer.transferComplete_53,1481
  inline Wt::Signal<>& tranferComplete()tranferComplete79,2047

gui-wt/globalPreferences.cc,320
namespace minsky { namespace gui {minsky22,736
namespace minsky { namespace gui {gui22,736
GlobalPreferences::GlobalPreferences()GlobalPreferences24,772
GlobalPreferences::GlobalPreferences(const GlobalPreferences& other)GlobalPreferences27,816
GlobalPreferences::~GlobalPreferences()~GlobalPreferences34,1060

gui-wt/linkCanvasItem.cc,1320
namespace minsky { namespace gui {minsky28,898
namespace minsky { namespace gui {gui28,898
LinkCanvasItem::LinkCanvasItem(MinskyDoc::ObjectId _id, minsky::Wire& _wire, CanvasView* parent)LinkCanvasItem32,955
LinkCanvasItem::~LinkCanvasItem()~LinkCanvasItem46,1345
void LinkCanvasItem::initInteractive()initInteractive49,1384
void LinkCanvasItem::getModelPos(double& x, double& y) constgetModelPos73,2110
void LinkCanvasItem::getPoints(PointsList& points)getPoints81,2298
void LinkCanvasItem::setPoints(const PointsList& points)setPoints93,2547
bool LinkCanvasItem::editProperties()editProperties108,2877
void LinkCanvasItem::getPortsList(PortsList& ports) constgetPortsList113,2936
void LinkCanvasItem::removePoint(size_t pointIndex)removePoint120,3074
void LinkCanvasItem::addPoint(size_t insertAt, const WPointF& pnt)addPoint126,3212
void LinkCanvasItem::setPoint(size_t pointIndex, const WPointF& pnt)setPoint132,3392
void LinkCanvasItem::draw(CanvasPainter& painter, Polygon& outline)draw138,3576
void LinkCanvasItem::paintEvent (WPaintDevice *paintDevice)paintEvent144,3748
WireEventArea::WireEventArea(CanvasView* _parent)WireEventArea155,4048
WireEventArea::~WireEventArea()~WireEventArea164,4315
void WireEventArea::paintEvent(Wt::WPaintDevice* paintDevice)paintEvent174,4492

gui-wt/viewManager.cc,580
namespace minsky { namespace gui {minsky24,808
namespace minsky { namespace gui {gui24,808
void ViewManager::registerView(AbstractView& view, MinskyDoc& doc)registerView26,846
bool ViewManager::unregisterView(AbstractView& view)unregisterView43,1221
void ViewManager::getViews(const MinskyDoc& doc, ViewsVector& viewsVector)getViews59,1554
MinskyDoc& ViewManager::getDoc(AbstractView& view)getDoc72,1835
void ViewManager::setActiveView(AbstractView& view)setActiveView82,2060
void ViewManager::docHasChanged(MinskyDoc& doc, AbstractView* view,docHasChanged93,2286

gui-wt/fileOpenDlg.h,794
#define FILEOPENDLG_H_FILEOPENDLG_H_21,747
namespace minsky { namespace gui {minsky27,851
namespace minsky { namespace gui {gui27,851
class FileOpenDlg: public Wt::Ext::DialogFileOpenDlg39,1207
  Wt::WFileUpload* fileUpload;      ///< Weak pinter to the uploader,fileUpload42,1263
  inline const std::string getClientFileName() constgetClientFileName61,1759
  inline const std::string getServerFileName() constgetServerFileName69,1944
  inline Wt::EventSignal<>& uploaded()uploaded77,2120
  inline Wt::Signal<uint64_t, uint64_t>& dataReceived()dataReceived86,2352
  inline Wt::Signal<int64_t>& fileTooLarge()fileTooLarge98,2694
  inline Wt::WProgressBar* progressBar()progressBar103,2792
  inline void setProgressBar(Wt::WProgressBar* progressBar)setProgressBar108,2885

gui-wt/constantPropertiesDlg.cc,699
namespace minsky { namespace gui {minsky26,813
namespace minsky { namespace gui {gui26,813
  class NameValidator : public Validator<WString>NameValidator29,861
    Constant* constant;   ///< Weak pointer to edited objectconstant32,925
    NameValidator(Constant* _constant)NameValidator34,987
    virtual bool validate(WString& value)validate38,1063
ConstantPropertiesDlg::ConstantPropertiesDlg(OperationPtr op)ConstantPropertiesDlg61,1427
ConstantPropertiesDlg::~ConstantPropertiesDlg()~ConstantPropertiesDlg84,2006
void ConstantPropertiesDlg::initialize()initialize88,2059
bool ConstantPropertiesDlg::validate()validate101,2583
void ConstantPropertiesDlg::save()save115,2851

gui-wt/remoteClipBoard.h,443
#define REMOTECLIPBOARD_H_REMOTECLIPBOARD_H_9,115
namespace minsky { namespace gui {minsky14,202
namespace minsky { namespace gui {gui14,202
class RemoteClipBoard: public IClipBoardRemoteClipBoard20,359
  typedef boost::variant<DataChunk>  Contents;Contents28,574
  Contents contents;  ///< clip board contents.contents34,665
  bool     empty;     ///< very simplistic contents checking, since there is only one type.empty35,714

gui-wt/mainWindow.h,200
#define _MAINWINDOW_H_MAINWINDOW_H23,748
namespace minsky { namespace gui {minsky27,803
namespace minsky { namespace gui {gui27,803
class MainWindow : public WContainerWidgetMainWindow38,1067

gui-wt/deleteItemsOverlay.h,391
#define DELETEITEMSOVERLAY_H_DELETEITEMSOVERLAY_H_21,734
namespace minsky { namespace gui {minsky25,795
namespace minsky { namespace gui {gui25,795
class DeleteItemsOverlay: public Wt::WPaintedWidgetDeleteItemsOverlay33,940
  typedef Wt::WPaintedWidget _base_class;_base_class36,1003
typedef std::shared_ptr<DeleteItemsOverlay> DeleteItemsOverlayPtr;DeleteItemsOverlayPtr73,1662

gui-wt/godleyTableWidget.h,809
#define GODLEYTABLEWIDGET_H_GODLEYTABLEWIDGET_H_21,733
#undef NoneNone26,838
namespace minsky { namespace gui {minsky30,887
namespace minsky { namespace gui {gui30,887
class GodleyTableWidget:GodleyTableWidget35,1025
  typedef Wt::WTable _base_class;_base_class41,1109
    numRowHeaders = 1,numRowHeaders45,1155
    numColumnHeaders = 1,numColumnHeaders46,1178
  MinskyDoc::ObjectId tableId;  ///< Id of the godley table being viewed/editedtableId50,1219
  GodleyIcon& godley;           ///< The godley table being viewed/edited.godley51,1299
  inline int tableRow(int rowWidget) consttableRow117,2885
  inline int tableCol(int colWidget) consttableCol127,3153
  inline int widgetRow(int rowTable) constwidgetRow132,3245
  inline int widgetCol(int colTable) constwidgetCol137,3339

gui-wt/wireCreateOverlay.h,842
#define WIRECREATEOVERLAY_H_WIRECREATEOVERLAY_H_21,733
namespace minsky { namespace gui {minsky27,833
namespace minsky { namespace gui {gui27,833
class WireCreateOverlay : public Wt::WPaintedWidgetWireCreateOverlay34,978
  typedef Wt::WPaintedWidget _base_class;_base_class37,1041
  typedef int PortId;PortId39,1084
    invalidPort = -1,invalidPort43,1118
  bool isActive = false;          ///<  true while the user is dragging the wire.isActive47,1155
  PortId fromPort = invalidPort;  ///<  source port.fromPort48,1237
  PortId toPort   = invalidPort;  ///<  destination port.toPort49,1290
  Wt::WPointF mousePos;           ///<  current mouse position, if active.mousePos50,1348
  inline bool active() constactive69,1683
typedef std::shared_ptr<WireCreateOverlay> WireCreateOverlayPtr;WireCreateOverlayPtr94,2000

gui-wt/abstractView.cc,260
namespace minsky { namespace gui {minsky24,806
namespace minsky { namespace gui {gui24,806
AbstractView::AbstractView(MinskyDoc& doc)AbstractView26,844
AbstractView::~AbstractView()~AbstractView32,971
void AbstractView::onGetFocus()onGetFocus43,1255

gui-wt/groupCanvasItem.cc,580
namespace minsky { namespace gui {minsky25,814
namespace minsky { namespace gui {gui25,814
GroupCanvasItem::GroupCanvasItem(MinskyDoc::ObjectId id, GroupIcon& _icon, CanvasView* parent)GroupCanvasItem27,850
GroupCanvasItem::~GroupCanvasItem()~GroupCanvasItem41,1213
void GroupCanvasItem::getModelPos(double& x, double& y) constgetModelPos44,1254
bool GroupCanvasItem::editProperties()editProperties50,1353
void GroupCanvasItem::getPortsList(PortsList& ports) constgetPortsList75,1767
void GroupCanvasItem::draw(CanvasPainter& painter, Polygon& outline)draw80,1855

gui-wt/operationCanvasItem.cc,951
namespace minsky { namespace gui {minsky30,971
namespace minsky { namespace gui {gui30,971
OperationCanvasItem::OperationCanvasItem(MinskyDoc::ObjectId id, OperationPtr op, CanvasView* _parent)OperationCanvasItem34,1028
OperationCanvasItem::~OperationCanvasItem()~OperationCanvasItem60,1705
void OperationCanvasItem::moveTo(const double& x, const double& y)moveTo69,1842
void OperationCanvasItem::getModelPos(double& x, double& y) constgetModelPos75,1974
bool OperationCanvasItem::editProperties()editProperties81,2089
void OperationCanvasItem::getPortsList(PortsList& ports) constgetPortsList129,3223
void OperationCanvasItem::sliderSetValue(const double& value)sliderSetValue137,3395
void OperationCanvasItem::setSliderWidgetPos()setSliderWidgetPos145,3596
void OperationCanvasItem::draw(CanvasPainter& painter, Polygon& outline)draw157,3927
void OperationCanvasItem::paintEvent (WPaintDevice *paintDevice)paintEvent162,4037

gui-wt/disablingOverlay.h,377
#define DISABLINGOVERLAY_H_DISABLINGOVERLAY_H_21,732
namespace minsky { namespace gui {minsky26,809
namespace minsky { namespace gui {gui26,809
class DisablingOverlay : public Wt::WPaintedWidgetDisablingOverlay33,927
  typedef Wt::WPaintedWidget _base_class;_base_class36,989
typedef std::shared_ptr<DisablingOverlay> DisablingOverlayPtr;DisablingOverlayPtr60,1371

gui-wt/ext/ext-base.js,7901
Ext={version:"2.0.2"};window["undefined"]=window["undefined"];Ext.apply=function(C,D,B){if(B){Ext.apply(C,B)}if(C&&D&&typeof D=="object"){for(var A in D){C[A]=D[A]}}return C};(function(){var idSeed=0;var ua=navigator.userAgent.toLowerCase();var isStrict=document.compatMode=="CSS1Compat",isOpera=ua.indexOf("opera")>-1,isSafari=(/webkit|khtml/).test(ua),isSafari3=isSafari&&ua.indexOf("webkit/5")!=-1,isIE=!isOpera&&ua.indexOf("msie")>-1,isIE7=!isOpera&&ua.indexOf("msie 7")>-1,isGecko=!isSafari&&ua.indexOf("gecko")>-1,isBorderBox=isIE&&!isStrict,isWindows=(ua.indexOf("windows")!=-1||ua.indexOf("win32")!=-1),isMac=(ua.indexOf("macintosh")!=-1||ua.indexOf("mac os x")!=-1),isAir=(ua.indexOf("adobeair")!=-1),isLinux=(ua.indexOf("linux")!=-1),isSecure=window.location.href.toLowerCase().indexOf("https")===0;if(isIE&&!isIE7){try{document.execCommand("BackgroundImageCache",false,true)}catch(e){}}Ext.apply(Ext,{isStrict:isStrict,isSecure:isSecure,isReady:false,enableGarbageCollector:true,enableListenerCollection:false,SSL_SECURE_URL:"javascript:false",BLANK_IMAGE_URL:"http:/"+"/extjs.com/s.gif",emptyFn:function(){},applyIf:function(o,c){if(o&&c){for(var p in c){if(typeof o[p]=="undefined"){o[p]=c[p]}}}return o},addBehaviors:function(o){if(!Ext.isReady){Ext.onReady(function(){Ext.addBehaviors(o)});return }var cache={};for(var b in o){var parts=b.split("@");if(parts[1]){var s=parts[0];if(!cache[s]){cache[s]=Ext.select(s)}cache[s].on(parts[1],o[b])}}cache=null},id:function(el,prefix){prefix=prefix||"ext-gen";el=Ext.getDom(el);var id=prefix+(++idSeed);return el?(el.id?el.id:(el.id=id)):id},extend:function(){var io=function(o){for(var m in o){this[m]=o[m]}};var oc=Object.prototype.constructor;return function(sb,sp,overrides){if(typeof sp=="object"){overrides=sp;sp=sb;sb=overrides.constructor!=oc?overrides.constructor:function(){sp.apply(this,arguments)}}var F=function(){},sbp,spp=sp.prototype;F.prototype=spp;sbp=sb.prototype=new F();sbp.constructor=sb;sb.superclass=spp;if(spp.constructor==oc){spp.constructor=sp}sb.override=function(o){Ext.override(sb,o)};sbp.override=io;Ext.override(sb,overrides);sb.extend=function(o){Ext.extend(sb,o)};return sb}}(),override:function(origclass,overrides){if(overrides){var p=origclass.prototype;for(var method in overrides){p[method]=overrides[method]}}},namespace:function(){var a=arguments,o=null,i,j,d,rt;for(i=0;i<a.length;++i){d=a[i].split(".");rt=d[0];eval("if (typeof "+rt+" == \"undefined\"){"+rt+" = {};} o = "+rt+";");for(j=1;j<d.length;++j){o[d[j]]=o[d[j]]||{};o=o[d[j]]}}},urlEncode:function(o){if(!o){return""}var buf=[];for(var key in o){var ov=o[key],k=encodeURIComponent(key);var type=typeof ov;if(type=="undefined"){buf.push(k,"=&")}else{if(type!="function"&&type!="object"){buf.push(k,"=",encodeURIComponent(ov),"&")}else{if(Ext.isArray(ov)){if(ov.length){for(var i=0,len=ov.length;i<len;i++){buf.push(k,"=",encodeURIComponent(ov[i]===undefined?"":ov[i]),"&")}}else{buf.push(k,"=&")}}}}}buf.pop();return buf.join("")},urlDecode:function(string,overwrite){if(!string||!string.length){return{}}var obj={};var pairs=string.split("&");var pair,name,value;for(var i=0,len=pairs.length;i<len;i++){pair=pairs[i].split("=");name=decodeURIComponent(pair[0]);value=decodeURIComponent(pair[1]);if(overwrite!==true){if(typeof obj[name]=="undefined"){obj[name]=value}else{if(typeof obj[name]=="string"){obj[name]=[obj[name]];obj[name].push(value)}else{obj[name].push(value)}}}else{obj[name]=value}}return obj},each:function(array,fn,scope){if(typeof array.length=="undefined"||typeof array=="string"){array=[array]}for(var i=0,len=array.length;i<len;i++){if(fn.call(scope||array[i],array[i],i,array)===false){return i}}},combine:function(){var as=arguments,l=as.length,r=[];for(var i=0;i<l;i++){var a=as[i];if(Ext.isArray(a)){r=r.concat(a)}else{if(a.length!==undefined&&!a.substr){r=r.concat(Array.prototype.slice.call(a,0))}else{r.push(a)}}}return r},escapeRe:function(s){return s.replace(/([.*+?^${}()|[\]\/\\])/g,"\\$1")},callback:function(cb,scope,args,delay){if(typeof cb=="function"){if(delay){cb.defer(delay,scope,args||[])}else{cb.apply(scope,args||[])}}},getDom:function(el){if(!el||!document){return null}return el.dom?el.dom:(typeof el=="string"?document.getElementById(el):el)},getDoc:function(){return Ext.get(document)},getBody:function(){return Ext.get(document.body||document.documentElement)},getCmp:function(id){return Ext.ComponentMgr.get(id)},num:function(v,defaultValue){if(typeof v!="number"){return defaultValue}return v},destroy:function(){for(var i=0,a=arguments,len=a.length;i<len;i++){var as=a[i];if(as){if(typeof as.destroy=="function"){as.destroy()}else{if(as.dom){as.removeAllListeners();as.remove()}}}}},removeNode:isIE?function(){var d;return function(n){if(n&&n.tagName!="BODY"){d=d||document.createElement("div");d.appendChild(n);d.innerHTML=""}}}():function(n){if(n&&n.parentNode&&n.tagName!="BODY"){n.parentNode.removeChild(n)}},type:function(o){if(o===undefined||o===null){return false}if(o.htmlElement){return"element"}var t=typeof o;if(t=="object"&&o.nodeName){switch(o.nodeType){case 1:return"element";case 3:return(/\S/).test(o.nodeValue)?"textnode":"whitespace"}}if(t=="object"||t=="function"){switch(o.constructor){case Array:return"array";case RegExp:return"regexp"}if(typeof o.length=="number"&&typeof o.item=="function"){return"nodelist"}}return t},isEmpty:function(v,allowBlank){return v===null||v===undefined||(!allowBlank?v==="":false)},value:function(v,defaultValue,allowBlank){return Ext.isEmpty(v,allowBlank)?defaultValue:v},isArray:function(v){return v&&typeof v.pop=="function"},isDate:function(v){return v&&typeof v.getFullYear=="function"},isOpera:isOpera,isSafari:isSafari,isSafari3:isSafari3,isSafari2:isSafari&&!isSafari3,isIE:isIE,isIE6:isIE&&!isIE7,isIE7:isIE7,isGecko:isGecko,isBorderBox:isBorderBox,isLinux:isLinux,isWindows:isWindows,isMac:isMac,isAir:isAir,useShims:((isIE&&!isIE7)||(isGecko&&isMac))});Ext.ns=Ext.namespace})();Ext.ns("Ext","Ext.util","Ext.grid","Ext.dd","Ext.tree","Ext.data","Ext.form","Ext.menu","Ext.state","Ext.lib","Ext.layout","Ext.app","Ext.ux");Ext.apply(Function.prototype,{createCallback:function(){var A=arguments;var B=this;return function(){return B.apply(window,A)}},createDelegate:function(C,B,A){var D=this;return function(){var F=B||arguments;if(A===true){F=Array.prototype.slice.call(arguments,0);F=F.concat(B)}else{if(typeof A=="number"){F=Array.prototype.slice.call(arguments,0);var E=[A,0].concat(B);Array.prototype.splice.apply(F,E)}}return D.apply(C||window,F)}},defer:function(C,E,B,A){var D=this.createDelegate(E,B,A);if(C){return setTimeout(D,C)}D();return 0},createSequence:function(B,A){if(typeof B!="function"){return this}var C=this;return function(){var D=C.apply(this||window,arguments);B.apply(A||this||window,arguments);return D}},createInterceptor:function(B,A){if(typeof B!="function"){return this}var C=this;return function(){B.target=this;B.method=C;if(B.apply(A||this||window,arguments)===false){return }return C.apply(this||window,arguments)}}});Ext.applyIf(String,{escape:function(A){return A.replace(/('|\\)/g,"\\$1")},leftPad:function(D,B,C){var A=new String(D);if(!C){C=" "}while(A.length<B){A=C+A}return A.toString()},format:function(B){var A=Array.prototype.slice.call(arguments,1);return B.replace(/\{(\d+)\}/g,function(C,D){return A[D]})}});String.prototype.toggle=function(B,A){return this==B?A:B};String.prototype.trim=function(){var A=/^\s+|\s+$/g;return function(){return this.replace(A,"")}}();Ext.applyIf(Number.prototype,{constrain:function(B,A){return Math.min(Math.max(this,B),A)}});Ext.applyIf(Array.prototype,{indexOf:function(C){for(var B=0,A=this.length;B<A;B++){if(this[B]==C){return B}}return -1},remove:function(B){var A=this.indexOf(B);if(A!=-1){this.splice(A,1)}return this}});Date.prototype.getElapsed=function(A){return Math.abs((A||new Date()).getTime()-this.getTime())};Ext.version9,135

gui-wt/ext/ext-all-debug.js,31385
    var createHtml = function(o){Ext.DomHelper.createHtml16,344
    var createDom = function(o, parentNode){Ext.DomHelper.createDom76,2207
    var ieTable = function(depth, s, h, e){Ext.DomHelper.ieTable111,3492
    var insertIntoTable = function(tag, where, el, html){Ext.DomHelper.insertIntoTable129,3912
/*Ext.DomHelper0,0
        var range = el.ownerDocument.createRange();range247,7834
        var frag;frag248,7887
        var newNode;newNode302,9850
        var newNode;newNode316,10332
}();Ext.Template340,11009
Ext.Template.prototype = {Ext.Template.applyTemplate364,11538
        var fn = function(m, name, format, args){Ext.Template.applyTemplate.fn372,11790
    },Ext.Template.set397,12811
    },Ext.Template.disableFormats407,13009
    disableFormats : false,Ext.Template.re410,13029
        var sep = Ext.isGecko ? "+" : ",";sep419,13252
        var fn = function(m, name, format, args){fn420,13296
        var body;body434,13905
    var encodeArray = function(o){encodeArray6607,190619
    var encodeDate = function(o){encodeDate6628,191308
    this.encode = function(o){encode6638,191630
    this.decode = function(json){decode6677,192922
Ext.decode = Ext.util.JSON.decode;Ext.util.Format6684,193052
});Ext.XTemplate.from6983,202486
    var camelFn = function(m, a){ return a.charAt(1).toUpperCase(); };Ext.util.CSS.camelFn6996,202727
};Ext.util.CSS6989,202614
       var ss = doc.createElement("link");ss7036,203893
   			var ds = doc.styleSheets;ds7066,204679
}();Ext.util.ClickRepeater7109,205675
});Ext.KeyNav7211,208339
Ext.KeyNav.prototype = {Ext.KeyNav.disabled7222,208522
    disabled : false,Ext.KeyNav.defaultEventAction7224,208552
    defaultEventAction: "stopEvent",Ext.KeyNav.forceKeyDown7226,208579
    forceKeyDown : false,Ext.KeyNav.prepareEvent7228,208621
    },Ext.KeyNav.relay7236,208864
    },Ext.KeyNav.doRelay7246,209117
    },Ext.KeyNav.enter7250,209212
        enter : false,Ext.KeyNav.left7252,209220
    left : false,Ext.KeyNav.right7253,209243
    right : false,Ext.KeyNav.up7254,209261
    up : false,Ext.KeyNav.down7255,209280
    down : false,Ext.KeyNav.tab7256,209296
    tab : false,Ext.KeyNav.esc7257,209314
    esc : false,Ext.KeyNav.pageUp7258,209331
    pageUp : false,Ext.KeyNav.pageDown7259,209348
    pageDown : false,Ext.KeyNav.del7260,209368
    del : false,Ext.KeyNav.home7261,209390
    home : false,Ext.KeyNav.end7262,209407
    end : false,Ext.KeyNav.keyToHandler7263,209425
};Ext.KeyMap7305,210439
Ext.KeyMap.prototype = {Ext.KeyMap.stopEvent7317,210675
    stopEvent : false,Ext.KeyMap.addBinding7319,210707
        var handler = function(e){Ext.KeyMap.addBinding.handler7346,211526
	},Ext.KeyMap.on7370,212445
};Ext.util.TextMetrics7423,213549
    var instance = {Ext.util.TextMetrics.Instance.instance.getSize7456,214374
        },instance.bind7463,214550
        },instance.setFixedWidth7470,214748
        },instance.getWidth7475,214842
        },instance.getHeight7481,214984
}();Ext.util.TextMetrics.Instance7443,214068
var Dom=Ext.lib.Dom;Dom7500,215264
var Dom=Ext.lib.Dom;Ext.dd.DragDrop7500,215264
};Ext.dd.DragDrop7507,215401
Ext.dd.DragDrop.prototype = {Ext.dd.DragDrop.id7509,215407
    id: null,Ext.dd.DragDrop.config7512,215446
    config: null,Ext.dd.DragDrop.dragElId7515,215469
    dragElId: null,Ext.dd.DragDrop.handleElId7518,215496
    handleElId: null,Ext.dd.DragDrop.invalidHandleTypes7521,215525
    invalidHandleTypes: null,Ext.dd.DragDrop.invalidHandleIds7524,215556
    invalidHandleIds: null,Ext.dd.DragDrop.invalidHandleClasses7527,215595
    invalidHandleClasses: null,Ext.dd.DragDrop.startPageX7530,215632
    startPageX: 0,Ext.dd.DragDrop.startPageY7533,215673
    startPageY: 0,Ext.dd.DragDrop.groups7536,215701
    groups: null,Ext.dd.DragDrop.locked7539,215729
    locked: false,Ext.dd.DragDrop.lock7542,215756
    lock: function() { this.locked = true; },Ext.dd.DragDrop.unlock7545,215784
    unlock: function() { this.locked = false; },Ext.dd.DragDrop.isTarget7548,215839
    isTarget: true,Ext.dd.DragDrop.padding7551,215897
    padding: null,Ext.dd.DragDrop._domRef7554,215926
    _domRef: null,Ext.dd.DragDrop.__ygDragDrop7557,215954
    __ygDragDrop: true,Ext.dd.DragDrop.constrainX7560,215982
    constrainX: false,Ext.dd.DragDrop.constrainY7563,216015
    constrainY: false,Ext.dd.DragDrop.minX7566,216047
    minX: 0,Ext.dd.DragDrop.maxX7569,216079
    maxX: 0,Ext.dd.DragDrop.minY7572,216101
    minY: 0,Ext.dd.DragDrop.maxY7575,216123
    maxY: 0,Ext.dd.DragDrop.maintainOffset7578,216145
    maintainOffset: false,Ext.dd.DragDrop.xTicks7581,216167
    xTicks: null,Ext.dd.DragDrop.yTicks7584,216203
    yTicks: null,Ext.dd.DragDrop.primaryButtonOnly7587,216230
    primaryButtonOnly: true,Ext.dd.DragDrop.available7590,216257
    available: false,Ext.dd.DragDrop.hasOuterHandles7593,216295
    hasOuterHandles: false,Ext.dd.DragDrop.b4StartDrag7596,216326
    b4StartDrag: function(x, y) { },Ext.dd.DragDrop.startDrag7599,216363
    startDrag: function(x, y) {  },Ext.dd.DragDrop.b4Drag7602,216409
    b4Drag: function(e) { },Ext.dd.DragDrop.onDrag7605,216454
    onDrag: function(e) {  },Ext.dd.DragDrop.onDragEnter7608,216492
    onDragEnter: function(e, id) {  },Ext.dd.DragDrop.b4DragOver7611,216531
    b4DragOver: function(e) { },Ext.dd.DragDrop.onDragOver7614,216579
    onDragOver: function(e, id) {  },Ext.dd.DragDrop.b4DragOut7617,216621
    b4DragOut: function(e) { },Ext.dd.DragDrop.onDragOut7620,216668
    onDragOut: function(e, id) {  },Ext.dd.DragDrop.b4DragDrop7623,216709
    b4DragDrop: function(e) { },Ext.dd.DragDrop.onDragDrop7626,216755
    onDragDrop: function(e, id) {  },Ext.dd.DragDrop.onInvalidDrop7629,216797
    onInvalidDrop: function(e) {  },Ext.dd.DragDrop.b4EndDrag7632,216844
    b4EndDrag: function(e) { },Ext.dd.DragDrop.endDrag7635,216890
    endDrag: function(e) {  },Ext.dd.DragDrop.b4MouseDown7638,216931
    b4MouseDown: function(e) {  },Ext.dd.DragDrop.onMouseDown7641,216971
    onMouseDown: function(e) {  },Ext.dd.DragDrop.onMouseUp7644,217015
    onMouseUp: function(e) {  },Ext.dd.DragDrop.onAvailable7647,217059
    },Ext.dd.DragDrop.defaultPadding7651,217133
            pad = {left: pad, right:pad, top:pad, bottom:pad};left7659,217310
            pad = {left: pad, right:pad, top:pad, bottom:pad};right7659,217310
            pad = {left: pad, right:pad, top:pad, bottom:pad};top7659,217310
            pad = {left: pad, right:pad, top:pad, bottom:pad};bottom7659,217310
        var b = Ext.get(this.getEl()).getBox();b7662,217428
        var ce = Ext.get(constrainTo);ce7663,217477
        var s = ce.getScroll();s7664,217517
        var c, cd = ce.dom;c7665,217550
            c = { x: s.left, y: s.top, width: Ext.lib.Dom.getViewWidth(), height: Ext.lib.Dom.getViewHeight()};c.x7667,217613
            c = {x : xy[0]+s.left, y: xy[1]+s.top, width: cd.clientWidth, height: cd.clientHeight};c.x7670,217776
        var topSpace = b.y - c.y;topSpace7674,217892
        var leftSpace = b.x - c.x;leftSpace7675,217927
        this.invalidHandleTypes = { A: "A" };invalidHandleTypes.A7740,219235
        var dx = diffX || 0;dx7788,220457
        var dy = diffY || 0;dy7789,220487
        var p = Dom.getXY( el );p7791,220519
        var nodeName;nodeName7959,224395
if (!Ext.dd.DragDropMgr) {Ext.dd.DragDropMgr8134,228890
            var el = oDD.getEl();el8357,233832
            var pt = e.getPoint();pt8481,237097
            var oldOvers = [];oldOvers8484,237148
            var outEvts   = [];outEvts8486,237182
            var overEvts  = [];overEvts8487,237215
            var dropEvts  = [];dropEvts8488,237248
            var enterEvts = [];enterEvts8489,237281
            var len = dds.length;len8608,240726
            var el = oDD.getEl(), pos, x1, x2, y1, y2, t, r, b, l;el8685,242882
            var pos = dc.getTargetCoord(pt.x, pt.y);pos8741,244286
            var el = dc.getDragEl();el8743,244342
            var overlap = curRegion.intersect(loc);overlap8749,244652
}Ext.dd.DD8927,249152
});Ext.dd.DDProxy9112,253343
});Ext.dd.DDTarget9254,256340
});Ext.dd.DragTracker9267,256596
    var onStop = function(e){Ext.dd.ScrollManager.onStop9428,260632
    var triggerRefresh = function(){Ext.dd.ScrollManager.triggerRefresh9433,260723
    var doScroll = function(){Ext.dd.ScrollManager.doScroll9439,260872
    var clearProc = function(){Ext.dd.ScrollManager.clearProc9454,261389
    var startProc = function(el, dir){Ext.dd.ScrollManager.startProc9463,261577
    var onFire = function(e, isDrop){Ext.dd.ScrollManager.onFire9470,261775
});Ext.dd.ScrollManager9420,260486
    var getId = function(el, autogen){Ext.dd.Registry.getId9572,264629
}();Ext.dd.Registry9565,264515
            var data = elements[id];data9607,265604
}();Ext.dd.StatusProxy9647,266664
Ext.dd.StatusProxy.prototype = {Ext.dd.StatusProxy.dropAllowed9665,267219
    dropAllowed : "x-dd-drop-ok",Ext.dd.StatusProxy.dropNotAllowed9667,267259
    dropNotAllowed : "x-dd-drop-nodrop",Ext.dd.StatusProxy.setStatus9669,267300
    },Ext.dd.StatusProxy.reset9678,267596
    },Ext.dd.StatusProxy.update9687,267842
    },html.Ext.dd.StatusProxy.getEl9698,268120
    },Ext.dd.StatusProxy.getGhost9703,268186
    },Ext.dd.StatusProxy.hide9708,268258
    },Ext.dd.StatusProxy.stop9716,268390
    },Ext.dd.StatusProxy.show9723,268546
    },Ext.dd.StatusProxy.sync9728,268611
    },Ext.dd.StatusProxy.repair9733,268676
    },Ext.dd.StatusProxy.afterRepair9753,269275
};Ext.dd.DragSource9764,269526
});Ext.dd.DropTarget10011,275623
});Ext.dd.DragZone10065,276682
});Ext.dd.DropZone10102,277545
Ext.data.SortTypes = {Ext.data.SortTypes.none10196,279729
    },Ext.data.SortTypes.stripTagsRE10200,279803
};Ext.data.Record10244,280691
    }f.getField10260,281146
};Ext.data.Record.create10249,280824
Ext.data.Record.prototype = {Ext.data.Record.dirty10272,281391
    dirty : false,Ext.data.Record.editing10276,281437
    editing : false,Ext.data.Record.error10277,281457
    error: null,Ext.data.Record.modified10278,281479
    modified: null,Ext.data.Record.join10280,281503
    },Ext.data.Record.set10285,281589
    },Ext.data.Record.get10303,282074
    },Ext.data.Record.beginEdit10308,282150
    },Ext.data.Record.cancelEdit10314,282254
    },Ext.data.Record.endEdit10320,282362
    },Ext.data.Record.reject10328,282527
    },Ext.data.Record.commit10344,282930
    },Ext.data.Record.getChanges10354,283167
    },Ext.data.Record.hasError10365,283403
    },Ext.data.Record.clearError10370,283482
    },Ext.data.Record.copy10375,283555
    },Ext.data.Record.isModified10380,283683
    this.data.getKey = function(o){Ext.data.Store.data10414,284429
    this.paramNames = {Ext.data.Store.paramNames.start10420,284534
        "start" : "start",Ext.data.Store.paramNames.limit10421,284559
        "limit" : "limit",Ext.data.Store.paramNames.sort10422,284587
        "sort" : "sort",Ext.data.Store.paramNames.dir10423,284615
});Ext.data.Store10410,284333
});Ext.data.SimpleStore10918,297579
});Ext.data.JsonStore10940,298245
        config = {name: config};config.name10954,298626
        switch(this.type){case10989,299359
Ext.extend(Ext.data.JsonStore, Ext.data.Store);Ext.data.Field10948,298503
};Ext.data.Field11039,301228
Ext.data.Field.prototype = {Ext.data.Field.dateFormat11041,301234
    dateFormat: null,Ext.data.Field.defaultValue11042,301264
    defaultValue: "",Ext.data.Field.mapping11043,301287
    mapping: null,Ext.data.Field.sortType11044,301310
    sortType : null,Ext.data.Field.sortDir11045,301330
};Ext.data.DataReader11047,301373
};Ext.data.DataProxy11058,301613
Ext.extend(Ext.data.DataProxy, Ext.util.Observable);Ext.data.MemoryProxy11072,301841
});Ext.data.HttpProxy11098,302567
});Ext.data.ScriptTagProxy11170,304662
});Ext.data.JsonReader11293,308297
});Ext.data.XmlReader11408,311751
});Ext.data.Tree11493,314638
        this.childNodes.indexOf = function(o){this.childNodes11581,316268
});Ext.data.Node11565,315917
});Ext.ComponentMgr12063,328807
        config = config.initialConfig;     }else if(config.tagName || config.dom || typeof config == "string"){         config = {applyTo: config, id: config.id || config};config.applyTo12120,330006
        config = config.initialConfig;     }else if(config.tagName || config.dom || typeof config == "string"){         config = {applyTo: config, id: config.id || config};config.id12120,330006
Ext.reg = Ext.ComponentMgr.registerType;Ext.Component12113,329786
Ext.reg('component', Ext.Component);Ext.Action12586,341147
Ext.Action.prototype = {Ext.Action.isAction12594,341280
    isAction : true,Ext.Action.setText12603,341349
    },Ext.Action.getText12609,341494
    },Ext.Action.setIconClass12614,341578
    },Ext.Action.getIconClass12620,341719
    },Ext.Action.setDisabled12625,341811
    },Ext.Action.enable12631,341945
    },Ext.Action.disable12636,342021
    },Ext.Action.isDisabled12641,342097
    },Ext.Action.setHidden12646,342188
    },Ext.Action.show12652,342318
    },Ext.Action.hide12657,342390
    },Ext.Action.isHidden12662,342461
    },Ext.Action.setHandler12667,342548
    },Ext.Action.each12674,342739
    },Ext.Action.callEach12679,342830
    },Ext.Action.addComponent12687,343029
    },Ext.Action.removeComponent12693,343169
    },Ext.Action.execute12698,343257
};Layer12704,343397
var supr = Ext.Element.prototype;supr12744,344556
var shims = [];shims12747,344594
})();Ext.Shadow13126,354133
Ext.Shadow.prototype = {Ext.Shadow.offset13179,355518
    offset: 4,Ext.Shadow.defaultMode13182,355553
        defaultMode: "drop",Ext.Shadow.show13184,355569
    },Ext.Shadow.isVisible13206,356357
    },Ext.Shadow.realign13211,356439
    },Ext.Shadow.hide13235,357229
    },Ext.Ext.Ext.Shadow.setZIndex13244,357415
};Ext.Shadow.Pool13253,357563
Ext.reg('box', Ext.BoxComponent);Ext.SplitBar13483,363420
});Ext.SplitBar.createProxy13672,369004
};Ext.SplitBar.BasicLayoutAdapter13682,369341
};Ext.SplitBar.BasicLayoutAdapter13686,369396
Ext.SplitBar.BasicLayoutAdapter.prototype = {Ext.SplitBar.BasicLayoutAdapter.init13688,369402
    },Ext.SplitBar.BasicLayoutAdapter.getElementSize13692,369485
    },Ext.SplitBar.BasicLayoutAdapter.setElementSize13700,369708
};Ext.SplitBar.AbsoluteLayoutAdapter13725,370473
Ext.SplitBar.AbsoluteLayoutAdapter.prototype = {Ext.SplitBar.AbsoluteLayoutAdapter.init13733,370645
    },Ext.SplitBar.AbsoluteLayoutAdapter.getElementSize13736,370749
    },Ext.SplitBar.AbsoluteLayoutAdapter.setElementSize13740,370844
    },Ext.SplitBar.AbsoluteLayoutAdapter.moveSplitter13744,371007
Ext.reg('container', Ext.Container);Ext.layout.ContainerLayout14090,379619
};Ext.layout.ContainerLayout14094,379733
Ext.layout.ContainerLayout.prototype = {Ext.layout.ContainerLayout.monitorResize14096,379737
        monitorResize:false,Ext.layout.ContainerLayout.activeItem14102,379795
        activeItem : null,Ext.layout.ContainerLayout.layout14103,379824
    },Ext.layout.ContainerLayout.onLayout14109,380054
    },Ext.layout.ContainerLayout.isValidParent14113,380139
    },Ext.layout.ContainerLayout.renderAll14118,380294
    },Ext.layout.ContainerLayout.renderItem14128,380610
    },Ext.layout.ContainerLayout.onResize14152,381431
    },Ext.layout.ContainerLayout.setContainer14168,381898
    },Ext.layout.ContainerLayout.parseMargins14180,382238
            this.cmargins = {left:0,top:0,right:0,bottom:0};this.cmargins.left14554,393138
            this.cmargins = {left:0,top:0,right:0,bottom:0};this.cmargins.top14554,393138
            this.cmargins = {left:0,top:0,right:0,bottom:0};this.cmargins.right14554,393138
            this.cmargins = {left:0,top:0,right:0,bottom:0};this.cmargins.bottom14554,393138
});Ext.layout.BorderLayout.Region14537,392574
Ext.layout.BorderLayout.Region.prototype = {Ext.layout.BorderLayout.Region.collapsible14562,393396
    collapsible : false,Ext.layout.BorderLayout.Region.split14569,393471
    split:false,Ext.layout.BorderLayout.Region.floatable14571,393501
    floatable: true,Ext.layout.BorderLayout.Region.minWidth14573,393523
    minWidth:50,Ext.layout.BorderLayout.Region.minHeight14575,393549
    minHeight:50,Ext.layout.BorderLayout.Region.defaultMargins14577,393571
        var gs = p.getState, ps = this.position;gs14596,393963
        var gs = p.getState, ps = this.position;p.getState14596,393963
                Ext.layout.BorderLayout.Region.prototype.toolTemplate = tt;Ext.layout.BorderLayout.Region.toolTemplate14631,395187
                this.autoHideHd = {autoHideHd.mouseout14805,400290
                    },autoHideHd.mouseover14810,400494
                    },autoHideHd.scope14813,400601
};Ext.layout.BorderLayout.SplitRegion14979,405073
Ext.reg('window', Ext.Window);Ext.Window.DD16888,459205
        var sortWindows = function(d1, d2){Ext.WindowGroup.sortWindows16928,460326
        var orderWindows = function(){Ext.WindowGroup.orderWindows16932,460456
        var setActiveWin = function(win){Ext.WindowGroup.setActiveWin16947,460874
        var activateLast = function(){Ext.WindowGroup.activateLast16959,461134
});Ext.WindowGroup16921,460224
Ext.WindowMgr = new Ext.WindowGroup();Ext.dd.PanelProxy17050,463327
Ext.dd.PanelProxy.prototype = {Ext.dd.PanelProxy.insertProxy17058,463517
    insertProxy : true,Ext.dd.PanelProxy.setStatus17060,463556
    this.dragData = {panel: panel};Ext.Panel.DD.dragData.panel17129,465121
};Ext.Panel.DD17124,465051
});Ext.state.Provider17166,466147
});Ext.state.Manager17257,468947
}();Ext.state.CookieProvider17289,469567
Ext.reg('dataview', Ext.DataView);Ext.ColorPalette17797,484038
Ext.reg('tabpanel', Ext.TabPanel);Ext.TabPanel19023,521660
Ext.TabPanel.prototype.activate = Ext.TabPanel.prototype.setActiveTab;Ext.TabPanel.activate19026,521697
Ext.TabPanel.prototype.activate = Ext.TabPanel.prototype.setActiveTab;Ext.TabPanel.AccessStack19026,521697
   function toggleGroup(btn, state){Ext.ButtonToggleMgr.toggleGroup19452,532656
Ext.reg('button', Ext.Button);Ext.ButtonToggleMgr19447,532569
           var g = groups[btn.toggleGroup];g19468,533038
           var g = groups[btn.toggleGroup];g19480,533344
        config = {buttons:config};config.buttons19751,541155
Ext.reg('cycle', Ext.CycleButton);Ext.Toolbar19747,541053
Ext.reg('toolbar', Ext.Toolbar);T.Item19994,547225
T.Item.prototype = {T.Item.getEl20003,547382
    },T.Item.render20008,547467
    },T.Item.destroy20014,547567
    },T.Item.show20021,547723
    },T.Item.hide20027,547833
    },T.Item.setVisible20033,547946
    },T.Item.focus20042,548104
    },T.Item.disable20047,548184
    },T.Item.enable20054,548351
Ext.reg('tbitem', T.Item);T.Separator20063,548533
Ext.reg('tbseparator', T.Separator);T.Spacer20077,548842
Ext.reg('tbfill', T.Fill);T.TextItem20101,549352
Ext.reg('paging', Ext.PagingToolbar);Ext.Resizable20376,557269
Ext.Resizable.positions = {Ext.Resizable.positions.n20867,572854
    n: "north", s: "south", e: "east", w: "west", se: "southeast", sw: "southwest", nw: "northwest", ne: "northeast"Ext.Resizable.positions.s20868,572883
    n: "north", s: "south", e: "east", w: "west", se: "southeast", sw: "southwest", nw: "northwest", ne: "northeast"Ext.Resizable.positions.e20868,572883
    n: "north", s: "south", e: "east", w: "west", se: "southeast", sw: "southwest", nw: "northwest", ne: "northeast"Ext.Resizable.positions.w20868,572883
    n: "north", s: "south", e: "east", w: "west", se: "southeast", sw: "southwest", nw: "northwest", ne: "northeast"Ext.Resizable.positions.se20868,572883
    n: "north", s: "south", e: "east", w: "west", se: "southeast", sw: "southwest", nw: "northwest", ne: "northeast"Ext.Resizable.positions.sw20868,572883
    n: "north", s: "south", e: "east", w: "west", se: "southeast", sw: "southwest", nw: "northwest", ne: "northeast"Ext.Resizable.positions.nw20868,572883
    n: "north", s: "south", e: "east", w: "west", se: "southeast", sw: "southwest", nw: "northwest", ne: "northeast"Ext.Resizable.positions.ne20868,572883
        tpl.compile();Ext.Resizable.Handle20878,573248
        Ext.Resizable.Handle.prototype.tpl = tpl;Ext.Resizable.Handle.tpl20879,573272
Ext.Resizable.Handle.prototype = {Ext.Resizable.Handle.afterResize20896,573741
    },Ext.Resizable.Handle.onMouseDown20899,573819
    },Ext.Resizable.Handle.onMouseOver20903,573903
    },Ext.Resizable.Handle.onMouseOut20907,573986
};Ext.Editor20912,574076
    var handleButton = function(button){Ext.MessageBox.handleButton21154,580051
    var handleHide = function(){Ext.MessageBox.handleHide21160,580216
    var handleEsc = function(d, k, e){Ext.MessageBox.handleEsc21168,580377
    var updateButtons = function(b){Ext.MessageBox.updateButtons21178,580567
Ext.reg('editor', Ext.Editor);Ext.MessageBox21146,579809
            var iw = iconCls != '' ? (iconEl.getWidth() + iconEl.getMargins('lr')) : 0;iw21277,584674
            var mw = msgEl.getWidth() + msgEl.getMargins('lr');mw21278,584763
            var fw = dlg.getFrameWidth('lr');fw21279,584828
            var bw = dlg.body.getFrameWidth('lr');bw21280,584875
            var w = Math.max(Math.min(opt.width || iw+mw+fw+bw, this.maxWidth),w21286,585040
});Ext.Tip.DD21590,593714
});Ext.QuickTips21925,602654
Ext.reg('treepanel', Ext.tree.TreePanel);Ext.tree.TreeEventModel22342,612030
Ext.tree.TreeEventModel.prototype = {Ext.tree.TreeEventModel.initEvents22348,612195
    },Ext.tree.TreeEventModel.getNode22358,612650
    },Ext.tree.TreeEventModel.getNodeTarget22369,612964
    },Ext.tree.TreeEventModel.delegateOut22377,613161
    },Ext.tree.TreeEventModel.delegateOver22393,613624
    },Ext.tree.TreeEventModel.delegateClick22410,614122
    },Ext.tree.TreeEventModel.delegateDblClick22426,614575
    },Ext.tree.TreeEventModel.delegateContextMenu22432,614749
    },Ext.tree.TreeEventModel.onNodeClick22438,614929
    },Ext.tree.TreeEventModel.onNodeOver22442,615006
    },Ext.tree.TreeEventModel.onNodeOut22446,615081
    },Ext.tree.TreeEventModel.onIconOver22450,615154
    },Ext.tree.TreeEventModel.onIconOut22454,615246
    },Ext.tree.TreeEventModel.onIconClick22458,615340
    },Ext.tree.TreeEventModel.onCheckboxClick22462,615417
    },Ext.tree.TreeEventModel.onNodeDblClick22466,615504
    },Ext.tree.TreeEventModel.onNodeContextMenu22470,615587
    },Ext.tree.TreeEventModel.beforeEvent22474,615676
    },Ext.tree.TreeEventModel.disable22482,615834
    },Ext.tree.TreeEventModel.enable22486,615901
};Ext.tree.DefaultSelectionModel22491,615975
});Ext.tree.MultiSelectionModel22644,620232
        attributes = {text: attributes};attributes.text22735,622778
});Ext.tree.TreeNode22730,622653
});Ext.tree.AsyncTreeNode23093,632557
});Ext.tree.TreeNodeUI23171,634826
Ext.tree.TreeNodeUI.prototype = {Ext.tree.TreeNodeUI.removeChild23182,635073
    },Ext.tree.TreeNodeUI.beforeLoad23188,635243
    },Ext.tree.TreeNodeUI.afterLoad23193,635336
    },Ext.tree.TreeNodeUI.onTextChange23198,635431
    },Ext.tree.TreeNodeUI.onDisableChange23205,635581
    },Ext.tree.TreeNodeUI.onSelectedChange23218,635902
    },Ext.tree.TreeNodeUI.onMove23229,636142
    },Ext.tree.TreeNodeUI.addClass23249,636844
    },Ext.tree.TreeNodeUI.removeClass23256,636973
    },Ext.tree.TreeNodeUI.remove23263,637110
    },Ext.tree.TreeNodeUI.fireEvent23271,637299
    },Ext.tree.TreeNodeUI.initEvents23276,637410
    },Ext.tree.TreeNodeUI.getDDHandles23300,638112
    },Ext.tree.TreeNodeUI.hide23305,638220
    },Ext.tree.TreeNodeUI.show23313,638372
    },Ext.tree.TreeNodeUI.onContextMenu23321,638522
    },Ext.tree.TreeNodeUI.onClick23330,638808
    },Ext.tree.TreeNodeUI.onDblClick23359,639653
    },Ext.tree.TreeNodeUI.onOver23374,640014
    },Ext.tree.TreeNodeUI.onOut23378,640095
    },Ext.tree.TreeNodeUI.onCheckChange23382,640178
    },Ext.tree.TreeNodeUI.ecClick23389,640381
    },Ext.tree.TreeNodeUI.startDrop23396,640564
    },Ext.tree.TreeNodeUI.endDrop23401,640639
    },Ext.tree.TreeNodeUI.expand23408,640790
    },Ext.tree.TreeNodeUI.focus23414,640906
    },Ext.tree.TreeNodeUI.toggleCheck23429,641333
    },Ext.tree.TreeNodeUI.blur23437,641513
    },Ext.tree.TreeNodeUI.animExpand23444,641621
    },Ext.tree.TreeNodeUI.highlight23467,642261
    },Ext.tree.TreeNodeUI.collapse23476,642483
    },Ext.tree.TreeNodeUI.animCollapse23482,642605
    },Ext.tree.TreeNodeUI.getContainer23501,643090
    },Ext.tree.TreeNodeUI.getEl23506,643168
    },Ext.tree.TreeNodeUI.appendDDGhost23511,643237
    },Ext.tree.TreeNodeUI.getDDRepairXY23516,643355
    },Ext.tree.TreeNodeUI.onRender23521,643453
    },Ext.tree.TreeNodeUI.render23526,643524
    },Ext.tree.TreeNodeUI.renderElements23564,644841
    },Ext.tree.TreeNodeUI.getAnchor23604,646799
    },Ext.tree.TreeNodeUI.getTextEl23609,646869
    },Ext.tree.TreeNodeUI.getIconEl23614,646945
    },Ext.tree.TreeNodeUI.isChecked23619,647021
    },Ext.tree.TreeNodeUI.updateExpandIcon23624,647126
    },Ext.tree.TreeNodeUI.getChildIndent23664,648604
    },Ext.tree.TreeNodeUI.renderIndent23684,649286
    },Ext.tree.TreeNodeUI.destroy23700,649726
});Ext.tree.TreeLoader23731,650588
});Ext.tree.TreeFilter23891,655005
Ext.tree.TreeFilter.prototype = {Ext.tree.TreeFilter.clearBlank23899,655142
    clearBlank:false,Ext.tree.TreeFilter.reverse23900,655177
    reverse:false,Ext.tree.TreeFilter.autoClear23901,655200
    autoClear:false,Ext.tree.TreeFilter.remove23902,655220
    remove:false,Ext.tree.TreeFilter.filter23903,655242
            value = value.toLowerCase();f23916,655574
	},Ext.tree.TreeFilter.filterBy23928,656016
        var f = function(n){Ext.tree.TreeFilter.filterBy.f23937,656250
    },Ext.tree.TreeFilter.clear23963,656979
    this.sortFn = function(n1, n2){Ext.tree.TreeSorter.sortFn23996,657883
};Ext.tree.TreeSorter23979,657328
Ext.tree.TreeSorter.prototype = {Ext.tree.TreeSorter.doSort24017,658522
    },Ext.tree.TreeSorter.compareNodes24020,658620
    },Ext.tree.TreeSorter.updateSort24024,658746
    },Ext.tree.TreeSorter.updateSortParent24030,658896
if(Ext.dd.DropZone){Ext.tree.TreeDropZone24040,659079
if(Ext.dd.DragZone){Ext.tree.TreeDragZone24299,666751
}Ext.tree.TreeEditor24351,668139
        config = {items:config};config.items24453,670990
});Ext.menu.Menu24449,670922
});Ext.menu.MenuNav24801,679633
      function init(){Ext.menu.MenuMgr.init24856,681019
      function hideAll(){Ext.menu.MenuMgr.hideAll24866,681250
      function onHide(m){Ext.menu.MenuMgr.onHide24875,681437
      function onShow(m){Ext.menu.MenuMgr.onShow24883,681616
      function onBeforeHide(m){Ext.menu.MenuMgr.onBeforeHide24899,682137
      function onBeforeShow(m){Ext.menu.MenuMgr.onBeforeShow24909,682357
      function onMouseDown(e){Ext.menu.MenuMgr.onMouseDown24918,682567
      function onBeforeCheck(mi, state){Ext.menu.MenuMgr.onBeforeCheck24924,682722
});Ext.menu.MenuMgr24851,680906
           var g = menu.group;g24951,683378
           var g = menu.group;g24978,684344
}();Ext.menu.BaseItem25028,685746
});Ext.menu.TextItem25123,687978
});Ext.menu.Separator25144,688468
});Ext.menu.Item25164,688983
});Ext.menu.CheckItem25287,692600
});Ext.menu.Adapter25349,694312
});Ext.menu.DateItem25385,695218
});Ext.menu.ColorItem25406,695854
Ext.extend(Ext.menu.ColorItem, Ext.menu.Adapter);Ext.menu.DateMenu25417,696178
});Ext.menu.ColorMenu25441,696777
Ext.form.Field.msgFx = {Ext.form.Field.msgFx.normal25808,706447
Ext.reg('hidden', Ext.form.Hidden);Ext.form.BasicForm27492,754576
Ext.reg('label', Ext.form.Label);Ext.form.Action29006,794771
Ext.form.Action.prototype = {Ext.form.Action.type29022,795084
    type : 'default',Ext.form.Action.run29033,795124
    },Ext.form.Action.success29038,795182
    },Ext.form.Action.handleResponse29042,795229
    },Ext.form.Action.failure29046,795283
    },Ext.form.Action.processResponse29052,795467
    },Ext.form.Action.getUrl29061,795707
    },Ext.form.Action.getMethod29072,796028
    },Ext.form.Action.getParams29076,796177
    },Ext.form.Action.createCallback29091,796596
};Ext.form.Action.Submit29103,796937
});Ext.form.Action.Load29165,798883
Ext.form.Action.ACTION_TYPES = {Ext.form.Action.ACTION_TYPES.load29211,800201
};Ext.form.VTypes29214,800307
    var url = /(((https?)|(ftp)):\/\/([\-\w]+\.)+\w{2,3}(\/[%\-\w]+(\.\w{2,})?)*(([\w\-\.\?\\\/+@&#;`~=%!]*)(\.\w{2,})?)*\/?)/i;url29221,800485
Ext.reg('grid', Ext.grid.GridPanel);Ext.grid.GridView29702,811198
});Ext.grid.GridView.SplitDragZone30940,849297
Ext.grid.GroupingView.GROUP_ID = 1000;Ext.grid.HeaderDragZone31402,863711
});Ext.grid.HeaderDropZone31449,865090
});Ext.grid.GridView.ColumnDragZone31597,869651
});Ext.grid.SplitDragZone31613,870110
});Ext.grid.GridDragZone31667,872009
});Ext.grid.ColumnModel31721,873541
});Ext.grid.ColumnModel.defaultRenderer32032,881040
Ext.grid.DefaultColumnModel = Ext.grid.ColumnModel;Ext.grid.AbstractSelectionModel32043,881207
});Ext.grid.RowSelectionModel32072,881793
});Ext.grid.CellSelectionModel32430,891855
Ext.reg('editorgrid', Ext.grid.EditorGridPanel);Ext.grid.GridEditor32775,902022
]);Ext.grid.PropertyStore32792,902510
    this.editors = {g.g.g.Ext.grid.PropertyColumnModel.editors.date32881,905238
});Ext.grid.PropertyColumnModel32854,904323
});Ext.grid.RowNumberer33011,908925
};Ext.grid.RowNumberer33018,909094
Ext.grid.RowNumberer.prototype = {Ext.grid.RowNumberer.header33020,909100
    header: "",Ext.grid.RowNumberer.width33022,909142
    width: 23,Ext.grid.RowNumberer.sortable33024,909165
    sortable: false,Ext.grid.RowNumberer.fixed33026,909187
    fixed:true,Ext.grid.RowNumberer.menuDisabled33029,909216
    menuDisabled:true,Ext.grid.RowNumberer.dataIndex33030,909233
    dataIndex: '',Ext.grid.RowNumberer.id33031,909257
    id: 'numberer',Ext.grid.RowNumberer.rowspan33032,909277
    rowspan: undefined,Ext.grid.RowNumberer.renderer33033,909298
});Ext.LoadMask33105,911269
Ext.LoadMask.prototype = {Ext.LoadMask.msg33124,911922
    msg : 'Loading...',Ext.LoadMask.msgCls33128,911964
    msgCls : 'x-mask-loading',Ext.LoadMask.disabled33130,911993
    disabled: false,Ext.LoadMask.disable33133,912030
    },Ext.LoadMask.enable33138,912112
    },Ext.LoadMask.onLoad33143,912181
    },Ext.LoadMask.onBeforeLoad33147,912259
    },Ext.LoadMask.show33153,912389
    },Ext.LoadMask.hide33158,912453
    },Ext.LoadMask.destroy33163,912515
    function handleResize(){createConsole.handleResize33390,918761
function createConsole(){createConsole33332,917355
});Ext.debug.HtmlNode33681,927407
    function hasChild(n){hasChild33698,927780
    function renderNode(n, leaf){renderNode33707,927974
        var attr = {HtmlNode.attr.text33735,928898
    var HtmlNode = function(n){HtmlNode33731,928758

gui-wt/ext/ext-core-debug.js,980
    var createHtml = function(o){Ext.DomHelper.createHtml16,344
    var createDom = function(o, parentNode){Ext.DomHelper.createDom76,2207
    var ieTable = function(depth, s, h, e){Ext.DomHelper.ieTable111,3492
    var insertIntoTable = function(tag, where, el, html){Ext.DomHelper.insertIntoTable129,3912
/*Ext.DomHelper0,0
        var range = el.ownerDocument.createRange();range247,7834
        var frag;frag248,7887
        var newNode;newNode302,9850
        var newNode;newNode316,10332
}();Ext.Template340,11009
Ext.Template.prototype = {Ext.Template.applyTemplate364,11538
        var fn = function(m, name, format, args){Ext.Template.applyTemplate.fn372,11790
    },Ext.Template.set397,12811
    },Ext.Template.disableFormats407,13009
    disableFormats : false,Ext.Template.re410,13029
        var sep = Ext.isGecko ? "+" : ",";sep419,13252
        var fn = function(m, name, format, args){fn420,13296
        var body;body434,13905

gui-wt/ext/ext-core.js,5120
Ext.Template=function(E){var B=arguments;if(Ext.isArray(E)){E=E.join("")}else{if(B.length>1){var C=[];for(var D=0,A=B.length;D<A;D++){if(typeof B[D]=="object"){Ext.apply(this,B[D])}else{C[C.length]=B[D]}}E=C.join("")}}this.html=E;if(this.compiled){this.compile()}};Ext.Template.prototype={applyTemplate:function(B){if(this.compiled){return this.compiled(B)}var A=this.disableFormats!==true;var E=Ext.util.Format,C=this;var D=function(G,I,L,H){if(L&&A){if(L.substr(0,5)=="this."){return C.call(L.substr(5),B[I],B)}else{if(H){var K=/^\s*['"](.*)["']\s*$/;H=H.split(",");for(var J=0,F=H.length;J<F;J++){H[J]=H[J].replace(K,"$1")}H=[B[I]].concat(H)}else{H=[B[I]]}return E[L].apply(E,H)}}else{return B[I]!==undefined?B[I]:""}};return this.html.replace(this.re,D)},set:function(A,B){this.html=A;this.compiled=null;if(B){this.compile()}return this},disableFormats:false,re:/\{([\w-]+)(?:\:([\w\.]*)(?:\((.*?)?\))?)?\}/g,compile:function(){var fm=Ext.util.Format;var useF=this.disableFormats!==true;var sep=Ext.isGecko?"+":",";var fn=function(m,name,format,args){if(format&&useF){args=args?","+args:"";if(format.substr(0,5)!="this."){format="fm."+format+"("}else{format="this.call(\""+format.substr(5)+"\", ";args=", values"}}else{args="";format="(values['"+name+"'] == undefined ? '' : "}return"'"+sep+format+"values['"+name+"']"+args+")"+sep+"'"};var body;if(Ext.isGecko){body="this.compiled = function(values){ return '"+this.html.replace(/\\/g,"\\\\").replace(/(\r\n|\n)/g,"\\n").replace(/'/g,"\\'").replace(this.re,fn)+"';};"}else{body=["this.compiled = function(values){ return ['"];body.push(this.html.replace(/\\/g,"\\\\").replace(/(\r\n|\n)/g,"\\n").replace(/'/g,"\\'").replace(this.re,fn));body.push("'].join('');};");body=body.join("")}eval(body);return this},call:function(C,B,A){return this[C](B,A)},insertFirst:function(B,A,C){return this.doInsert("afterBegin",B,A,C)},insertBefore:function(B,A,C){return this.doInsert("beforeBegin",B,A,C)},insertAfter:function(B,A,C){return this.doInsert("afterEnd",B,A,C)},append:function(B,A,C){return this.doInsert("beforeEnd",B,A,C)},doInsert:function(C,E,B,A){E=Ext.getDom(E);var D=Ext.DomHelper.insertHtml(C,E,this.applyTemplate(B));return A?Ext.get(D,true):D},overwrite:function(B,A,C){B=Ext.getDom(B);B.innerHTML=this.applyTemplate(A);return C?Ext.get(B.firstChild,true):B.firstChild}};Ext.Template.prototype.apply=Ext.Template.prototype.applyTemplate;Ext.DomHelper.Template=Ext.Template;Ext.Template.from=function(B,A){B=Ext.getDom(B);return new Ext.Template(B.value||B.innerHTML,A||"")};Ext10,4898
Ext.Template=function(E){var B=arguments;if(Ext.isArray(E)){E=E.join("")}else{if(B.length>1){var C=[];for(var D=0,A=B.length;D<A;D++){if(typeof B[D]=="object"){Ext.apply(this,B[D])}else{C[C.length]=B[D]}}E=C.join("")}}this.html=E;if(this.compiled){this.compile()}};Ext.Template.prototype={applyTemplate:function(B){if(this.compiled){return this.compiled(B)}var A=this.disableFormats!==true;var E=Ext.util.Format,C=this;var D=function(G,I,L,H){if(L&&A){if(L.substr(0,5)=="this."){return C.call(L.substr(5),B[I],B)}else{if(H){var K=/^\s*['"](.*)["']\s*$/;H=H.split(",");for(var J=0,F=H.length;J<F;J++){H[J]=H[J].replace(K,"$1")}H=[B[I]].concat(H)}else{H=[B[I]]}return E[L].apply(E,H)}}else{return B[I]!==undefined?B[I]:""}};return this.html.replace(this.re,D)},set:function(A,B){this.html=A;this.compiled=null;if(B){this.compile()}return this},disableFormats:false,re:/\{([\w-]+)(?:\:([\w\.]*)(?:\((.*?)?\))?)?\}/g,compile:function(){var fm=Ext.util.Format;var useF=this.disableFormats!==true;var sep=Ext.isGecko?"+":",";var fn=function(m,name,format,args){if(format&&useF){args=args?","+args:"";if(format.substr(0,5)!="this."){format="fm."+format+"("}else{format="this.call(\""+format.substr(5)+"\", ";args=", values"}}else{args="";format="(values['"+name+"'] == undefined ? '' : "}return"'"+sep+format+"values['"+name+"']"+args+")"+sep+"'"};var body;if(Ext.isGecko){body="this.compiled = function(values){ return '"+this.html.replace(/\\/g,"\\\\").replace(/(\r\n|\n)/g,"\\n").replace(/'/g,"\\'").replace(this.re,fn)+"';};"}else{body=["this.compiled = function(values){ return ['"];body.push(this.html.replace(/\\/g,"\\\\").replace(/(\r\n|\n)/g,"\\n").replace(/'/g,"\\'").replace(this.re,fn));body.push("'].join('');};");body=body.join("")}eval(body);return this},call:function(C,B,A){return this[C](B,A)},insertFirst:function(B,A,C){return this.doInsert("afterBegin",B,A,C)},insertBefore:function(B,A,C){return this.doInsert("beforeBegin",B,A,C)},insertAfter:function(B,A,C){return this.doInsert("afterEnd",B,A,C)},append:function(B,A,C){return this.doInsert("beforeEnd",B,A,C)},doInsert:function(C,E,B,A){E=Ext.getDom(E);var D=Ext.DomHelper.insertHtml(C,E,this.applyTemplate(B));return A?Ext.get(D,true):D},overwrite:function(B,A,C){B=Ext.getDom(B);B.innerHTML=this.applyTemplate(A);return C?Ext.get(B.firstChild,true):B.firstChild}};Ext.Template.prototype.apply=Ext.Template.prototype.applyTemplate;Ext.DomHelper.Template=Ext.Template;Ext.Template.from=function(B,A){B=Ext.getDom(B);return new Ext.Template(B.value||B.innerHTML,A||"")};Ext.Ext.applyTemplate10,4898

gui-wt/ext/ext-all.js,5120
Ext.Template=function(E){var B=arguments;if(Ext.isArray(E)){E=E.join("")}else{if(B.length>1){var C=[];for(var D=0,A=B.length;D<A;D++){if(typeof B[D]=="object"){Ext.apply(this,B[D])}else{C[C.length]=B[D]}}E=C.join("")}}this.html=E;if(this.compiled){this.compile()}};Ext.Template.prototype={applyTemplate:function(B){if(this.compiled){return this.compiled(B)}var A=this.disableFormats!==true;var E=Ext.util.Format,C=this;var D=function(G,I,L,H){if(L&&A){if(L.substr(0,5)=="this."){return C.call(L.substr(5),B[I],B)}else{if(H){var K=/^\s*['"](.*)["']\s*$/;H=H.split(",");for(var J=0,F=H.length;J<F;J++){H[J]=H[J].replace(K,"$1")}H=[B[I]].concat(H)}else{H=[B[I]]}return E[L].apply(E,H)}}else{return B[I]!==undefined?B[I]:""}};return this.html.replace(this.re,D)},set:function(A,B){this.html=A;this.compiled=null;if(B){this.compile()}return this},disableFormats:false,re:/\{([\w-]+)(?:\:([\w\.]*)(?:\((.*?)?\))?)?\}/g,compile:function(){var fm=Ext.util.Format;var useF=this.disableFormats!==true;var sep=Ext.isGecko?"+":",";var fn=function(m,name,format,args){if(format&&useF){args=args?","+args:"";if(format.substr(0,5)!="this."){format="fm."+format+"("}else{format="this.call(\""+format.substr(5)+"\", ";args=", values"}}else{args="";format="(values['"+name+"'] == undefined ? '' : "}return"'"+sep+format+"values['"+name+"']"+args+")"+sep+"'"};var body;if(Ext.isGecko){body="this.compiled = function(values){ return '"+this.html.replace(/\\/g,"\\\\").replace(/(\r\n|\n)/g,"\\n").replace(/'/g,"\\'").replace(this.re,fn)+"';};"}else{body=["this.compiled = function(values){ return ['"];body.push(this.html.replace(/\\/g,"\\\\").replace(/(\r\n|\n)/g,"\\n").replace(/'/g,"\\'").replace(this.re,fn));body.push("'].join('');};");body=body.join("")}eval(body);return this},call:function(C,B,A){return this[C](B,A)},insertFirst:function(B,A,C){return this.doInsert("afterBegin",B,A,C)},insertBefore:function(B,A,C){return this.doInsert("beforeBegin",B,A,C)},insertAfter:function(B,A,C){return this.doInsert("afterEnd",B,A,C)},append:function(B,A,C){return this.doInsert("beforeEnd",B,A,C)},doInsert:function(C,E,B,A){E=Ext.getDom(E);var D=Ext.DomHelper.insertHtml(C,E,this.applyTemplate(B));return A?Ext.get(D,true):D},overwrite:function(B,A,C){B=Ext.getDom(B);B.innerHTML=this.applyTemplate(A);return C?Ext.get(B.firstChild,true):B.firstChild}};Ext.Template.prototype.apply=Ext.Template.prototype.applyTemplate;Ext.DomHelper.Template=Ext.Template;Ext.Template.from=function(B,A){B=Ext.getDom(B);return new Ext.Template(B.value||B.innerHTML,A||"")};Ext10,4898
Ext.Template=function(E){var B=arguments;if(Ext.isArray(E)){E=E.join("")}else{if(B.length>1){var C=[];for(var D=0,A=B.length;D<A;D++){if(typeof B[D]=="object"){Ext.apply(this,B[D])}else{C[C.length]=B[D]}}E=C.join("")}}this.html=E;if(this.compiled){this.compile()}};Ext.Template.prototype={applyTemplate:function(B){if(this.compiled){return this.compiled(B)}var A=this.disableFormats!==true;var E=Ext.util.Format,C=this;var D=function(G,I,L,H){if(L&&A){if(L.substr(0,5)=="this."){return C.call(L.substr(5),B[I],B)}else{if(H){var K=/^\s*['"](.*)["']\s*$/;H=H.split(",");for(var J=0,F=H.length;J<F;J++){H[J]=H[J].replace(K,"$1")}H=[B[I]].concat(H)}else{H=[B[I]]}return E[L].apply(E,H)}}else{return B[I]!==undefined?B[I]:""}};return this.html.replace(this.re,D)},set:function(A,B){this.html=A;this.compiled=null;if(B){this.compile()}return this},disableFormats:false,re:/\{([\w-]+)(?:\:([\w\.]*)(?:\((.*?)?\))?)?\}/g,compile:function(){var fm=Ext.util.Format;var useF=this.disableFormats!==true;var sep=Ext.isGecko?"+":",";var fn=function(m,name,format,args){if(format&&useF){args=args?","+args:"";if(format.substr(0,5)!="this."){format="fm."+format+"("}else{format="this.call(\""+format.substr(5)+"\", ";args=", values"}}else{args="";format="(values['"+name+"'] == undefined ? '' : "}return"'"+sep+format+"values['"+name+"']"+args+")"+sep+"'"};var body;if(Ext.isGecko){body="this.compiled = function(values){ return '"+this.html.replace(/\\/g,"\\\\").replace(/(\r\n|\n)/g,"\\n").replace(/'/g,"\\'").replace(this.re,fn)+"';};"}else{body=["this.compiled = function(values){ return ['"];body.push(this.html.replace(/\\/g,"\\\\").replace(/(\r\n|\n)/g,"\\n").replace(/'/g,"\\'").replace(this.re,fn));body.push("'].join('');};");body=body.join("")}eval(body);return this},call:function(C,B,A){return this[C](B,A)},insertFirst:function(B,A,C){return this.doInsert("afterBegin",B,A,C)},insertBefore:function(B,A,C){return this.doInsert("beforeBegin",B,A,C)},insertAfter:function(B,A,C){return this.doInsert("afterEnd",B,A,C)},append:function(B,A,C){return this.doInsert("beforeEnd",B,A,C)},doInsert:function(C,E,B,A){E=Ext.getDom(E);var D=Ext.DomHelper.insertHtml(C,E,this.applyTemplate(B));return A?Ext.get(D,true):D},overwrite:function(B,A,C){B=Ext.getDom(B);B.innerHTML=this.applyTemplate(A);return C?Ext.get(B.firstChild,true):B.firstChild}};Ext.Template.prototype.apply=Ext.Template.prototype.applyTemplate;Ext.DomHelper.Template=Ext.Template;Ext.Template.from=function(B,A){B=Ext.getDom(B);return new Ext.Template(B.value||B.innerHTML,A||"")};Ext.Ext.applyTemplate10,4898

gui-wt/variableCanvasItem.cc,609
namespace minsky { namespace gui {minsky30,959
namespace minsky { namespace gui {gui30,959
VariableCanvasItem::VariableCanvasItem(MinskyDoc::ObjectId id, VariablePtr var, CanvasView* parent)VariableCanvasItem32,995
VariableCanvasItem::~VariableCanvasItem()~VariableCanvasItem46,1363
void VariableCanvasItem::getModelPos(double& x, double& y) constgetModelPos49,1410
bool VariableCanvasItem::editProperties()editProperties55,1522
void VariableCanvasItem::getPortsList(PortsList& ports) constgetPortsList87,2354
void VariableCanvasItem::draw(CanvasPainter& painter, Polygon& outline)draw99,2612

gui-wt/disablingOverlay.cc,323
namespace minsky { namespace gui {minsky25,812
namespace minsky { namespace gui {gui25,812
DisablingOverlay::DisablingOverlay(CanvasView* _parent)DisablingOverlay27,848
DisablingOverlay::~DisablingOverlay()~DisablingOverlay40,1275
void DisablingOverlay::paintEvent(Wt::WPaintDevice* paintDevice)paintEvent43,1318

gui-wt/sliderWidget.h,2513
#define SLIDERWIDGET_H_SLIDERWIDGET_H_21,728
namespace minsky { namespace gui {minsky26,814
namespace minsky { namespace gui {gui26,814
class SliderWidget: public Wt::WContainerWidgetSliderWidget35,979
  typedef Wt::WContainerWidget _base_class;_base_class38,1038
  static const int width  = 40;width41,1091
  static const int height = 20;height42,1123
  class SliderBar : public Wt::WPaintedWidgetSliderBar48,1220
    typedef Wt::WPaintedWidget _base_class;_base_class51,1281
    static const int width = SliderWidget::width;width54,1336
    static const int height = 5;height55,1386
    static const int left = 0;left56,1419
    static const int top = SliderWidget::height - height;top57,1450
    inline SliderWidget* parent()parent66,1700
  class SliderThumb : public Wt::WPaintedWidgetSliderThumb81,2032
    typedef Wt::WPaintedWidget _base_class;_base_class84,2095
    static const int width  = 21;width87,2150
    static const int height = 5;height88,2184
    static const int leftLimit = 0;leftLimit89,2217
    static const int rightLimit = SliderBar::width - width;rightLimit90,2253
    static const int left = (leftLimit + rightLimit) / 2;left91,2313
    static const int top = SliderWidget::height - height;top92,2371
    double stepSize =  0.1;stepSize95,2441
    double min      = -1.;min96,2469
    double max      =  1.;max97,2496
    double mouseX = 0;mouseX99,2524
    double savedPos = 0;savedPos100,2547
    bool   moving = false;moving101,2572
    inline SliderWidget* parent()parent110,2795
  class SliderLabel : public Wt::WPaintedWidgetSliderLabel158,3904
    typedef Wt::WPaintedWidget _base_class;_base_class161,3967
    static const int fontSize = 8;  ///<  Font size for renderingfontSize164,4022
    static const int precision = 2;  ///<  Number of decimals to printprecision165,4088
    static const int width = SliderWidget::width;width166,4159
    static const int height = SliderWidget::height - SliderThumb::height;height167,4209
    inline SliderWidget* parent()parent176,4479
  OperationCanvasItem& opItem;    ///< The operation this slider is attached to.opItem198,4932
  SliderThumb* sliderThumb;       ///< The Thumb widget.sliderThumb199,5013
  SliderLabel* sliderLabel;       ///< The label widget.sliderLabel200,5070
  inline OperationCanvasItem& getOp()getOp224,5592
  inline void setRangeAndStepSize(const double& stepSize,setRangeAndStepSize232,5690
  SliderLabel* label()label253,6110

gui-wt/dialog.h,181
#define DIALOG_H_DIALOG_H_21,742
namespace minsky { namespace gui {minsky25,791
namespace minsky { namespace gui {gui25,791
class Dialog: public Wt::Ext::DialogDialog27,829

gui-wt/viewManager.h,799
#define VIEWMANAGER_HVIEWMANAGER_H21,746
namespace minsky { namespace gui {minsky29,892
namespace minsky { namespace gui {gui29,892
class ViewManagerViewManager39,1084
  struct alreadyRegisteredViewExceptionalreadyRegisteredViewException52,1341
  struct unknownViewExceptionunknownViewException59,1578
  typedef std::map<AbstractView*, MinskyDoc*> ViewsMap;ViewsMap75,1993
  typedef std::vector<AbstractView*> ViewsVector;ViewsVector80,2154
  ViewsMap viewsMap;          ///< The views/document associations.viewsMap83,2216
  AbstractView*  activeView;activeView90,2398
  inline ViewManager()ViewManager102,2581
  inline ~ViewManager()~ViewManager108,2668
  inline AbstractView* getActiveView()getActiveView150,4270
  inline void resetActiveView()resetActiveView166,4779

gui-wt/cairoWidget.cc,440
namespace minsky { namespace gui {minsky27,856
namespace minsky { namespace gui {gui27,856
CairoWidget::CairoWidget(WContainerWidget* parent)CairoWidget32,948
CairoWidget::~CairoWidget()~CairoWidget43,1307
void CairoWidget::paintEvent(WPaintDevice* paintDevice)paintEvent47,1340
void CairoWidget::setCursor(Wt::Cursor cursor)setCursor93,2723
void CairoWidget::layoutSizeChanged(int width, int height)layoutSizeChanged104,2910

gui-wt/minskyApp.cc,1444
namespace minsky { namespace gui {minsky40,1203
namespace minsky { namespace gui {gui40,1203
WApplication* MinskyApp::createApplication(const WEnvironment& env)createApplication46,1308
MinskyApp::MinskyApp(const WEnvironment& env)MinskyApp51,1410
MinskyApp::~MinskyApp()~MinskyApp82,2228
StandardButton MinskyApp::closeActiveDocument()closeActiveDocument94,2351
void MinskyApp::fileNew()fileNew135,3139
void MinskyApp::fileOpen()fileOpen144,3226
void MinskyApp::fileSave()fileSave174,4044
void MinskyApp::fileSaveAs()fileSaveAs178,4076
void MinskyApp::fileClose()fileClose207,5158
void MinskyApp::fileProperties()fileProperties212,5216
void MinskyApp::exit()exit223,5406
void MinskyApp::help()help233,5545
void MinskyApp::about()about238,5584
StandardButton MinskyApp::MessageBox(const WString& strPrompt,MessageBox243,5624
bool MinskyApp::getIconName(const string& id, string& imageName)getIconName259,6134
WTimer* MinskyApp::createSimulationTimer()createSimulationTimer291,6679
void MinskyApp::destroySimulationTimer()destroySimulationTimer300,6804
WTimer* MinskyApp::simulationTimer()simulationTimer309,6916
void MinskyApp::editPreferences()editPreferences314,6977
void MinskyApp::onDataReceived(uint64_t bytesDone, uint64_t totalBytes)onDataReceived320,7083
void MinskyApp::onTransferComplete()onTransferComplete333,7377
void MinskyApp::onFileTooLarge(int64_t fileSize)onFileTooLarge345,7682

gui-wt/mainWindow.cc,165
namespace minsky { namespace gui {minsky36,1086
namespace minsky { namespace gui {gui36,1086
MainWindow::MainWindow(WContainerWidget* parent)MainWindow40,1143

gui-wt/globalPreferences.h,579
#define GOBAL_PREFERENCES_HGOBAL_PREFERENCES_H21,732
namespace minsky { namespace gui {minsky23,761
namespace minsky { namespace gui {gui23,761
class GlobalPreferencesGlobalPreferences25,797
  enum GodleyOutputStyleGodleyOutputStyle28,831
    godleyStyleDrCr,godleyStyleDrCr30,860
    godleyStylePlusMinus,godleyStylePlusMinus31,881
  bool godleyTableDoubleEntry = true;godleyTableDoubleEntry35,921
  bool godleyTableShowValues  = true;godleyTableShowValues36,959
  GodleyOutputStyle godleyTableOutputStyle = godleyStylePlusMinus;godleyTableOutputStyle37,997

gui-wt/iClipBoard.h,266
#define ICLIPBOARD_H_ICLIPBOARD_H_21,746
namespace minsky { namespace gui {minsky23,771
namespace minsky { namespace gui {gui23,771
class IClipBoardIClipBoard39,1262
  typedef void* DataChunk;DataChunk46,1383
  virtual ~IClipBoard() {}~IClipBoard52,1455

gui-wt/canvasPainter.h,523
#define CANVASPAINTER_H_CANVASPAINTER_H_21,730
namespace minsky { namespace gui {minsky29,874
namespace minsky { namespace gui {gui29,874
class CanvasPainter : public Wt::WPainterCanvasPainter44,1193
  typedef Wt::WPainter _base_class;_base_class47,1246
  static const int bezierResolution = 20;bezierResolution53,1382
  const double wireMargin = 10.;wireMargin59,1537
  inline const DisplaySettings& displaySettings() constdisplaySettings76,1795
  inline bool begin(Wt::WPaintDevice *device)begin84,1971

gui-wt/operationPropertiesDlg.cc,381
namespace minsky { namespace gui {minsky24,792
namespace minsky { namespace gui {gui24,792
OperationPropertiesDlg::OperationPropertiesDlg(OperationPtr op)OperationPropertiesDlg26,828
OperationPropertiesDlg::~OperationPropertiesDlg()~OperationPropertiesDlg33,1017
void OperationPropertiesDlg::save()save36,1072
void OperationPropertiesDlg::initialize()initialize41,1147

gui-wt/abstractView.h,307
#define ABSTRACTVIEW_H_ABSTRACTVIEW_H_21,748
namespace minsky { namespace gui {minsky27,857
namespace minsky { namespace gui {gui27,857
class AbstractViewAbstractView36,990
	typedef void* Selection;Selection41,1100
	MinskyDoc& document;document45,1177
	inline MinskyDoc& getDoc()getDoc83,1893

gui-wt/minskyDoc.cc,4083
namespace minsky { namespace gui {minsky30,898
namespace minsky { namespace gui {gui30,898
#define MINSKY_DEF_NAME MINSKY_DEF_NAME37,1161
#define MINSKY_EXT MINSKY_EXT38,1204
MinskyDoc::MinskyDoc()MinskyDoc42,1259
MinskyDoc::~MinskyDoc()~MinskyDoc47,1311
void MinskyDoc::generateFileName(std::string& name)generateFileName52,1351
void MinskyDoc::docHasChanged(AbstractView* caller, Hint hint, const AnyParams& data)docHasChanged67,1655
void MinskyDoc::loadFromFile(const std::string& name)loadFromFile73,1828
void MinskyDoc::saveToFile(const std::string& name)saveToFile92,2221
void MinskyDoc::close()close107,2520
void MinskyDoc::getProperties(Properties& properties)getProperties117,2725
MinskyDoc::ObjectId MinskyDoc::addOperation(AbstractView* caller,addOperation127,2908
void MinskyDoc::removeOperation(AbstractView* caller, ObjectId id)removeOperation141,3397
void MinskyDoc::moveOperation(AbstractView* caller, ObjectId id, double x, double y)moveOperation147,3564
void MinskyDoc::setOperationSliderValue(AbstractView* caller, ObjectId id, double value)setOperationSliderValue160,3941
MinskyDoc::ObjectId MinskyDoc::addWire(AbstractView* caller, ObjectId from, ObjectId to)addWire165,4082
void MinskyDoc::removeWire(AbstractView* caller, ObjectId id)removeWire185,4644
void MinskyDoc::addWirePoint(AbstractView* caller, ObjectId id, size_t pointIndex, float x, float y)addWirePoint191,4796
void MinskyDoc::removeWirePoint(AbstractView* caller, ObjectId id, size_t pointIndex)removeWirePoint227,5538
void MinskyDoc::setWirePoint(AbstractView* caller, ObjectId id, size_t pointIndex, float x, float y)setWirePoint258,6141
MinskyDoc::ObjectId MinskyDoc::addVariable(AbstractView* caller,addVariable282,6652
void MinskyDoc::moveVariable(AbstractView* caller, ObjectId id, double x, double y)moveVariable295,7080
void MinskyDoc::removeVariable(AbstractView* caller, ObjectId id)removeVariable308,7450
MinskyDoc::ObjectId MinskyDoc::addGodleyTable(AbstractView* caller, const Wt::WPointF& pntInsert)addGodleyTable314,7614
void MinskyDoc::moveGodleyTable(AbstractView* caller, ObjectId id, double x, double y)moveGodleyTable326,7897
void MinskyDoc::removeGodleyTable(AbstractView* caller, ObjectId id)removeGodleyTable339,8280
void MinskyDoc::setGodleyCell(AbstractView* caller, ObjectId idTable, int row, int col, const std::string& value)setGodleyCell345,8453
int MinskyDoc::addPlot(AbstractView* caller, const Wt::WPointF& pntInsert)addPlot353,8740
void MinskyDoc::movePlot(AbstractView* caller, int id, double x, double y)movePlot362,9040
void MinskyDoc::removePlot(AbstractView* caller, int id)removePlot375,9370
void MinskyDoc::moveGroup(AbstractView* caller, ObjectId id, double x, double y)moveGroup386,9634
void MinskyDoc::addVariableToGroup(AbstractView* caller, ObjectId idGroup, ObjectId idVariable)addVariableToGroup400,10016
void MinskyDoc::removeVariableFromGroup(AbstractView* caller, ObjectId idGroup, ObjectId idVar)removeVariableFromGroup408,10277
void MinskyDoc::addOperationToGroup(AbstractView* caller, ObjectId idGroup, ObjectId idOp)addOperationToGroup416,10538
void MinskyDoc::removeOperationFromGroup(AbstractView* caller, ObjectId idGroup, ObjectId idOp)removeOperationFromGroup424,10784
bool MinskyDoc::addGroupToGroup(AbstractView* caller, ObjectId idGroupContainer, ObjectId idGroup)addGroupToGroup435,11135
void MinskyDoc::removeGroupFromGroup(AbstractView* caller, ObjectId idGroupContainer, ObjectId idGroup)removeGroupFromGroup447,11449
void MinskyDoc::groupRect(AbstractView* caller, const Wt::WRectF& rect)groupRect455,11734
void MinskyDoc::simulationStart(int speed)simulationStart465,12002
void MinskyDoc::simulationStep()simulationStep488,12419
void MinskyDoc::simulationStop()simulationStop503,12683
void MinskyDoc::simulationPause()simulationPause509,12763
bool MinskyDoc::simulationRunning()simulationRunning518,12947
void MinskyDoc::simulationReset()simulationReset523,13047
void MinskyDoc::setSimulationSpeed(int speed)setSimulationSpeed529,13165

gui-wt/mainMenu.cc,888
namespace minsky { namespace gui {minsky33,1005
namespace minsky { namespace gui {gui33,1005
Ext::MenuItem* MainMenu::addMenuItem(Ext::Menu* menu, const string& id, T* target, void(V::*method)())addMenuItem40,1134
MainMenu::MainMenu(WContainerWidget* parent)MainMenu56,1495
void MainMenu::createFileMenu()createFileMenu66,1675
void MainMenu::createEditMenu()createEditMenu80,2315
void MainMenu::createViewMenu()createViewMenu94,2893
void MainMenu::createHelpMenu()createHelpMenu100,3002
Ext::Menu* MainMenu::addMenu(const string& id)addMenu109,3267
Ext::MenuItem* MainMenu::addMenuItem(Ext::Menu* menu, const string& id)addMenuItem125,3542
void MainMenu::editCut()editCut141,3842
void MainMenu::editCopy()editCopy150,3976
void MainMenu::editPaste()editPaste159,4112
void MainMenu::editGroup()editGroup168,4250
void MainMenu::editUngroup()editUngroup178,4425

gui-wt/minskyApp.h,1520
#define _MINSKYAPP_H_MINSKYAPP_H21,725
#undef NoneNone33,1037
namespace minsky { namespace gui {minsky36,1077
namespace minsky { namespace gui {gui36,1077
class MinskyApp : public WApplication, public ViewManagerMinskyApp55,1355
  struct nullAppPointerExceptionnullAppPointerException62,1550
  struct nullDocPointerExceptionnullDocPointerException70,1748
  struct docNotDestroyedOnExitdocNotDestroyedOnExit79,2047
  IClipBoard* clipboard;    ///< The clipboard.clipboard84,2153
  MinskyDoc* activeDoc;     ///< The active document. Currently MinskyApp handles a single document.activeDoc85,2201
  WTimer*    simTimer;      ///< The simulation timer. Pointer belongs to Wt.simTimer86,2302
  classdesc::shared_ptr<FileOpenDlg> fileOpenDlgPtr;fileOpenDlgPtr88,2381
  DisplaySettings displayOptions; ///< Application-wide display and drawing options.displayOptions90,2435
  GlobalPreferences preferences;  ///< Global preferences.preferences91,2520
  AbstractView* activeView;activeView100,2813
  static inline MinskyApp* getApp()getApp133,3576
  static inline DisplaySettings& displaySettings()displaySettings146,3839
  static inline MinskyDoc* getDoc()getDoc159,4171
  static inline bool isValid()isValid177,4630
  inline AbstractView* getActiveView()getActiveView188,4918
  inline bool hasActiveDocument() consthasActiveDocument199,5243
  inline MinskyDoc* getActiveDocument()getActiveDocument213,5691
  inline void setActiveDocument(MinskyDoc* doc)setActiveDocument226,5959

gui-wt/fileOpenDlg.cc,294
namespace minsky { namespace gui {minsky27,890
namespace minsky { namespace gui {gui27,890
FileOpenDlg::FileOpenDlg(const WString& title)FileOpenDlg31,951
FileOpenDlg::~FileOpenDlg()~FileOpenDlg46,1393
void FileOpenDlg::onOk()onOk50,1430
void FileOpenDlg::onCancel()onCancel66,1726

gui-wt/canvasPainter.cc,1287
namespace minsky { namespace gui {minsky50,1467
namespace minsky { namespace gui {gui50,1467
CanvasPainter::CanvasPainter()CanvasPainter56,1590
CanvasPainter::CanvasPainter(WPaintDevice *device)CanvasPainter59,1626
CanvasPainter::~CanvasPainter()~CanvasPainter63,1706
void CanvasPainter::drawLine(const PointsList& line)drawLine66,1743
void CanvasPainter::draw(OperationCanvasItem& item, gui::Polygon& extentsPolygon)draw74,1905
void CanvasPainter::draw(VariableCanvasItem& item, gui::Polygon& extentsPolygon)draw160,4597
void CanvasPainter::draw(PlotCanvasItem& item, gui::Polygon& extentsPolygon)draw205,6117
void CanvasPainter::draw(LargePlotWidget& plot, minsky::PlotWidget& plotWidget)draw240,7266
void CanvasPainter::draw(GodleyCanvasItem& item, gui::Polygon& extentsPolygon)draw253,7707
void CanvasPainter::draw(LinkCanvasItem& item, PointsList& lineSegments)draw293,9102
void CanvasPainter::draw(GroupCanvasItem& item, gui::Polygon& extentsPolygon)draw332,10162
void CanvasPainter::draw(BezierHandleWidget& widget)draw373,11451
void CanvasPainter::draw(SliderWidget::SliderThumb& widget)draw390,11895
void CanvasPainter::draw(SliderWidget::SliderBar& widget)draw423,12894
void CanvasPainter::draw(SliderWidget::SliderLabel& widget)draw451,13688

gui-wt/godleyTableWidget.cc,1796
namespace minsky { namespace gui {minsky34,1023
namespace minsky { namespace gui {gui34,1023
GodleyTableWidget::GodleyTableWidget(MinskyDoc::ObjectId _tableId, MinskyDoc& doc, WContainerWidget* _parent)GodleyTableWidget38,1080
GodleyTableWidget::~GodleyTableWidget()~GodleyTableWidget48,1347
void GodleyTableWidget::loadTable()loadTable51,1392
void GodleyTableWidget::addRow(int insertAfter)addRow62,1652
void GodleyTableWidget::addColumn(int insertAfter)addColumn74,1874
void GodleyTableWidget::removeRow(int row)removeRow89,2197
void GodleyTableWidget::removeColumn(int col)removeColumn95,2315
void GodleyTableWidget::initCell(int row, int column)initCell105,2544
const Wt::WString GodleyTableWidget::getCellValue(int row, int column) constgetCellValue139,3337
void GodleyTableWidget::simulationStep()simulationStep159,3798
void GodleyTableWidget::simulationReset()simulationReset164,3864
void GodleyTableWidget::createColumnHeader(WTableCell* cell, int column)createColumnHeader169,3931
void GodleyTableWidget::createAddRemoveRowButtons(WTableCell* cell, int row)createAddRemoveRowButtons251,6695
void GodleyTableWidget::createLineEditControl(Wt::WTableCell* cell, int row, int column)createLineEditControl282,7731
void GodleyTableWidget::createTextControl(Wt::WTableCell* cell, int row)createTextControl323,8976
void GodleyTableWidget::updateRowSum(int row)updateRowSum343,9477
void GodleyTableWidget::docHasChanged(AbstractView* source, MinskyDoc::Hint hint, const AnyParams& data)docHasChanged356,9763
void GodleyTableWidget::refreshDisplay()refreshDisplay396,10593
void GodleyTableWidget::refreshColumnHeaders()refreshColumnHeaders424,11305
void GodleyTableWidget::getCellText(int row, int col, WString& text, WColor& color)getCellText452,11978

gui-wt/groupCanvasItem.h,456
#define GROUPCANVASITEM_H_GROUPCANVASITEM_H_21,731
namespace minsky { namespace gui {minsky25,792
namespace minsky { namespace gui {gui25,792
class GroupCanvasItem: public AbstractCanvasItemGroupCanvasItem27,828
  typedef AbstractCanvasItem _base_class;_base_class30,888
  GroupIcon& icon;      ///< Model icon this item renders.icon33,940
  inline GroupIcon& getIcon()getIcon55,1367
  inline const GroupIcon& getIcon() constgetIcon60,1423

gui-wt/abstractCanvasItem.h,2820
#define ABSTRACTCANVASITEM_H_ABSTRACTCANVASITEM_H_21,754
namespace minsky { namespace gui {minsky30,943
namespace minsky { namespace gui {gui30,943
class AbstractCanvasItem : protected WPaintedWidgetAbstractCanvasItem43,1220
  typedef WPaintedWidget _base_class;  ///< The base class._base_class48,1358
  typedef TempCairoImageFile Image;Image49,1419
  typedef std::shared_ptr<Image> ImagePtr;ImagePtr50,1456
  struct mapReferenceExceptionmapReferenceException57,1618
  enum MoveStateMoveState65,1829
    moveBegin,        ///< User initiated moving by pressing themoveBegin67,1852
    moveInProgress,   ///< User is dragging the object on the canvas.moveInProgress69,1965
    moveCancelled,    ///< Move operation is cancelled.moveCancelled70,2036
    moveConfirm,      ///< User ended the operation by releasing themoveConfirm71,2093
  enum SelectionStatusSelectionStatus78,2302
    notSelected,  ///<  Item is not selected.notSelected80,2331
    singleSelect, ///<  Item is the only selected item in the view.singleSelect81,2378
    multiSelect,  ///<  Item is selected, along with other items in the view.multiSelect82,2447
  typedef std::vector<AbstractCanvasItem*> ItemsList;ItemsList88,2578
  typedef std::vector<int> PortsList;PortsList93,2672
  MinskyDoc::ObjectId id;      ///< TCL object id.id96,2723
  SelectionStatus  selected;   ///< Indicates the current selection status.selected97,2774
  bool moving = false;  ///<  Flag indicating the usert is moving the objectmoving99,2853
  WPointF savedMousePos;///<  saved mouse position in model coordinates. Used tosavedMousePos101,2978
  WPointF savedPos;     ///<  saved object position in model coordinates. Used tosavedPos103,3115
  WPointF origin;       ///<  Local origin for drawing and insertion.origin105,3253
  ImagePtr sprite;      ///<  Graphic representation of the object.sprite106,3324
  Polygon shapeOutline; ///<  Outline of object in model space.shapeOutline109,3407
  inline const Wt::WPainter::Image& painterImage()painterImage135,3985
  inline void setImage(Image* image)setImage143,4167
  inline const WPointF& getLocalOrigin() constgetLocalOrigin151,4341
  inline void addArea(WAbstractArea* area)addArea159,4489
  inline MinskyDoc::ObjectId getId() constgetId167,4626
  inline SelectionStatus getSelected() constgetSelected209,5866
  inline void update()update217,5997
  bool movingWithMouse() constmovingWithMouse225,6146
  inline operator WPaintedWidget& ()operator WPaintedWidget&234,6285
  inline operator const WPaintedWidget& () constoperator const WPaintedWidget&239,6354
  inline int zIndex() constzIndex265,7011
  inline void setZIndex(int index)setZIndex273,7141
  inline void setLocalOrigin(const double& x, const double& y)setLocalOrigin326,8516

gui-wt/toolbarBase.h,255
#define _TOOLBARBASE_H_TOOLBARBASE_H24,775
namespace minsky { namespace gui {minsky26,799
namespace minsky { namespace gui {gui26,799
class ToolbarBase : public Ext::ToolBarToolbarBase34,970
  typedef Ext::ToolBar _base_class;_base_class37,1021

gui-wt/plotDlg.h,1158
#define PLOTDLG_H_PLOTDLG_H_21,723
namespace minsky { namespace gui {minsky30,896
namespace minsky { namespace gui {gui30,896
typedef std::shared_ptr<TempCairoImageFile> TempCairoImageFilePtr;TempCairoImageFilePtr32,932
class LargePlotWidget : public Wt::WPaintedWidgetLargePlotWidget34,1000
  typedef Wt::WPaintedWidget _base_class;_base_class37,1061
  int plotId;       ///< Model plot ID.plotId41,1114
  std::string surfaceName;  ///< Name of the cairo back buffer associated with this view.surfaceName42,1154
  MinskyDoc&  doc;          ///< The minsky model.doc43,1244
  TempCairoImageFilePtr image;  ///< The image rendered by the minsky model.image44,1295
  inline int getPlotId() constgetPlotId54,1582
  inline const std::string& getSurfaceName() constgetSurfaceName63,1739
  inline void setImage(TempCairoImageFilePtr img)setImage72,1899
  inline TempCairoImageFilePtr getImage() constgetImage80,2046
class PlotDlg: public AbstractView, public Wt::WDialogPlotDlg105,2627
  int plotId;             ///< Plot ID.plotId108,2693
  LargePlotWidget* plotWidget;    ///< Weak pointer to the plot widget,plotWidget109,2733

gui-wt/anyParams.h,423
#define ANYPARAMS_H_ANYPARAMS_H_21,725
namespace minsky { namespace gui {minsky26,791
namespace minsky { namespace gui {gui26,791
class AnyParams : public std::vector<boost::any>AnyParams28,827
  AnyParams(const boost::any& var)AnyParams31,886
  AnyParams()AnyParams36,950
  inline AnyParams(const AnyParams& other)AnyParams40,1003
  inline AnyParams&  operator << (const boost::any& var)operator <<44,1089

gui-wt/linkCanvasOverlay.h,2435
#define LINKCANVASOVERLAY_H_LINKCANVASOVERLAY_H_21,721
namespace minsky { namespace gui {minsky31,913
namespace minsky { namespace gui {gui31,913
class BezierHandleWidgetBezierHandleWidget43,1140
  typedef Wt::WPaintedWidget _base_class;_base_class47,1208
  static const int widgetSize = 10;       ///<  size of widget in pixels.widgetSize50,1259
  enum PointTypePointType56,1406
    bezierSummit,       ///<  Control point, or summit.bezierSummit58,1427
    bezierPassThrough,  ///<  Virtual pass-through point.  These virtualbezierPassThrough59,1483
  LinkCanvasOverlay&   overlay; ///< Overlay that handles user interaction.overlay69,2009
  size_t      pntIndex;         ///<  index of the point in the Wire structure.pntIndex71,2171
  PointType   pntType;          ///<  Type of Bezier point represented by the widget.pntType72,2251
  bool        moving = false;   ///<  indicates we are moving the object with the mousemoving73,2337
  static Wt::WPointF savedMousePos; ///<  saved mouse position in model coordinates. Used tosavedMousePos74,2425
  static Wt::WPointF savedPos;      ///<  saved object position in model coordinates. Used tosavedPos76,2584
  inline PointType pointType() constpointType113,3779
  inline void setPointType(PointType type)setPointType121,3912
  inline size_t pointIndex() constpointIndex131,4184
  void setPointIndex(size_t index)setPointIndex139,4288
  inline Wt::WPointF localOrigin() constlocalOrigin158,4662
class LinkCanvasOverlayLinkCanvasOverlay187,5387
    typedef std::list<BezierHandleWidget*> HandlesList;HandlesList194,5549
    typedef std::shared_ptr<LinkCanvasOverlay> Ptr;Ptr197,5614
    MinskyDoc::ObjectId id = MinskyDoc::invalidId;  ///< ID of the wire this overlay controls.id200,5676
    CanvasView*     view;       ///<  The canvas view on width items are drawn.view201,5771
    LinkCanvasItem* linkItem;   ///<  Weak pointer to wire item, pointer belongs to Wt.linkItem202,5851
    HandlesList     handles;    ///<  List of "handles" that represent wirehandles203,5939
    bool moving = false;        ///   true when the user is using the handles to edit.moving205,6098
  inline MinskyDoc::ObjectId getId() constgetId224,6638
  inline void setInUseFlag(bool b)setInUseFlag280,7844
  inline bool inUse() constinUse289,8006
typedef std::shared_ptr<LinkCanvasOverlay> LinkCanvasOverlayPtr;LinkCanvasOverlayPtr298,8117

gui-wt/plotCanvasItem.cc,562
namespace minsky { namespace gui {minsky28,881
namespace minsky { namespace gui {gui28,881
PlotCanvasItem::PlotCanvasItem(int _name,PlotCanvasItem30,917
PlotCanvasItem::~PlotCanvasItem()~PlotCanvasItem45,1324
void PlotCanvasItem::getModelPos(double& x, double& y) constgetModelPos48,1363
bool PlotCanvasItem::editProperties()editProperties54,1461
void PlotCanvasItem::getPortsList(PortsList& ports) constgetPortsList60,1561
void PlotCanvasItem::reset()reset71,1774
void PlotCanvasItem::draw(CanvasPainter& painter, Polygon& outline)draw76,1820

gui-wt/app-res/scripts/minsky.js,69
var MinkyLink = fabric.createClass(MinskyObject, {MinkyLink65,1452

gui-wt/app-res/scripts/fabric.js,14030
fabric.isLikelyNode = typeof Buffer !== 'undefined' && typeof window === 'undefined';fabric.log32,891
fabric.log = function() { };fabric.warn38,1086
fabric.Observable = {fabric.Observable.observe63,1647
  },fabric.Observable.stopObserving88,2309
  },fabric.Observable.fire109,2880
  function removeFromArray(array, value) {removeFromArray171,4231
  function getRandomInt(min, max) {getRandomInt188,4651
  var PiBy180 = Math.PI / 180;PiBy180192,4754
  function degreesToRadians(degrees) {degreesToRadians202,4989
  function radiansToDegrees(radians) {radiansToDegrees214,5266
  function rotatePoint(point, origin, radians) {rotatePoint228,5683
   function toFixed(number, fractionDigits) {toFixed249,6307
   function falseFunction() {falseFunction260,6576
  function animate(options) {animate277,7354
  var requestAnimFrame = function() {requestAnimFrame320,9151
      var img = new Image();img.onload334,9640
  function loadImage(url, callback, context) {loadImage332,9578
    function getKlass(type) {enlivenObjects.getKlass357,10243
    function onLoaded() {enlivenObjects.onLoaded361,10367
  function enlivenObjects(objects, callback) {enlivenObjects355,10195
  function groupSVGElements(elements, options, path) {groupSVGElements402,11357
  function populateWithProperties(source, destination, properties) {populateWithProperties443,12386
  function drawDashedLine(ctx, x, y, x2, y2, da) {drawDashedLine465,13203
  function createCanvasElement(canvasEl) {createCanvasElement500,14046
  function createAccessors(klass) {createAccessors515,14544
  function clipContext(receiver, ctx) {clipContext542,15392
  if (!Array.prototype.indexOf) {Array572,16365
    Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {Array.indexOf579,16552
    Array.prototype.forEach = function(fn, context) {Array.forEach617,17667
    Array.prototype.map = function(fn, context) {Array.map633,18164
    Array.prototype.every = function(fn, context) {Array.every651,18715
    Array.prototype.some = function(fn, context) {Array.some668,19254
    Array.prototype.filter = function(fn, context) {Array.filter685,19767
    Array.prototype.reduce = function(fn /*, initial*/) {Array.reduce706,20408
  function invoke(array, method) {invoke743,21269
  function max(array, byProperty) {max758,21757
  function min(array, byProperty) {min787,22444
  fabric.util.array = {fabric.util.array.invoke813,22968
    invoke: invoke,fabric.util.array.min814,22992
    min: min,fabric.util.array.max815,23012
  function clone(object) {clone843,23698
  fabric.util.object = {fabric.util.extend848,23799
    extend: extend,fabric.util.clone849,23824
  String.prototype.trim = function () {trim862,24145
function camelize(string) {camelize875,24530
function capitalize(string) {capitalize888,24869
          (source[property] + '').indexOf('callSuper') > -1) {escapeXml.klass967,27045
      else {klass983,27568
          klass.prototype.toString = source.toString;klass.toString989,27736
          klass.prototype.valueOf = source.valueOf;klass.valueOf992,27859
  var addMethods = function(klass, source, parent) {escapeXml.addMethods962,26854
  function Subclass() { }escapeXml.Subclass998,27941
  function callSuper(methodName) {escapeXml.callSuper1000,27968
    function klass() {createClass.klass1022,28705
    if (parent) {Subclass1029,28841
      klass.prototype.initialize = emptyFunction;klass.initialize1038,29147
    klass.prototype.constructor = klass;klass.constructor1040,29203
    klass.prototype.callSuper = callSuper;klass.callSuper1041,29244
  function createClass() {escapeXml.createClass1015,28519
function escapeXml(string) {escapeXml899,25154
  var getElement, setElement;getElement1068,29902
    var elements = { };getElement1071,29950
    };setElement1075,30055
  function createListener(uid, handler) {createListener1082,30171
  function createWrappedHandler(uid, handler) {createWrappedHandler1089,30319
  function createDispatcher(uid, eventName) {createDispatcher1095,30468
  if (shouldUseAddListenerRemoveListener) {addListener1122,31379
    };removeListener1126,31560
  function getPointer(event, upperCanvasEl) {getPointer1223,34561
  var pointerX = function(event) {pointerX1259,35839
  var pointerY = function(event) {pointerY1266,36188
  if (supportsOpacity) {setOpacity1334,38730
  function getById(id) {getById1373,39715
  var toArray = function(arrayLike) {toArray1384,40010
  var sliceCanConvertNodelists;sliceCanConvertNodelists1388,40092
  function makeElement(tagName, attributes) {makeElement1412,40760
  function addClass(element, className) {addClass1435,41356
  function wrapElement(element, wrapper, attributes) {wrapElement1450,41877
  function getElementOffset(element) {getElementOffset1469,42425
  var getElementPosition;getElementPosition1489,42980
  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {getElementPosition1490,43006
    var selectProp = 'userSelect' in styleselectProp1507,43533
    function makeElementUnselectable(element) {makeElementUnselectable1524,44054
    function makeElementSelectable(element) {makeElementSelectable1544,44669
  function emptyFn() { }emptyFn1631,47345
        body;xhr.onreadystatechange1650,47984
  function request(url, options) {request1643,47759
  function _convertPercentUnitsToValues(object, options) {_convertPercentUnitsToValues1999,57773
  function _convertValuesToPercentUnits(object, options) {_convertValuesToPercentUnits2024,58725
  function getGradientDefs(doc) {getGradientDefs2052,59854
  var fabric = global.fabric || (global.fabric = { });fabric2221,63194
  function Point(x, y) {Point2239,63534
  }Point2243,63620
  Point.prototype = /** @scope fabric.Point.prototype */ {Point.constructor2245,63625
    constructor: Point,Point.init2247,63685
    },Point.add2258,63902
    },Point.addEquals2268,64193
    },Point.scalarAdd2280,64452
    },Point.scalarAddEquals2290,64735
    },Point.subtract2302,64997
    },Point.subtractEquals2312,65308
    },Point.scalarSubtract2324,65586
    },Point.scalarSubtractEquals2334,65859
    },Point.multiply2346,66139
    },Point.multiplyEquals2356,66401
    },Point.divide2368,66670
    },Point.divideEquals2378,66925
    },Point.eq2390,67187
    },Point.lt2400,67427
    },Point.lte2410,67664
    },Point.gt2420,67917
    },Point.gte2431,68153
    },Point.lerp2441,68409
    },Point.distanceFrom2452,68760
    },Point.midPointFrom2464,69069
    },Point.min2474,69365
    },Point.max2484,69643
    },Point.toString2494,69921
    },Point.setXY2503,70108
    },Point.setFromPoint2514,70299
    },Point.swap2524,70516
  var fabric = global.fabric || (global.fabric = { });fabric2549,70982
  function Intersection(status) {Intersection2561,71238
  fabric.Intersection = Intersection;fabric.Intersection2567,71346
  fabric.Intersection.prototype = /** @scope fabric.Intersection.prototype */ {fabric.Intersection.init2569,71387
    },fabric.Intersection.appendPoint2579,71645
    },fabric.Intersection.appendPoints2588,71846
  };fabric.Intersection.intersectLineLine2598,72067
  };fabric.Intersection.intersectLinePolygon2635,73251
  };fabric.Intersection.intersectPolygonPolygon2661,73976
  };fabric.Intersection.intersectPolygonRectangle2686,74699
  var fabric = global.fabric || (global.fabric = { });fabric2725,75908
  function Color(color) {Color2742,76421
  fabric.Color = Color;fabric.Color2751,76565
  fabric.Color.prototype = /** @scope fabric.Color.prototype */ {fabric.Color._tryParsingColor2753,76590
    },fabric.Color.getSource2774,77051
    },fabric.Color.setSource2783,77280
    },fabric.Color.toRgb2792,77520
    },fabric.Color.toRgba2802,77801
    },fabric.Color.toHex2812,78109
    },fabric.Color.getAlpha2832,78615
    },fabric.Color.setAlpha2841,78802
    },fabric.Color.toGrayscale2854,79108
    },fabric.Color.toBlackWhite2867,79542
    },fabric.Color.overlayWith2884,80081
  fabric.Color.colorNameMap = {fabric.Color.colorNameMap.aqua2932,81294
    'aqua':    '#00FFFF',fabric.Color.colorNameMap.black2933,81326
    'black':   '#000000',fabric.Color.colorNameMap.blue2934,81352
    'blue':    '#0000FF',fabric.Color.colorNameMap.fuchsia2935,81378
    'fuchsia': '#FF00FF',fabric.Color.colorNameMap.gray2936,81404
    'gray':    '#808080',fabric.Color.colorNameMap.green2937,81430
    'green':   '#008000',fabric.Color.colorNameMap.lime2938,81456
    'lime':    '#00FF00',fabric.Color.colorNameMap.maroon2939,81482
    'maroon':  '#800000',fabric.Color.colorNameMap.navy2940,81508
    'navy':    '#000080',fabric.Color.colorNameMap.olive2941,81534
    'olive':   '#808000',fabric.Color.colorNameMap.purple2942,81560
    'purple':  '#800080',fabric.Color.colorNameMap.red2943,81586
    'red':     '#FF0000',fabric.Color.colorNameMap.silver2944,81612
    'silver':  '#C0C0C0',fabric.Color.colorNameMap.teal2945,81638
    'teal':    '#008080',fabric.Color.colorNameMap.white2946,81664
    'white':   '#FFFFFF',fabric.Color.colorNameMap.yellow2947,81690
  };fabric.Color.fromRgb2949,81741
  };fabric.Color.sourceFromRgb2959,82026
  fabric.Color.fromRgba = Color.fromRgb;fabric.Color.fromHex2987,82720
  };fabric.Color.sourceFromHex2997,83000
  };fabric.Color.fromSource3021,83801
  var extend = fabric.util.object.extend,extend3046,84342
      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');fabric.StaticCanvas3051,84544
  fabric.StaticCanvas.prototype.toString = function () { // Assign explicitly since `extend` doesn't take care of DontEnum bug yetfabric.StaticCanvas.toString4262,119921
  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;fabric.StaticCanvas.toJSON4356,122650
  var fabric = global.fabric || (global.fabric = { }),fabric4477,125759
  var Image = global.Image;Image4487,126039
  fabric.util.createAccessors(fabric.Object);fabric5575,154389
  fabric.Object.prototype.rotate = fabric.Object.prototype.setAngle;fabric.rotate5581,154535
  fabric.Line.ATTRIBUTE_NAMES = 'x1 y1 x2 y2 stroke stroke-width transform'.split(' ');fabric.Line.fromElement6277,175604
  };fabric.Line.fromObject6296,176326
  var fabric  = global.fabric || (global.fabric = { }),fabric6315,176820
  fabric.Circle.ATTRIBUTE_NAMES = 'cx cy r fill fill-opacity opacity stroke stroke-width transform'.split(' ');fabric.Circle.fromElement6456,180557
  function isValidRadius(attributes) {isValidRadius6490,181763
  }fabric.Circle.fromObject6492,181868
  var fabric = global.fabric || (global.fabric = { });fabric6510,182303
  });fabric.Triangle.fromObject6611,184629
  var fabric = global.fabric || (global.fabric = { }),fabric6629,185066
  fabric.Ellipse.ATTRIBUTE_NAMES = 'cx cy rx ry fill fill-opacity opacity stroke stroke-width transform'.split(' ');fabric.Ellipse.fromElement6775,188756
  };fabric.Ellipse.fromObject6805,189736
  var fabric = global.fabric || (global.fabric = { }),fabric6823,190158
  function _setDefaultLeftTopValues(attributes) {_setDefaultLeftTopValues7090,196932
  }fabric.Rect.fromElement7094,197093
  };fabric.Rect.fromObject7116,197814
  var fabric = global.fabric || (global.fabric = { }),fabric7134,198240
  fabric.Polyline.ATTRIBUTE_NAMES = 'fill fill-opacity opacity stroke stroke-width transform'.split(' ');fabric.Polyline.fromElement7257,201467
  };fabric.Polyline.fromObject7283,202521
  var fabric = global.fabric || (global.fabric = { }),fabric7302,202988
  fabric.Polygon.ATTRIBUTE_NAMES = 'fill fill-opacity opacity stroke stroke-width transform'.split(' ');fabric.Polygon.fromElement7453,206891
  };fabric.Polygon.fromObject7479,207908
  var commandLengths = {m7495,208326
    m: 2,l7496,208351
    l: 2,h7497,208361
    h: 1,v7498,208371
    v: 1,c7499,208381
    c: 6,s7500,208391
    s: 4,q7501,208401
    q: 4,t7502,208411
    t: 2,a7503,208421
  function drawArc(ctx, x, y, coords) {drawArc7507,208446
  function arcToSegments(x, y, rx, ry, large, sweep, rotateX, ox, oy) {arcToSegments7528,209065
  function segmentToBezier(cx, cy, th0, th1, rx, ry, sin_th, cos_th) {segmentToBezier7586,210843
  var fabric = global.fabric || (global.fabric = { }),fabric7615,211774
  function getX(item) {getX7629,212102
  function getY(item) {getY7639,212246
  });fabric.Path.fromObject8269,229746
  fabric.Path.ATTRIBUTE_NAMES = 'd fill fill-opacity opacity fill-rule stroke stroke-width transform'.split(' ');fabric.Path.fromElement8286,230209
  var fabric = global.fabric || (global.fabric = { }),fabric8307,230919
  function instantiatePaths(paths) {instantiatePaths8526,236532
  }fabric.PathGroup.fromObject8534,236827
  var fabric = global.fabric || (global.fabric = { }),fabric8553,237270
  var _lockProperties = {_lockProperties.lockMovementX8567,237731
    lockMovementX:  true,_lockProperties.lockMovementY8568,237757
    lockMovementY:  true,_lockProperties.lockRotation8569,237783
    lockRotation:   true,_lockProperties.lockScalingX8570,237809
    lockScalingX:   true,_lockProperties.lockScalingY8571,237835
    lockScalingY:   true,_lockProperties.lockUniScaling8572,237861
  });fabric.Group.fromObject9093,251758
  fabric.Image.CSS_CANVAS = "canvas-img";fabric.Image9443,261449
  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;fabric.Image.getSvgSrc9450,261562
      fabric.Image.prototype._initFilters.call(object, object);fabric.Image._initFilters9472,262180
      };img.onerror9477,262382
  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;fabric.Image.fromObject9450,261562
  };fabric.Image.fromURL9486,262611
  fabric.Image.ATTRIBUTE_NAMES = 'x y width height fill fill-opacity opacity stroke stroke-width transform xlink:href'.split(' ');fabric.Image.fromElement9514,263460

gui-wt/sliderWidget.cc,1648
namespace minsky { namespace gui {minsky29,907
namespace minsky { namespace gui {gui29,907
SliderWidget::SliderBar::SliderBar(SliderWidget* parent)SliderBar31,943
SliderWidget::SliderBar::~SliderBar()~SliderBar42,1207
void SliderWidget::SliderBar::paintEvent(Wt::WPaintDevice *paintDevice)paintEvent45,1250
SliderWidget::SliderThumb::SliderThumb(SliderWidget* _parent)SliderThumb51,1388
SliderWidget::SliderThumb::~SliderThumb()~SliderThumb98,2546
void SliderWidget::SliderThumb::setPos(const double& newPos)setPos101,2593
void SliderWidget::SliderThumb::setRangeAndStepSize(const double& _stepSize,setRangeAndStepSize109,2850
double SliderWidget::SliderThumb::value() constvalue120,3208
double SliderWidget::SliderThumb::posToValue(const double& pos) constposToValue125,3304
double SliderWidget::SliderThumb::valueToPos(const double& value) constvalueToPos133,3565
void SliderWidget::SliderThumb::paintEvent(Wt::WPaintDevice *paintDevice)paintEvent141,3855
SliderWidget::SliderLabel::SliderLabel(SliderWidget* _parent)SliderLabel147,3995
SliderWidget::SliderLabel::~SliderLabel()~SliderLabel156,4217
double SliderWidget::SliderLabel::value()value159,4264
void SliderWidget::SliderLabel::paintEvent(Wt::WPaintDevice *paintDevice)paintEvent164,4339
SliderWidget::SliderWidget(OperationCanvasItem& item, CanvasView* _parent)SliderWidget170,4479
SliderWidget::~SliderWidget()~SliderWidget185,4860
CanvasView* SliderWidget::parent()parent192,5035
void SliderWidget::update()update197,5134
double SliderWidget::value()value209,5339
void SliderWidget::thumbSetValue(const double& value)thumbSetValue214,5404

gui-wt/scrollBarArea.h,1532
#define SCROLLBARAREA_H_SCROLLBARAREA_H_21,729
namespace minsky { namespace gui {minsky28,854
namespace minsky { namespace gui {gui28,854
class ScrollBarArea: public Wt::WContainerWidgetScrollBarArea36,1071
  typedef Wt::WContainerWidget _base_class;_base_class39,1131
  class Container : public Wt::WContainerWidgetContainer41,1176
    Container (Wt::WContainerWidget* parent)Container44,1238
    void initialize()initialize47,1325
    virtual void layoutSizeChanged(int width, int height)layoutSizeChanged54,1464
  Wt::WPointF screenScrollPoint;  ///< scroll point in screen spacescreenScrollPoint64,1665
  double zoomFactor = 1.;         ///< Current zoom factor.zoomFactor65,1733
  Wt::WPointF scrollPoint;        ///< Current scroll position, in model space.scrollPoint66,1793
  Wt::WRectF modelRect;           ///<  The model's work area in modelmodelRect67,1873
  Wt::WPointF clientSize;         ///<  size of client window in pixels, device space.clientSize69,1997
  inline bool zoomIn (double increment)zoomIn90,2408
  inline bool zoomOut (double increment)zoomOut100,2672
  inline double zoom() constzoom134,3497
  double modelWidth() constmodelWidth142,3615
  double modelHeight() constmodelHeight150,3740
  inline void getScrollPos(double& x, double& y) constgetScrollPos155,3809
  void scrollTo(const Wt::WPointF& newPos, bool force = false)scrollTo164,3971
  inline void addViewportToModelRect()addViewportToModelRect225,5942
  void resetModelRect()resetModelRect235,6195

gui-wt/rectSelectionOverlay.h,729
#define RECTSELECTIONOVERLAY_H_RECTSELECTIONOVERLAY_H_21,724
namespace minsky { namespace gui {minsky27,827
namespace minsky { namespace gui {gui27,827
class RectSelectionOverlay : public Wt::WPaintedWidgetRectSelectionOverlay34,960
  typedef Wt::WPaintedWidget _base_class;_base_class37,1026
  Wt::WPointF pointA;     ///<  first point clicked, this point is fixed.pointA40,1078
  Wt::WPointF pointB;     ///<  second point dragged to, this point is trackedpointB41,1152
  bool isActive = false;  ///<  true while the user is dragging the rectangle.isActive43,1289
  inline bool active() constactive65,1707
typedef std::shared_ptr<RectSelectionOverlay> RectSelectionOverlayPtr;RectSelectionOverlayPtr88,2211

gui-wt/mainToolbar.h,1055
#define MAINTOOLBAR_HMAINTOOLBAR_H9,106
namespace minsky { namespace gui {minsky16,239
namespace minsky { namespace gui {gui16,239
class MainToolbar: public ToolbarBase, public AbstractViewMainToolbar36,812
  typedef ToolbarBase _base_class;  ///< Alias for Maintoolbar's base class_base_class39,885
  typedef MainToolbar _this_class;  ///< Alias for this class._this_class40,962
  typedef WPushButton Button;       ///< Alias for buttons.Button41,1026
  Button* toolDefaultButton;  ///<  weak pointer to default button.  Pointer belongs to Wt.toolDefaultButton45,1101
  Button* toolLassoButton;    ///<  weak pointer to lasso button.  Pointer belongs to Wt.toolLassoButton46,1194
  Button* toolLinkButton;     ///<  weak pointer to link button.  Pointer belongs to Wt.toolLinkButton47,1285
  Button* toolDeleteButton;   ///<  weak pointer to delete button.  Pointer belongs to Wt.toolDeleteButton48,1375
  Wt::WSlider* simSpeedSlider;///<  weak pointer to the simulation speed slider.  Pointer belongs to Wt.simSpeedSlider49,1467

gui-wt/linkCanvasOverlay.cc,1533
namespace minsky { namespace gui {minsky30,924
namespace minsky { namespace gui {gui30,924
Wt::WPointF BezierHandleWidget::savedPos;savedPos35,1028
BezierHandleWidget::BezierHandleWidget (PointType type,BezierHandleWidget37,1071
BezierHandleWidget::~BezierHandleWidget()~BezierHandleWidget53,1706
CanvasView* BezierHandleWidget::parent()parent57,1754
const CanvasView* BezierHandleWidget::parent() constparent63,1926
Wt::WPointF BezierHandleWidget::point() constpoint68,2049
void BezierHandleWidget::initInteractiveArea()initInteractiveArea73,2143
void BezierHandleWidget::adjustWidgetPos()adjustWidgetPos139,4011
void BezierHandleWidget::paintEvent(Wt::WPaintDevice *paintDevice)paintEvent146,4191
LinkCanvasOverlay::LinkCanvasOverlay(LinkCanvasItem* _linkItem, CanvasView* _view)LinkCanvasOverlay155,4371
LinkCanvasOverlay::~LinkCanvasOverlay()~LinkCanvasOverlay180,5137
Wire& LinkCanvasOverlay::getWire()getWire194,5477
const Wire& LinkCanvasOverlay::getWire() constgetWire199,5547
Wt::WPointF LinkCanvasOverlay::point(size_t pointIndex, BezierHandleWidget::PointType pointType)point204,5629
void LinkCanvasOverlay::removePoint(BezierHandleWidget* widget)removePoint218,6012
void LinkCanvasOverlay::upgradeHandleType(BezierHandleWidget* widget)upgradeHandleType244,6735
void LinkCanvasOverlay::movePoint(BezierHandleWidget* widget, const Wt::WPointF& newPos)movePoint285,8200
void LinkCanvasOverlay::update()update291,8358
void LinkCanvasOverlay::adjustWidgetPos()adjustWidgetPos300,8525

tclmain.cc,1395
  typedef void (*__sighandler_t) (int);__sighandler_t24,430
#define SIG_DFL	SIG_DFL29,559
#define	SIGILL	SIGILL32,628
#define	SIGABRT	SIGABRT35,698
#define	SIGBUS	SIGBUS38,746
#define	SIGSEGV	SIGSEGV39,792
NEWCMD(minsky_version,0)NEWCMD48,970
namespace ecolabecolab54,1029
  Tk_Window mainWin=0;mainWin56,1048
void printTimersAtEnd()printTimersAtEnd59,1074
#define _WIN32_WINNT _WIN32_WINNT67,1190
int main(int argc, char* argv[])main71,1247
NEWCMD(GUI,0)NEWCMD137,3357
NEWCMD(tcl_findLibrary,-1) {}NEWCMD160,4128
NEWCMD(exit_ecolab,0)NEWCMD162,4159
namespace TCLcmdTCLcmd168,4198
  namespace traptrap171,4218
    eco_string sigcmd[32];sigcmd173,4239
    void sighand(int s) {Tcl_Eval(interp(),sigcmd[s].c_str());}sighand174,4266
    hash_map<eco_string,int> signum;   /* signal name to number table */signum175,4330
    struct init_tinit_t176,4403
      init_t()init_t178,4427
    } init;init216,6563
    NEWCMD(trap,2)     /* trap argv[2] to excute argv[1] */NEWCMD218,6576
    void aborthand(int s) {throw error("Fatal Error: Execution recovered");}aborthand226,6800
    NEWCMD(trapabort,-1)NEWCMD228,6878
  NEWCMD(cli,0)NEWCMD247,7244
  NEWCMD(shellOpen,1)NEWCMD308,8916
  int tk_mac_OpenDocument(ClientData cd,Tcl_Interp *interp,tk_mac_OpenDocument316,9106
  static int tk_mac_OpenDocument_dummy=tk_mac_OpenDocument_dummy327,9343

classdesc_access.h,151
#define CLASSDESC_ACCESS_HCLASSDESC_ACCESS_H20,735
#undef CLASSDESC_ACCESSCLASSDESC_ACCESS27,897
#define CLASSDESC_ACCESS(CLASSDESC_ACCESS28,921

server/queryServer.html,0

server/minskyMY.sql,0

server/databaseServer.h,269
#define DATABASESERVER_HDATABASESERVER_H21,734
namespace minskyminsky26,831
  class DatabaseServer: public Websocket, public MsgTypeDatabaseServer29,851
    Exclude<Database> db;db32,922
    void openDb(const std::string& conn) {db.openDB(conn);}openDb33,948

server/server.tcl,0

server/library/help/minsky/node33.html,79
<H3><A NAME="SECTION00246100000000000000">SECTION0024610000000000000052,1718

server/library/help/minsky/node27.html,79
<H2><A NAME="SECTION00243000000000000000">SECTION0024300000000000000052,1710

server/library/help/minsky/node42.html,107
<H2><A NAME="SECTION00322000000000000000"></A><A NAME="tut:money"></A>SECTION0032200000000000000051,1646

server/library/help/minsky/node36.html,136
<H3><A NAME="SECTION00246400000000000000"></A>SECTION0024640000000000000052,1708
<A NAME="time-constants"></A>time-constants53,1755

server/library/help/minsky/node19.html,130
<H2><A NAME="SECTION00235000000000000000"></A>SECTION0023500000000000000052,1671
<A NAME="Speedslider"></A>Speedslider53,1718

server/library/help/minsky/node39.html,79
<H1><A NAME="SECTION00310000000000000000">SECTION0031000000000000000052,1687

server/library/help/minsky/node40.html,191
<H1><A NAME="SECTION00320000000000000000"></A><A NAME="tut:basicBankModel"></A>SECTION0032000000000000000052,1685
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>CHILD_LINKS67,2167

server/library/help/minsky/node57.html,79
<H1><A NAME="SECTION00500000000000000000">SECTION0050000000000000000052,1707

server/library/help/minsky/node2.html,154
<H1><A NAME="SECTION00110000000000000000">SECTION0011000000000000000052,1643
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>CHILD_LINKS59,1746

server/library/help/minsky/node55.html,79
<H1><A NAME="SECTION00480000000000000000">SECTION0048000000000000000052,1661

server/library/help/minsky/node12.html,429
<H3><A NAME="SECTION00231200000000000000"></A>SECTION0023120000000000000052,1620
<A NAME="Edit"></A>Edit53,1667
<LI><A NAME="edit:undo"></A> Undo and Redo allow you to step back and forward in your editingedit:undo61,1714
<LI><A NAME="edit:copy"></A> Cut/copy/paste. Selecting, or lassoing a regionedit:copy67,1944
<LI><A NAME="edit:group"></A> Create a <A HREF="node51.html#group">group</A> using theedit:group82,2768

server/library/help/minsky/node58.html,154
<H1><A NAME="SECTION00600000000000000000">SECTION0060000000000000000051,1644
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>CHILD_LINKS58,1744

server/library/help/minsky/node15.html,128
<H3><A NAME="SECTION00231500000000000000"></A>SECTION0023150000000000000051,1605
<A NAME="RungeKutta"></A>RungeKutta52,1652

server/library/help/minsky/node20.html,122
<H2><A NAME="SECTION00236000000000000000"></A>SECTION0023600000000000000052,1674
<A NAME="SimTime"></A>SimTime53,1721

server/library/help/minsky/node35.html,79
<H3><A NAME="SECTION00246300000000000000">SECTION0024630000000000000052,1738

server/library/help/minsky/node31.html,79
<H3><A NAME="SECTION00245200000000000000">SECTION0024520000000000000051,1656

server/library/help/minsky/node41.html,79
<H2><A NAME="SECTION00321000000000000000">SECTION0032100000000000000052,1680

server/library/help/minsky/node10.html,191
<H2><A NAME="SECTION00231000000000000000"></A>SECTION0023100000000000000052,1654
<A NAME="Menu"></A>Menu53,1701
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>CHILD_LINKS71,2068

server/library/help/minsky/node50.html,79
<H1><A NAME="SECTION00430000000000000000">SECTION0043000000000000000052,1630

server/library/help/minsky/node24.html,154
<H1><A NAME="SECTION00240000000000000000">SECTION0024000000000000000051,1635
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>CHILD_LINKS58,1750

server/library/help/minsky/node17.html,130
<H2><A NAME="SECTION00233000000000000000"></A>SECTION0023300000000000000052,1667
<A NAME="ModeButtons"></A>ModeButtons53,1714

server/library/help/minsky/node28.html,79
<H2><A NAME="SECTION00244000000000000000">SECTION0024400000000000000052,1713

server/library/help/minsky/node23.html,118
<H2><A NAME="SECTION00239000000000000000"></A>SECTION0023900000000000000051,1625
<A NAME="Wires"></A>Wires52,1672

server/library/help/minsky/node13.html,120
<H3><A NAME="SECTION00231300000000000000"></A>SECTION0023130000000000000052,1625
<A NAME="Insert"></A>Insert53,1672

server/library/help/minsky/node21.html,433
<H2><A NAME="SECTION00237000000000000000">SECTION0023700000000000000052,1672
 ALT="257">. <A NAME="GodleyTable"></A> This is theGodleyTable71,2062
 ALT="263">. <A NAME="Variable"></A> This creates an entityVariable102,2885
 ALT="266"> <A NAME="Constant"></A> creates an entity whoseConstant129,3750
 ALT="272">.<A NAME="Integrate"></A>  This inserts a variable whose value depends on the integral of otherIntegrate185,5478

server/library/help/minsky/node54.html,104
<H1><A NAME="SECTION00470000000000000000"></A><A NAME="godley"></A>SECTION0047000000000000000052,1656

server/library/help/minsky/node59.html,142
<H1><A NAME="SECTION00610000000000000000"></A>SECTION0061000000000000000046,1480
<A NAME="faq:no-difference"></A>faq:no-difference47,1527

server/library/help/minsky/node51.html,103
<H1><A NAME="SECTION00440000000000000000"></A><A NAME="group"></A>SECTION0044000000000000000052,1635

server/library/help/minsky/node53.html,119
<H1><A NAME="SECTION00460000000000000000"></A>SECTION0046000000000000000052,1653
 <A NAME="Notes"></A>Notes53,1700

server/library/help/minsky/node56.html,79
<H1><A NAME="SECTION00490000000000000000">SECTION0049000000000000000051,1639

server/library/help/minsky/node16.html,128
<H2><A NAME="SECTION00232000000000000000"></A>SECTION0023200000000000000052,1665
<A NAME="RunButtons"></A>RunButtons53,1712

server/library/help/minsky/node37.html,79
<H3><A NAME="SECTION00246500000000000000">SECTION0024650000000000000051,1643

server/library/help/minsky/node43.html,79
<H1><A NAME="SECTION00330000000000000000">SECTION0033000000000000000051,1634

server/library/help/minsky/node9.html,155
<H1><A NAME="SECTION00230000000000000000">SECTION0023000000000000000052,1673
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>CHILD_LINKS119,2524

server/library/help/minsky/node11.html,198
<H3><A NAME="SECTION00231100000000000000"></A>SECTION0023110000000000000052,1618
<A NAME="File"></A>File53,1665
<DD><A NAME="recentfiles"></A> Provides a shortcut to some ofrecentfiles76,2034

server/library/help/minsky/node7.html,79
<H1><A NAME="SECTION00210000000000000000">SECTION0021000000000000000052,1668

server/library/help/minsky/node22.html,132
<H2><A NAME="SECTION00238000000000000000"></A>SECTION0023800000000000000052,1663
<A NAME="DesignCanvas"></A>DesignCanvas53,1710

server/library/help/minsky/index.html,47
<A NAME="CHILD_LINKS"></A>CHILD_LINKS42,1358

server/library/help/minsky/node29.html,223
<H2><A NAME="SECTION00245000000000000000"></A>SECTION0024500000000000000052,1706
<A NAME="creatingBankingModel"></A>creatingBankingModel53,1753
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>CHILD_LINKS61,1867

server/library/help/minsky/node25.html,79
<H2><A NAME="SECTION00241000000000000000">SECTION0024100000000000000052,1703

server/library/help/minsky/node34.html,79
<H3><A NAME="SECTION00246200000000000000">SECTION0024620000000000000052,1705

server/library/help/minsky/node6.html,154
<H1><A NAME="SECTION00200000000000000000">SECTION0020000000000000000052,1675
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>CHILD_LINKS59,1786

server/library/help/minsky/node8.html,79
<H1><A NAME="SECTION00220000000000000000">SECTION0022000000000000000052,1671

server/library/help/minsky/node38.html,181
<H1><A NAME="SECTION00300000000000000000"></A><A NAME="tutorial"></A>SECTION0030000000000000000052,1678
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>CHILD_LINKS60,1810

server/library/help/minsky/node14.html,241
<H3><A NAME="SECTION00231400000000000000"></A>SECTION0023140000000000000052,1633
<A NAME="Options"></A>Options53,1680
<LI><A NAME="wrap-equations"></A> Wrap long equations in LaTeX export. If ticked, use the breqnwrap-equations81,2560

server/library/help/minsky/node48.html,106
<H2><A NAME="SECTION00422000000000000000"></A><A NAME="var:init"></A>SECTION0042200000000000000052,1664

server/library/help/minsky/node49.html,79
<H2><A NAME="SECTION00423000000000000000">SECTION0042300000000000000051,1607

server/library/help/minsky/minsky.html,47
<A NAME="CHILD_LINKS"></A>CHILD_LINKS42,1392

server/library/help/minsky/node46.html,154
<H1><A NAME="SECTION00420000000000000000">SECTION0042000000000000000052,1649
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>CHILD_LINKS98,3183

server/library/help/minsky/node26.html,79
<H2><A NAME="SECTION00242000000000000000">SECTION0024200000000000000052,1711

server/library/help/minsky/node1.html,207
<H1><A NAME="SECTION00100000000000000000"></A>SECTION0010000000000000000052,1667
<A NAME="Introduction"></A>Introduction53,1714
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>CHILD_LINKS61,1808

server/library/help/minsky/node4.html,142
<H2><A NAME="SECTION00112000000000000000"></A>SECTION0011200000000000000051,1654
<A NAME="intro:experienced"></A>intro:experienced52,1701

server/library/help/minsky/node52.html,116
<H1><A NAME="SECTION00450000000000000000"></A>SECTION0045000000000000000052,1646
<A NAME="Plot"></A>Plot53,1693

server/library/help/minsky/node30.html,79
<H3><A NAME="SECTION00245100000000000000">SECTION0024510000000000000052,1693

server/library/help/minsky/node5.html,79
<H1><A NAME="SECTION00120000000000000000">SECTION0012000000000000000051,1630

server/library/help/minsky/node45.html,1826
<H1><A NAME="SECTION00410000000000000000"></A><A NAME="operations"></A>SECTION0041000000000000000052,1645
<DD><A NAME="op:add"></A> Add multiple numbers together. The input ports allowop:add60,1779
<DD><A NAME="op:subtract"></A> Subtract two numbers. The input portsop:subtract67,2011
<DD><A NAME="op:multiply"></A> Multiple numbers with each other. The input portsop:multiply76,2392
<DD><A NAME="op:divide"></A> Divide a number by another. The input ports allowop:divide83,2642
<DD><A NAME="op:pow"></A> Raise one number to the power of another. Theop:pow92,3025
<DD><A NAME="op:log"></A> Take the logarithm of the <IMGop:log107,3443
<DD><A NAME="op:time"></A> Returns the current value of system time.op:time126,4019
<DD><A NAME="op:copy"></A> This just copies its input to its output,op:copy131,4130
<DD><A NAME="op:integrate"></A> Creates an integration (or stock)op:integrate138,4322
<DD><A NAME="op:data"></A> A data interpolation widget. Currently, theop:data148,4600
<DD><A NAME="op:sqrt"></A> Square root of the inputop:sqrt213,6200
<DD><A NAME="op:exp"></A> Exponential of the inputop:exp218,6293
<DD><A NAME="op:ln"></A> Natural logarithmop:ln223,6384
<DD><A NAME="op:sin"></A> sine functionop:sin228,6468
<DD><A NAME="op:cos"></A> cosine functionop:cos231,6544
<DD><A NAME="op:tan"></A> tangent functionop:tan234,6622
<DD><A NAME="op:asin"></A> Arc sine, inverse of sineop:asin237,6702
<DD><A NAME="op:acos"></A> Arc cosine, inverse of cosineop:acos240,6792
<DD><A NAME="op:atan"></A> Arc tangent, inverse of tangentop:atan243,6886
<DD><A NAME="op:sinh"></A> hyperbolic sine function <!-- MATHop:sinh246,6982
<DD><A NAME="op:cosh"></A> hyperbolic cosine function <!-- MATHop:cosh255,7209
<DD><A NAME="op:tanh"></A> hyperbolic tangent function <!-- MATHop:tanh264,7438

server/library/help/minsky/node32.html,154
<H2><A NAME="SECTION00246000000000000000">SECTION0024600000000000000051,1672
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>CHILD_LINKS85,2596

server/library/help/minsky/node3.html,126
<H2><A NAME="SECTION00111000000000000000"></A>SECTION0011100000000000000052,1677
<A NAME="intro:new"></A>intro:new53,1724

server/library/help/minsky/node18.html,130
<H2><A NAME="SECTION00234000000000000000"></A>SECTION0023400000000000000052,1668
<A NAME="ZoomButtons"></A>ZoomButtons53,1715

server/library/help/minsky/node47.html,79
<H2><A NAME="SECTION00421000000000000000">SECTION0042100000000000000052,1662

server/library/help/minsky/node44.html,154
<H1><A NAME="SECTION00400000000000000000">SECTION0040000000000000000052,1670
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>CHILD_LINKS59,1775

server/library/help/minsky.html,45
      function setContent()setContent8,203

server/library/Xecolab.tcl,76
proc mem_avail {} {return "[lindex [exec vmstat] 24]KB"}mem_avail135,3433

server/library/init.tcl,360
proc use {name} {use1,0
	proc $procname {args} "eval $name \$args"$procname5,144
proc savebgerror {} {savebgerror11,291
        proc bgerror x {puts stdout $x}bgerror14,433
proc restorebgerror {} {restorebgerror18,482
	proc bgerror {} {}  bgerror20,553
proc use_namespace {name} {use_namespace26,628
proc unknown {procname args} {unknown32,820

server/library/tooltip.tcl,764
proc ::tooltip::tooltip {w args} {::tooltip::tooltip100,2669
proc ::tooltip::register {w args} {::tooltip::register159,4060
proc ::tooltip::clear {{pattern .*}} {::tooltip::clear229,6081
proc ::tooltip::show {w msg {i {}}} {::tooltip::show249,6680
proc ::tooltip::menuMotion {w} {::tooltip::menuMotion318,8975
proc ::tooltip::hide {{fadeOk 0}} {::tooltip::hide344,9728
proc ::tooltip::fade {w step} {::tooltip::fade356,9956
proc ::tooltip::wname {{w {}}} {::tooltip::wname367,10295
proc ::tooltip::itemTip {w args} {::tooltip::itemTip380,10522
proc ::tooltip::enableCanvas {w args} {::tooltip::enableCanvas392,10815
proc ::tooltip::tagTip {w tag} {::tooltip::tagTip400,11159
proc ::tooltip::enableTag {w tag} {::tooltip::enableTag411,11496

server/library/Xecolab/histogram.tcl,447
proc histogram {name args} {histogram4,19
	    proc setnbins {x} {setnbins8,116
	    proc xlogscale {} {xlogscale16,349
	    proc ylogscale {} {ylogscale31,762
	    proc fmttick {name val} {fmttick43,1138
	    proc outputdata {} {outputdata47,1208
	    proc print {{filename histogram.ps } {options ""}} {print55,1417
	    proc histogram {name argl} {histogram60,1579
			proc $procname {args} "eval $comm \$args"$procname80,2169

server/library/Xecolab/plot.tcl,268
proc plot {name args} {plot3,27
	    proc fmttick {name val} {fmttick7,149
	    proc init {name title} {init11,219
	    proc clear {} {clear40,1162
	    proc print {{filename plot.ps } {options ""}} {print48,1369
	    proc plot {name arglist} {plot53,1528

server/library/Xecolab/connect.tcl,159
proc connect_plot {args} {connect_plot3,33
	    proc print {{filename plot.ps } {options ""}} {print80,2305
	    proc update_size {} {update_size86,2485

server/library/Xecolab/obj-browser.tcl,689
proc read_select {browser} {read_select3,59
proc update_browser {browser} {update_browser23,611
proc repeat {freq cmd} {repeat65,1766
proc repeat_plot {obj_browse lead varname} {repeat_plot72,1857
proc obj_browser {{pat *} {ns ""}} {obj_browser82,2131
	proc [set $obj_browse.lead]\#value {args} \[set132,4270
proc browse_vector {name} {browse_vector186,5993
proc browse_deque {name} {browse_vector $name}browse_deque199,6501
proc browse_list {name} {browse_vector $name}browse_list200,6548
proc browse_set {name} {browse_vector $name}browse_set201,6594
proc getCurrentSelection {name sel_idx} {getCurrentSelection203,6640
proc browse_map {name} {browse_map207,6772

server/library/Xecolab/display.tcl,140
proc display {args} {display3,30
	    proc print {{filename display.ps } {options ""}} {print41,1224
	    proc clear {} {clear46,1381

server/library/Xecolab/filebrowser.tcl,80
proc browse file {browse1,0
proc get_filename {pattern} {get_filename18,328

server/library/Xecolab/netgraph.tcl,125
proc netgraph {name args} {netgraph1,0
	    proc refresh {} {refresh37,1571
	    proc netgraph {args} {netgraph54,2057

server/database.cc,1016
namespace minskyminsky25,808
  int Database::createElement(int modelId, Item& x) createElement50,1332
  unique_ptr<Item> Database::readElement(int modelId, int id)readElement73,2085
  void Database::updateElement(int modelId, const Item& x) {}updateElement83,2387
  void Database::deleteElement(int modelId, const Item& x) {}deleteElement85,2450
  auto_ptr<Layout> Database::readLayout(int modelId, int id) readLayout87,2513
  void Database::updateLayout(int modelId, const Layout& x) {}updateLayout90,2607
    void moveInto(vector<int>& ids, vector<string>& types, moveInto96,2793
  int Database::createModel(const string& name, const string& owner, createModel111,3175
  void Database::readModel(int modelId, schema1::Minsky& model) readModel169,5415
  void Database::updateModel(int modelId, const schema1::Minsky&) {}updateModel193,6189
  void Database::deleteModel(int modelId) {}deleteModel194,6258
  void Database::listModels(const string& user, ModelList& models)listModels197,6307

server/minskyPG.sql,635
CREATE TABLE elements (elements21,387
CREATE TABLE elements (elements.modelid21,387
    modelid integer NOT NULL,elements.id22,411
    type character varying,elements.data24,466
CREATE TABLE layouts (layouts35,645
CREATE TABLE layouts (layouts.modelid35,645
    modelid integer NOT NULL,layouts.id36,668
    type character varying,layouts.data38,723
CREATE TABLE models (models49,900
CREATE TABLE models (models.id49,900
    id integer NOT NULL,models.name50,922
    name character varying(255),models.owner51,947
    owner character varying(255),models.maxelem52,980
    maxelem integer,models.data53,1014

server/websocket.cc,2275
  struct Dummy {};Dummy33,1034
namespace classdescclassdesc36,1056
  template <> string typeName<Dummy>() {return "";}typeName39,1163
  template <> void json_pack(json_pack_t&, const string&, Dummy&) {}json_pack40,1215
  template <> void json_unpack(json_pack_t&, const string&, Dummy&) {}json_unpack41,1284
namespace minskyminsky46,1388
  namespace websocketwebsocket48,1407
    class ClientImpl: private server::handler::connection_ptrClientImpl50,1433
      ClientImpl(const server::handler::connection_ptr& con): ClientImpl53,1513
      void send(const MsgBase& msg) const {send55,1624
    struct RequestRequest60,1719
      Websocket::Client client;client62,1744
      string msgJson;msgJson63,1776
      Request(ClientImpl* client, const string& msgJson): Request64,1798
      Request() {}Request66,1901
    class RequestCoordinator {RequestCoordinator74,2172
      void add_request(const Request& r) {add_request76,2215
      void get_request(Request& value) {get_request83,2394
      queue<Request>         m_requests;m_requests94,2667
      mutex                m_lock;m_lock95,2708
      condition_variable   m_cond;m_cond96,2743
    class Impl: public server::handlerImpl99,2786
      Websocket& intf; // interface to handle callbacksintf101,2831
      RequestCoordinator req;req102,2887
      vector<classdesc::shared_ptr<thread> > threads;threads104,2969
      volatile bool running;running107,3122
      classdesc::shared_ptr<barrier> terminated;terminated108,3151
      Impl(Websocket& intf): intf(intf), running(false) {}Impl110,3212
    void Impl::on_message(connection_ptr con,message_ptr msg)on_message117,3365
    void Impl::process(const Request& r)process126,3636
    void Impl::threadRoutine()threadRoutine151,4301
    void Impl::start(unsigned workerThreads)start162,4461
    Impl::~Impl()~Impl171,4715
  Websocket::Websocket(): impl(new websocket::Impl(*this)),Websocket183,5018
  void Websocket::start() start185,5154
  Websocket::Client::Client(websocket::ClientImpl* c): impl(c) {}Client191,5270
  void Websocket::Client::send(const MsgBase& msg) const {impl->send(msg);}  send192,5336
  string Websocket::Client::username() const {return ""; /*TODO*/}  username193,5414

server/queryServer.js,271
var connection;connection1,0
    connection=new WebSocket(document.getElementById("server").value);connection.onopen5,43
    };connection.onmessage12,359
    };connection.onerror48,1675
var connect=function() connect3,17
var execute=function() execute56,1772

server/message.h,3502
#define MESSAGE_HMESSAGE_H21,727
struct MsgTypeMsgType27,847
  enum Type {invalid, create, read, update, del, listModels, Type29,864
  enum Type {invalid, create, read, update, del, listModels, invalid29,864
  enum Type {invalid, create, read, update, del, listModels, create29,864
  enum Type {invalid, create, read, update, del, listModels, read29,864
  enum Type {invalid, create, read, update, del, listModels, update29,864
  enum Type {invalid, create, read, update, del, listModels, del29,864
  enum Type {invalid, create, read, update, del, listModels, listModels29,864
             version, commands, payloads, defaultPayload};version30,926
             version, commands, payloads, defaultPayload};commands30,926
             version, commands, payloads, defaultPayload};payloads30,926
             version, commands, payloads, defaultPayload};defaultPayload30,926
namespace minskyminsky33,990
  struct MsgBase: public MsgTypeMsgBase37,1039
    Type msg;msg39,1076
    int modelId;modelId40,1090
    MsgBase(): msg(invalid), modelId(-1) {}MsgBase41,1107
    virtual ~MsgBase() {}~MsgBase45,1265
  struct Msg: public MsgBaseMsg54,1574
    string payloadClass;payloadClass56,1607
    Payload payload;payload57,1632
    Msg(): payloadClass(classdesc::typeName<Payload>()) {}Msg59,1654
    Msg(const MsgBase& m, const Payload& p=Payload()): Msg60,1713
    string json() const {json64,1854
    void json(const string& s) {json70,1960
    string typeName() const {return payloadClass;}typeName75,2082
    PolyBase<string>* payloadAsPolyBase() {return 0;}payloadAsPolyBase80,2324
    const PolyBase<string>* payloadAsPolyBase() const {return 0;}payloadAsPolyBase81,2378
  struct PayloadPtr: public classdesc::shared_ptr<Payload> PayloadPtr88,2573
    PayloadPtr(Payload* x):  shared_ptr<Payload>(x) {}PayloadPtr90,2637
    PayloadPtr() {}PayloadPtr91,2692
  struct MsgPPtr: public MsgBaseMsgPPtr95,2745
    string payloadClass;payloadClass97,2782
    PayloadPtr<Payload> payload;payload98,2807
    void setPayload(Payload* p) {setPayload99,2840
    MsgPPtr(): MsgPPtr104,2967
    MsgPPtr(const MsgBase& mb): MsgPPtr106,3059
    string json() const {json110,3188
    void json(const string& s) {json117,3334
    string typeName() const {return payloadClass;}typeName123,3498
    PolyBase<string>* payloadAsPolyBase() {return payload.get();}payloadAsPolyBase126,3616
    const PolyBase<string>* payloadAsPolyBase() const {return payload.get();}payloadAsPolyBase127,3682
  class MsgFactory: public minsky::Factory<MsgBase, string>MsgFactory131,3767
    template <class T> void registerType() {registerType138,3994
  struct ModelDescriptorModelDescriptor147,4225
    int modelId;modelId149,4254
    string name;name150,4271
    bool readOnly;readOnly151,4288
    ModelDescriptor(int modelId, const string& name, bool readOnly):ModelDescriptor152,4307
    ModelDescriptor() {}ModelDescriptor154,4434
  struct VersionVersion158,4500
    int schemaVersion;schemaVersion160,4521
    string minskyVersion, ecolabVersion;minskyVersion161,4544
    string minskyVersion, ecolabVersion;ecolabVersion161,4544
  typedef std::vector<ModelDescriptor> ModelList;ModelList165,4592
void json_pack(classdesc::json_pack_t&,const classdesc::string&,minsky::PayloadPtr<T>&) {}json_pack184,5109
void json_unpack(classdesc::json_unpack_t&,const classdesc::string&,minsky::PayloadPtr<T>&) {}json_unpack186,5219

server/message.cc,322
namespace classdescclassdesc24,781
  template <> Factory<minsky::MsgBase, string>::Factory() {}Factory26,803
namespace minskyminsky29,867
  MsgFactory::MsgFactory()MsgFactory32,887
  string MsgFactory::suppressSchema(const string& typeName) constsuppressSchema41,1157
  MsgFactory msgFactory;msgFactory51,1356

server/databaseServer.cc,246
namespace minskyminsky26,835
  DatabaseServer databaseServer;databaseServer34,994
  void DatabaseServer::onMessage(const Client& client, const MsgBase& msg)onMessage37,1058
  void DatabaseServer::load(const string& modelFile)load129,3922

server/websocket.h,717
#define WEBSOCKET_HWEBSOCKET_H21,729
namespace minskyminsky27,827
  namespace websocketwebsocket30,875
  class WebsocketWebsocket36,944
    boost::shared_ptr<websocket::Impl> impl;impl40,1091
    unsigned workerThreads;workerThreads43,1204
    unsigned listenerThreads;listenerThreads45,1290
    unsigned short port;port47,1365
    class ClientClient52,1480
      shared_ptr<websocket::ClientImpl> impl;impl55,1560
      Client() {}Client58,1658
    virtual ~Websocket() {}~Websocket67,1965
namespace classdesc_accessclassdesc_access78,2191
  template <> struct access_pack<minsky::Websocket>:access_pack80,2220
  template <> struct access_unpack<minsky::Websocket>:access_unpack82,2333

server/database.h,306
#define DATABASE_HDATABASE_H21,728
namespace minskyminsky26,820
  class DatabaseDatabase28,839
    soci::session db;db30,860
    Database(const std::string& conn): db(conn) {}Database32,892
    Database() {}Database33,943
    void openDB(const std::string& conn) {db.open(conn);}openDB34,961

schema/schema0.cc,1884
namespace schema0schema028,893
  void asg(minsky::IntrusiveMap<K,V1>& m1, const std::map<K,V2>& m2)asg33,985
  void asg(minsky::Plots& x, const std::map<std::string, PlotWidget>& y)asg40,1217
  void asg(minsky::PMMap<T>& x, const std::map<int, T1>& y) {asg47,1450
  void asg(C1& c1, const C2& c2)asg54,1656
  void asg(minsky::GroupIcons& m1, const Minsky::GroupIcons& m2)asg61,1764
  Operation::operator minsky::OperationPtr() const operator minsky::OperationPtr67,1945
  VariablePtr::operator minsky::VariablePtr() constoperator minsky::VariablePtr106,3256
  VariableValue::operator minsky::VariableValue() constoperator minsky::VariableValue119,3604
  VariableManager::operator minsky::VariableManager() constoperator minsky::VariableManager126,3771
  GodleyTable::operator minsky::GodleyTable() constoperator minsky::GodleyTable152,4746
  GodleyIcon::operator minsky::GodleyIcon() constoperator minsky::GodleyIcon162,4979
  GroupIcon::operator minsky::GroupIcon() constoperator minsky::GroupIcon173,5200
  void GroupIcon::updateEdgeVariables(const VariableManager& vm)updateEdgeVariables186,5545
  PlotWidget::operator minsky::PlotWidget() constoperator minsky::PlotWidget211,6377
  Plots::operator minsky::Plots() constoperator minsky::Plots240,7014
  Minsky::Minsky(): stepMin(0), stepMax(1), nSteps(1),Minsky247,7116
  Minsky::operator minsky::Minsky() constoperator minsky::Minsky250,7222
  void Minsky::load(const char* filename)load276,7901
    struct IsOrphanIsOrphan310,8923
      set<string> ids;ids312,8949
      void insert(const string& name) {ids.insert(name);}insert313,8972
      bool operator()(const VariableManager::value_type& v) {operator ()314,9030
      bool operator()(const VariableManager::VariableValues::value_type& l) {operator ()317,9141
  void Minsky::removeIntVarOrphans()removeIntVarOrphans323,9274

schema/enumerateSchema1.h,232
#define ENEUMERATE_SCHEMA1_HENEUMERATE_SCHEMA1_H21,738
namespace schema1schema126,884
  void enumerateRegisterItems(F& f)enumerateRegisterItems31,1024
  void enumerateRegisterLayout(Factory& f)enumerateRegisterLayout44,1403

schema/schema1.cc,4788
namespace schema1schema127,851
  const int Minsky::version;version30,901
    struct Validate  {Validate36,1001
      set<int> items;items37,1024
      template <class T> bool check(const T& x) {check38,1046
    class CombineCombine46,1325
      typedef map<int, UnionLayout> Layouts;Layouts48,1349
      Layouts layout;layout49,1394
      minsky::VariableManager& vm;vm50,1416
      Combine(const vector<shared_ptr<Layout> >& l, minsky::VariableManager& vm): vm(vm) {Combine52,1463
      V combine(minsky::IntrusiveWrap<K,V>& x, const U& y) constcombine62,1826
      T combine(const T& t, const U& u) constcombine67,1974
      void populate(M& m, const vector<U>& v) constpopulate72,2170
      void populate(minsky::PMMap<T>& m, const vector<U>& v) constpopulate79,2384
    minsky::Port Combine::combine(minsky::Port& p, const Port& pp) constcombine103,3174
    minsky::Wire Combine::combine(minsky::Wire& w, const Wire& w1) constcombine112,3431
    void asgNote(minsky::Note& n, const Item& i)asgNote141,4307
    Combine::combine(minsky::OpVarBaseAttributes& o, const Item& o1) constcombine148,4487
    Combine::combine(minsky::OperationPtr& o, const Operation& o1) constcombine164,4901
    Combine::combine(minsky::VariablePtr& v, const Variable& v1) constcombine213,6725
    Combine::combine(minsky::PlotWidget& p, const Plot& p1) constcombine242,7773
    Combine::combine(minsky::GroupIcon& g, const Group& g1) constcombine295,9641
    Combine::combine(minsky::GodleyIcon& g, const Godley& g1) constcombine320,10502
    void Combine::populatepopulate365,11991
    void Combine::populate(minsky::Plots& plots, const vector<Plot>& v) constpopulate375,12263
    void Combine::populate(minsky::VariableManager& vm, const vector<Variable>& v) constpopulate381,12461
    struct ItemMap: public map<int, int>ItemMap395,12998
      void remap(vector<int>& x) {remap397,13045
    shared_ptr<Layout> layoutFactory(int id, const minsky::IntrusiveWrap<K,V>& x)layoutFactory405,13267
    template <> shared_ptr<Layout> layoutFactorylayoutFactory408,13408
    template <> shared_ptr<Layout> layoutFactorylayoutFactory412,13554
    template <> shared_ptr<Layout> layoutFactorylayoutFactory416,13695
    template <> shared_ptr<Layout> layoutFactorylayoutFactory420,13846
    template <> shared_ptr<Layout> layoutFactorylayoutFactory429,14160
    template <> shared_ptr<Layout> layoutFactorylayoutFactory433,14311
    template <> shared_ptr<Layout> layoutFactorylayoutFactory437,14458
  Operation::Operation(int id, const minsky::OperationBase& op): Operation442,14609
    bool assignIf(UnionLayout& u, const Layout& l)assignIf465,15253
  UnionLayout::UnionLayout(const Layout& l)UnionLayout474,15428
  bool MinskyModel::validate() constvalidate486,15766
  Minsky::operator minsky::Minsky() constoperator minsky::Minsky504,16366
    int minRange(int minId, const C& v) {minRange619,20576
    void addOffset(vector<Port>& v, int offs)addOffset625,20752
    void addOffset(vector<Wire>& v, int offs)addOffset631,20896
    void addOffset(vector<Variable>& v, int offs)addOffset640,21109
    void addOffset(vector<Operation>& v, int offs)addOffset650,21365
    void addOffset(vector<Group>& v, int offs)addOffset661,21668
    vector<int> ids(const vector<Item>& v)ids677,22167
    bool exists(const M& m, const Item& i)exists686,22402
  void Minsky::populateGroup(minsky::GroupIcon& g)populateGroup693,22512
  Minsky::Minsky(const minsky::Minsky& m)Minsky816,26835
  void Minsky::relocateCanvas()relocateCanvas960,31831
    struct IsOrphanIsOrphan1009,33534
      set<int> ids;ids1011,33560
      void insert(int id) {ids.insert(id);}insert1012,33580
      bool operator()(const Variable& v) {operator ()1013,33624
      bool operator()(const shared_ptr<Layout>& l) {operator ()1016,33707
  void Minsky::removeIntVarOrphans()removeIntVarOrphans1022,33818
namespace classdescclassdesc1046,34650
  template<> Factory<schema1::Item,string>::Factory() {}Factory1048,34672
  template<> Factory<schema1::Layout,string>::Factory() Factory1049,34729
namespace schema1schema11053,34825
  struct ItemFactory: public Factory<schema1::Item,string>ItemFactory1057,34874
    ItemFactory() {enumerateRegisterItems(*this);}ItemFactory1059,34937
    template <class T> void registerType()registerType1062,35105
  ItemFactory itemFactory;itemFactory1066,35203
  Factory<schema1::Layout,string> factoryForLayout;factoryForLayout1067,35230
  template <> std::auto_ptr<Item> factory<Item>(const std::string& name)factory1070,35284
  template <> std::auto_ptr<Layout> factory<Layout>(const std::string& name)factory1074,35418
  Layout* Layout::create(const string& name)create1079,35564

schema/variableType.cc,53
string VariableType::typeName(int t)typeName23,791

schema/schema0.h,7068
#define SCHEMA_SCHEMA_0SCHEMA_SCHEMA_031,962
namespace schema0schema039,1086
  struct PortPort41,1106
    bool input; //true if input portinput43,1124
    double x,y;x44,1161
    double x,y;y44,1161
    Port(float x=0, float y=0, bool input=false): input(input), x(x), y(y) {}Port45,1177
    operator minsky::Port () const {return minsky::Port(x,y,input);}operator minsky::Port46,1255
  struct WireWire49,1330
    int from, to;from52,1381
    int from, to;to52,1381
    bool visible; ///<whether wire is visible on Canvas visible53,1399
    ecolab::array<float> coords;coords55,1484
    Wire(int from=0, int to=0): from(from), to(to), visible(true) {}Wire56,1517
    operator minsky::Wire() const {operator minsky::Wire57,1586
  struct OperationOperation63,1689
    double sliderMin, sliderMax, sliderStep;sliderMin73,2052
    double sliderMin, sliderMax, sliderStep;sliderMax73,2052
    double sliderMin, sliderMax, sliderStep;sliderStep73,2052
    std::string m_description; ///name of constant, variablem_description75,2098
    std::string description; /// older version of namedescription76,2159
    std::vector<int> m_ports;m_ports77,2214
  struct VariablePtrVariablePtr84,2383
    VariableType::Type m_type;m_type86,2408
    std::string name; ///< variable namename90,2540
    int m_outPort, m_inPort; ///< where wires connect tom_outPort98,2816
    int m_outPort, m_inPort; ///< where wires connect tom_inPort98,2816
    bool operator<(const VariablePtr& x) constoperator <101,2935
  struct Variable: public VariablePtr {};Variable108,3094
  struct VariableValueVariableValue110,3137
    VariableType::Type m_type;m_type112,3164
    string init;init115,3243
    VariableValue(VariableType::Type type=VariableType::undefined, VariableValue118,3295
  struct VariableManager: public std::map<int,Variable>VariableManager124,3485
    typedef std::map<int,Variable> Variables;Variables126,3545
    typedef std::map<std::string, VariableValue> VariableValues;VariableValues127,3591
    std::set<std::string> wiredVariables; /// variables whose input port is wiredwiredVariables129,3659
    std::map<int, int> portToVariable; /// map of ports to variablesportToVariable130,3741
    VariableValues values; values131,3810
  struct GodleyTableGodleyTable139,4062
    std::vector<std::vector<std::string> > data;data141,4087
    std::vector<minsky::GodleyTable::AssetClass> m_assetClass;m_assetClass143,4193
    bool doubleEntryCompliant;doubleEntryCompliant144,4256
    std::string title;title145,4287
    GodleyTable(): doubleEntryCompliant(false)  {}GodleyTable147,4313
    size_t rows() const {return data.size();}rows148,4364
  struct GodleyIconGodleyIcon152,4458
    double adjustHoriz, adjustVert; // difference between where variables are displayed and screen coordinatesadjustHoriz154,4482
    double adjustHoriz, adjustVert; // difference between where variables are displayed and screen coordinatesadjustVert154,4482
    double x, y; ///< position of Godley iconx155,4593
    double x, y; ///< position of Godley icony155,4593
    double scale; ///< scale factor of the XGL imagescale156,4639
    std::vector<VariablePtr> flowVars, stockVars;flowVars157,4692
    std::vector<VariablePtr> flowVars, stockVars;stockVars157,4692
    GodleyTable table;table158,4742
  class GroupIconGroupIcon162,4812
    std::vector<int> inVariables, outVariables;inVariables164,4834
    std::vector<int> inVariables, outVariables;outVariables164,4834
    std::vector<int> operations;operations167,4925
    std::vector<int> variables;variables168,4958
    std::vector<int> wires;wires169,4990
    ecolab::array<int> m_ports;m_ports170,5018
    std::string name;name172,5051
    double x,y; //icon positionx173,5073
    double x,y; //icon positiony173,5073
    double width, height; // size of iconwidth174,5105
    double width, height; // size of iconheight174,5105
    double rotation; // orientation of iconrotation175,5147
    GroupIcon(): width(100), height(100), rotation(0) {}GroupIcon177,5192
  namespace xml_conversionsxml_conversions187,5415
    struct GodleyIconGodleyIcon189,5447
      std::set<Variable> flowVars, stockVars;flowVars191,5475
      std::set<Variable> flowVars, stockVars;stockVars191,5475
  struct PlotWidget: public ecolab::PlotPlotWidget195,5533
    int nxTicks, nyTicks; ///< number of x/y-axis ticksnxTicks197,5578
    int nxTicks, nyTicks; ///< number of x/y-axis ticksnyTicks197,5578
    double fontScale; ///< scale tick labelsfontScale198,5634
    double offx, offy; ///< origin of plot within imageoffx199,5679
    double offx, offy; ///< origin of plot within imageoffy199,5679
    bool logx, logy; ///< logarithmic plots (x/y axes)logx200,5735
    bool logx, logy; ///< logarithmic plots (x/y axes)logy200,5735
    bool grid; ///< draw gridgrid201,5790
    bool leadingMarker; ///< draw a leading marker on the curve (full draw only)leadingMarker202,5820
    bool autoscale; ///< autoscale plot to dataautoscale203,5901
    ecolab::Plot::PlotType plotType;plotType204,5949
    double minx, maxx, miny, maxy;minx205,5986
    double minx, maxx, miny, maxy;maxx205,5986
    double minx, maxx, miny, maxy;miny205,5986
    double minx, maxx, miny, maxy;maxy205,5986
    ecolab::array<int> ports;ports206,6021
    std::vector<VariableValue> yvars;yvars207,6051
    std::vector<VariableValue> xvars;xvars208,6089
    VariableValue xminVar, xmaxVar, yminVar, ymaxVar;xminVar209,6127
    VariableValue xminVar, xmaxVar, yminVar, ymaxVar;xmaxVar209,6127
    VariableValue xminVar, xmaxVar, yminVar, ymaxVar;yminVar209,6127
    VariableValue xminVar, xmaxVar, yminVar, ymaxVar;ymaxVar209,6127
    std::vector<std::string> images;images211,6184
    double x,y;x213,6223
    double x,y;y213,6223
  struct PlotsPlots218,6287
    typedef std::map<std::string, PlotWidget> Map;Map220,6306
    Map plots;plots221,6357
  struct MinskyMinsky225,6415
    typedef std::map<int, Port> Ports;Ports227,6435
    typedef std::map<int, Wire> Wires;Wires228,6474
    Ports ports;ports229,6513
    Wires wires;wires230,6530
    GodleyTable godley; // deprecated - needed for Minsky.1 capabilitygodley232,6548
    typedef std::map<int, GodleyIcon> GodleyItems;GodleyItems233,6619
    GodleyItems godleyItems;godleyItems234,6670
    typedef std::map<int, Operation> Operations;Operations236,6700
    Operations operations;operations237,6749
    VariableManager variables;variables238,6776
    typedef std::map<int, GroupIcon> GroupIcons;GroupIcons240,6808
    GroupIcons groupItems;groupItems241,6857
    Plots plots;plots243,6889
    double stepMin; ///< minimum step sizestepMin248,6957
    double stepMax; ///< maximum step sizestepMax249,7000
    int nSteps;     ///< number of steps per GUI updatenSteps250,7043
    double epsAbs;     ///< absolute errorepsAbs251,7099
    double epsRel;     ///< relative errorepsRel252,7142

schema/operationType.cc,2297
namespace minskyminsky25,794
  string OperationType::typeName(int op) typeName27,813
  namespace OperationTypeInfoOperationTypeInfo30,886
    template <> int numArguments<OperationType::constant>() {return 0;}numArguments32,920
    template <> int numArguments<OperationType::add>() {return 2;}numArguments33,992
    template <> int numArguments<OperationType::subtract>() {return 2;}numArguments34,1059
    template <> int numArguments<OperationType::multiply>() {return 2;}numArguments35,1131
    template <> int numArguments<OperationType::divide>() {return 2;}numArguments36,1203
    template <> int numArguments<OperationType::log>() {return 2;}numArguments37,1273
    template <> int numArguments<OperationType::pow>() {return 2;}numArguments38,1340
    template <> int numArguments<OperationType::time>() {return 0;}numArguments39,1407
    template <> int numArguments<OperationType::copy>() {return 1;}numArguments40,1475
    template <> int numArguments<OperationType::integrate>() {return 1;}numArguments41,1543
    template <> int numArguments<OperationType::differentiate>() {return 1;}numArguments42,1616
    template <> int numArguments<OperationType::data>() {return 1;}numArguments43,1693
    template <> int numArguments<OperationType::sqrt>() {return 1;}numArguments44,1761
    template <> int numArguments<OperationType::exp>() {return 1;}numArguments45,1829
    template <> int numArguments<OperationType::ln>() {return 1;}numArguments46,1896
    template <> int numArguments<OperationType::sin>() {return 1;}numArguments47,1962
    template <> int numArguments<OperationType::cos>() {return 1;}numArguments48,2029
    template <> int numArguments<OperationType::tan>() {return 1;}numArguments49,2096
    template <> int numArguments<OperationType::asin>() {return 1;}numArguments50,2163
    template <> int numArguments<OperationType::acos>() {return 1;}numArguments51,2231
    template <> int numArguments<OperationType::atan>() {return 1;}numArguments52,2299
    template <> int numArguments<OperationType::sinh>() {return 1;}numArguments53,2367
    template <> int numArguments<OperationType::cosh>() {return 1;}numArguments54,2435
    template <> int numArguments<OperationType::tanh>() {return 1;}numArguments55,2503

schema/schema1.h,9999
#define SCHEMA_1_HSCHEMA_1_H26,933
namespace schema1schema142,1279
  struct SPolyBase: SPolyBase51,1459
  struct SPoly: virtual public B1, virtual public B2SPoly62,1763
    SPoly* clone() const {return new T(static_cast<const T&>(*this));}clone65,1881
    string type() const {return classdesc::typeName<T>();}type66,1952
    void pack(pack_t& x, const string& d) constpack68,2012
    void unpack(unpack_t& x, const string& d)unpack71,2115
    void xml_pack(xml_pack_t& x, const string& d) constxml_pack74,2206
    void xml_unpack(xml_unpack_t& x, const string& d)xml_unpack77,2321
    void json_pack(json_pack_t& x, const string& d) constjson_pack80,2424
    void json_unpack(json_unpack_t& x, const string& d)json_unpack83,2542
    string json() const {json86,2648
    string json(const string& s) {json91,2753
  struct Join: virtual public T, virtual public U Join100,2916
    Join* clone() const {return 0;}clone102,2971
    string type() const {return "";}type103,3007
    void pack(pack_t& x, const string& d) const {}pack104,3044
    void unpack(unpack_t& x, const string& d) {}unpack105,3095
    void xml_pack(xml_pack_t& x, const string& d) const {}xml_pack106,3144
    void xml_unpack(xml_unpack_t& x, const string& d) {}xml_unpack107,3203
    void json_pack(json_pack_t& x, const string& d) const {}json_pack108,3260
    void json_unpack(json_unpack_t& x, const string& d) {}json_unpack109,3321
    string json() const {return "";}json110,3380
    string json(const string& s) {return "";}json111,3417
  struct Item: public SPoly<Item, SPolyBase>Item114,3469
    int id;id116,3518
    string detailedText, tooltip;detailedText118,3583
    string detailedText, tooltip;tooltip118,3583
    Item(int id=-1): id(id) {}Item119,3617
    Item(int id, const T& it): Item121,3671
    string typeName() const {return type();}typeName124,3830
  struct Port: public SPoly<Port,Item>Port128,3882
    bool input;input130,3925
    Port(): input(false) {}Port131,3941
    Port(int id, const minsky::Port& p): Item(id), input(p.input()) {}Port132,3969
  struct Wire: public SPoly<Wire,Item>Wire135,4046
    int from, to;from137,4089
    int from, to;to137,4089
    Wire(): from(-1), to(-1) {}Wire138,4107
    Wire(int id, const minsky::Wire& w): Item(id,w), from(w.from), to(w.to) {}Wire139,4139
  struct Operation: public SPoly<Operation,Item>Operation142,4224
    minsky::OperationType::Type type;type144,4277
    double value;value145,4315
    vector<int> ports;ports146,4333
    map<double,double> data; //for data operationsdata147,4356
    string name;name148,4407
    int intVar;intVar149,4424
    Operation(): type(minsky::OperationType::numOps), value(0) {}Operation150,4440
  struct Variable: public SPoly<Variable,Item>Variable154,4569
    VariableType::Type type;type156,4620
    string init;init157,4649
    vector<int> ports;ports158,4666
    string name;name159,4689
    Variable(): type(VariableType::undefined), init("0") {}Variable160,4706
    Variable(int id, const minsky::VariableBase& v): Variable161,4766
  struct Plot: public SPoly<schema1::Plot,Item>Plot167,4978
    typedef ecolab::Plot::Side Side;Side169,5030
    vector<int> ports;ports170,5067
    shared_ptr<Side> legend;legend171,5090
    string title, xlabel, ylabel, y1label;title172,5119
    string title, xlabel, ylabel, y1label;xlabel172,5119
    string title, xlabel, ylabel, y1label;ylabel172,5119
    string title, xlabel, ylabel, y1label;y1label172,5119
    Plot() {}Plot173,5162
    Plot(int id, const minsky::PlotWidget& p): Plot174,5176
  struct Group: public SPoly<Group,Item>Group180,5411
    vector<int> items;items182,5456
    vector<int> ports;ports183,5479
    vector<int> createdVars;createdVars184,5502
    string name;name185,5531
    Group() {}Group186,5548
    Group(int id, const minsky::GroupIcon& g): Group187,5563
  struct Godley: public SPoly<Godley,Item>Godley191,5671
    vector<int> ports;ports193,5718
    bool doubleEntryCompliant;doubleEntryCompliant194,5741
    string name;name195,5772
    vector<vector<string> > data;data196,5789
    vector<minsky::GodleyTable::AssetClass> assetClasses;assetClasses197,5823
    double zoomFactor;zoomFactor198,5881
    Godley(): doubleEntryCompliant(true), zoomFactor(1) {}Godley199,5904
    Godley(int id, const minsky::GodleyIcon& g):Godley200,5963
  struct Layout: public SPoly<Layout, SPolyBase>Layout208,6253
    int id;id210,6306
    Layout(int id=-1): id(id) {}Layout211,6318
    virtual ~Layout() {}~Layout212,6351
  struct PositionLayout: public SPoly<PositionLayout, Layout>PositionLayout218,6517
    double x,y;x220,6583
    double x,y;y220,6583
    PositionLayout(): x(0), y(0) {}PositionLayout222,6600
    template <class T> PositionLayout(int id, const T& item): PositionLayout223,6636
  struct VisibilityLayoutVisibilityLayout228,6828
    bool visible;visible230,6858
    VisibilityLayout(): visible(true) {}VisibilityLayout231,6876
    template <class T> VisibilityLayout(const T& item):VisibilityLayout232,6917
  struct SizeLayoutSizeLayout236,7010
    double width, height;width238,7034
    double width, height;height238,7034
    SizeLayout() {}SizeLayout239,7060
    SizeLayout(const T& x): width(x.width), height(x.height) {}SizeLayout241,7103
  struct WireLayout: public SPoly<WireLayout, Layout, VisibilityLayout>WireLayout245,7207
    vector<float> coords;coords247,7283
    WireLayout() {}WireLayout249,7314
    WireLayout(int id, const minsky::Wire& wire): WireLayout250,7334
struct ItemLayout: public SPoly<ItemLayout, Layout, ItemLayout256,7553
    double rotation;rotation259,7683
    ItemLayout() {}ItemLayout261,7705
    template <class T> ItemLayout(int id, const T& item): ItemLayout262,7725
  struct GroupLayout: public SPoly<GroupLayout, ItemLayout, SizeLayout>GroupLayout269,7939
    double displayZoom;displayZoom271,8015
    GroupLayout(): displayZoom(1) {}GroupLayout272,8039
    GroupLayout(int id, const minsky::GroupIcon& g):GroupLayout273,8076
  struct PlotLayout: public SPoly<PlotLayout, PositionLayout, SizeLayout>PlotLayout279,8274
    PlotLayout() {width=150; height=150;}PlotLayout281,8352
    PlotLayout(int id, const minsky::PlotWidget& p):PlotLayout282,8394
  struct SliderLayout: public SPoly<SliderLayout, ItemLayout>SliderLayout287,8572
    bool sliderVisible, sliderBoundsSet, sliderStepRel;sliderVisible289,8638
    bool sliderVisible, sliderBoundsSet, sliderStepRel;sliderBoundsSet289,8638
    bool sliderVisible, sliderBoundsSet, sliderStepRel;sliderStepRel289,8638
    double sliderMin, sliderMax, sliderStep;sliderMin290,8694
    double sliderMin, sliderMax, sliderStep;sliderMax290,8694
    double sliderMin, sliderMax, sliderStep;sliderStep290,8694
    SliderLayout(): sliderVisible(false), sliderBoundsSet(false), sliderStepRel(false) {}SliderLayout291,8739
    SliderLayout(int id, const T& item):SliderLayout293,8852
  struct UnionLayout: public SPoly<UnionLayout, UnionLayout303,9303
    UnionLayout() {}UnionLayout307,9491
  struct RungeKuttaRungeKutta311,9550
    double stepMin, stepMax;stepMin313,9574
    double stepMin, stepMax;stepMax313,9574
    int nSteps;nSteps314,9603
    double epsRel, epsAbs;epsRel315,9619
    double epsRel, epsAbs;epsAbs315,9619
    int order;order316,9646
    bool implicit;implicit317,9661
    int simulationDelay;simulationDelay318,9680
    RungeKutta(): order(4), implicit(false), simulationDelay(0) {}RungeKutta319,9705
    RungeKutta(const minsky::Minsky& m):RungeKutta320,9772
  struct MinskyModelMinskyModel327,10009
    vector<Port> ports;ports329,10034
    vector<Wire> wires;wires330,10058
    vector<Item> notes; ///< descriptive notesnotes331,10082
    vector<Operation> operations;operations332,10129
    vector<Variable> variables;variables333,10163
    vector<Plot> plots;plots334,10195
    vector<Group> groups;groups335,10219
    vector<Godley> godleys;godleys336,10245
    RungeKutta rungeKutta;rungeKutta337,10273
  struct MinskyMinsky343,10389
    static const int version=1;version345,10409
    int schemaVersion;schemaVersion346,10441
    MinskyModel model;model347,10464
    vector<shared_ptr<Layout> > layout;layout348,10487
    double zoomFactor;zoomFactor349,10527
    Minsky(): schemaVersion(-1), zoomFactor(1) {} // schemaVersion defined on read inMinsky350,10550
namespace classdescclassdesc377,11472
  template <> inline std::string typeName<shared_ptr<schema1::Layout> >() typeName381,11596
namespace classdesc_accessclassdesc_access385,11704
  template <> struct access_xml_pack<shared_ptr<schema1::Layout> >access_xml_pack388,11759
    void operator()(cd::xml_pack_t& x, const cd::string& d, U& a)operator ()391,11853
  template <>struct access_xml_unpack<shared_ptr<schema1::Layout> >access_xml_unpack396,12017
    void operator()(cd::xml_unpack_t& x, const cd::string& d, U& a)operator ()399,12112
  template <>struct access_json_pack<shared_ptr<schema1::Layout> >access_json_pack406,12306
    void operator()(json_pack_t& x, const string& d, U& a)operator ()409,12400
  template <>struct access_json_unpack<shared_ptr<schema1::Layout> >access_json_unpack414,12558
    void operator()(json_unpack_t& x, const string& d, U& a)operator ()417,12654
inline void json_pack(classdesc::json_pack_t& j, const std::string& d, const std::vector<float>& x)json_pack429,12880
inline void json_unpack(classdesc::json_pack_t& j, const std::string& d, std::vector<float>& x)json_unpack435,13052
inline void xsd_generate(classdesc::xsd_generate_t&,const string&,const schema1::SPolyBase&) {}xsd_generate448,13370
void xsd_generate(classdesc::xsd_generate_t& x,const string& d, xsd_generate450,13505
inline void xsd_generate(classdesc::xsd_generate_t& x,const string& d, xsd_generate455,13728

schema/operationType.h,2010
#define OPERATIONTYPE_HOPERATIONTYPE_H20,732
namespace minskyminsky24,794
  struct OperationTypeOperationType26,813
    enum Type {constant, Type28,840
    enum Type {constant, constant28,840
               add, subtract, multiply, divide, // dual input port opsadd29,866
               add, subtract, multiply, divide, // dual input port opssubtract29,866
               add, subtract, multiply, divide, // dual input port opsmultiply29,866
               add, subtract, multiply, divide, // dual input port opsdivide29,866
               log, pow,log30,937
               log, pow,pow30,937
               time, // zero input port opstime31,962
               copy, integrate,      // single input port opscopy32,1006
               copy, integrate,      // single input port opsintegrate32,1006
               differentiate, // with respect to timedifferentiate33,1068
               data, // an interpolated data itemdata34,1122
               sqrt, exp, ln, sin, cos, tan, asin, acos, atan,sqrt36,1200
               sqrt, exp, ln, sin, cos, tan, asin, acos, atan,exp36,1200
               sqrt, exp, ln, sin, cos, tan, asin, acos, atan,ln36,1200
               sqrt, exp, ln, sin, cos, tan, asin, acos, atan,sin36,1200
               sqrt, exp, ln, sin, cos, tan, asin, acos, atan,cos36,1200
               sqrt, exp, ln, sin, cos, tan, asin, acos, atan,tan36,1200
               sqrt, exp, ln, sin, cos, tan, asin, acos, atan,asin36,1200
               sqrt, exp, ln, sin, cos, tan, asin, acos, atan,acos36,1200
               sqrt, exp, ln, sin, cos, tan, asin, acos, atan,atan36,1200
               sinh, cosh, tanh,sinh37,1263
               sinh, cosh, tanh,cosh37,1263
               sinh, cosh, tanh,tanh37,1263
               numOps // last operation, for iteration purposesnumOps38,1296
  namespace OperationTypeInfoOperationTypeInfo44,1460
  inline std::ostream& operator<<(std::ostream& o, OperationType::Type t)operator <<50,1608

schema/variableType.h,1141
#define VARIABLETYPE_HVARIABLETYPE_H21,732
struct VariableTypeVariableType25,793
  enum Type {undefined, constant, parameter, flow, integral, stock, tempFlow, numVarTypes};Type27,815
  enum Type {undefined, constant, parameter, flow, integral, stock, tempFlow, numVarTypes};undefined27,815
  enum Type {undefined, constant, parameter, flow, integral, stock, tempFlow, numVarTypes};constant27,815
  enum Type {undefined, constant, parameter, flow, integral, stock, tempFlow, numVarTypes};parameter27,815
  enum Type {undefined, constant, parameter, flow, integral, stock, tempFlow, numVarTypes};flow27,815
  enum Type {undefined, constant, parameter, flow, integral, stock, tempFlow, numVarTypes};integral27,815
  enum Type {undefined, constant, parameter, flow, integral, stock, tempFlow, numVarTypes};stock27,815
  enum Type {undefined, constant, parameter, flow, integral, stock, tempFlow, numVarTypes};tempFlow27,815
  enum Type {undefined, constant, parameter, flow, integral, stock, tempFlow, numVarTypes};numVarTypes27,815
inline std::ostream& operator<<(std::ostream& o, VariableType::Type t)operator <<31,949

schema/assetClass.h,471
#define ASSETCLASS_HASSETCLASS_H20,729
struct GodleyAssetClassGodleyAssetClass22,751
  enum AssetClass {noAssetClass, asset, liability, equity};AssetClass24,777
  enum AssetClass {noAssetClass, asset, liability, equity};noAssetClass24,777
  enum AssetClass {noAssetClass, asset, liability, equity};asset24,777
  enum AssetClass {noAssetClass, asset, liability, equity};liability24,777
  enum AssetClass {noAssetClass, asset, liability, equity};equity24,777

schema/schemaHelper.h,1513
#define SCHEMA_HELPERSCHEMA_HELPER21,731
ecolab::array<T> toArray(const std::vector<T>& v) toArray29,902
std::vector<T> toVector(const ecolab::array<T>& a) toVector37,1068
std::vector<double> toDoubleVector(const ecolab::array<T>& a) toDoubleVector45,1233
namespace minskyminsky52,1395
  struct SchemaHelperSchemaHelper61,1705
    template <class T> static float x(const T& o) {return o.m_x;}x64,1797
    template <class T> static float y(const T& o) {return o.m_y;}y65,1863
    template <class T> static array<float> coords(const T& o) {return o.m_coords;}coords66,1929
    template <class T> static void setXY(T& o, float x, float y)setXY67,2012
    static void setPrivates(VariablePorts& op, int outPort, int inPort) {setPrivates70,2102
    static void movePorts(VariablePorts& v, OperationBase& o)movePorts77,2340
    static void setPrivates(IntOp& op, const string& description, int intVar)setPrivates84,2514
    static void setPrivatessetPrivates89,2664
    static void setPrivatessetPrivates97,2880
    static void setPrivates(minsky::VariableManager& vm, setPrivates113,3457
    static void setPrivates(minsky::PlotWidget& plot, setPrivates121,3676
    static void setParent(minsky::GroupIcon& g, int p)setParent129,3868
    static void makePortMultiWired(minsky::Port& p)makePortMultiWired134,3956
    static void asg(PMMap<T>& x, const std::map<int, T1>& y) {asg138,4075
    static void insert(PMMap<T>& x, const typename PMMap<T>::value_type& y)insert143,4295

mkMacDist.sh,39
rewrite_dylibs()rewrite_dylibs13,279

exportSchema.tcl,0

init.h,119
namespace minskyminsky26,882
  typedef int (*Fun)();Fun28,901
  inline std::vector<Fun>& initVec() initVec29,925

makeDocInAegisConsistent.sh,0

echo_tcl_lib.tcl,0

doc/FAQs.tex,71
\chapter{FAQs}FAQs0,0
\chapter{FAQs}Why no difference equations1,0

doc/Introduction.tex,120
\chapter{Introduction}Introduction0,0
\label{Introduction}Welcome2,23
\section{Welcome}New to system dynamics4,45

doc/Reference.tex,410
\chapter{Reference}Reference0,0
\chapter{Reference}Operations1,0
\end{description}Variables89,3499
available from the context menu.Variable names118,4808
fraction of max-min.Wires150,6346
to fit in the drop fown menu.Plot widget208,9262
\end{description}Note Widget239,10539
specified (not in Mun!). Godley Tables247,10895
accounted for, with no hidden sinks or sources.Context Menu280,12671

doc/Tutorial.tex,158
\chapter{Tutorial}\label{tutorial}Tutorial0,0
\chapter{Tutorial}\label{tutorial}Basic System Dynamics model1,0
lending occurs.  Loanable Funds416,16823

doc/makedoc.sh,0

doc/SystemDynamicsHistory.tex,80
\chapter{Brief History of system dynamics}Brief History of system dynamics0,0

doc/minsky.html,45
      function setContent()setContent8,203

doc/minsky.tex,0

doc/GettingStarted.tex,874
\chapter{Getting Started}Getting Started0,0
\chapter{Getting Started}System requirements1,0
  page}{http://minsky.sf.net} to download the version you need.Getting help7,188
context-sensitive.Components of the Program12,345
\end{enumerate}Menu46,846
is developed; the current menu items (as at November 2013, Mun release) are:File56,1062
%hand side of Workers, and you've defined the equation that the numberZoom buttons240,8415
recentres the canvas. It can also be used to recentre the equation view.Speed slider308,11159
in a simulation.Simulation time318,11517
timesteps $\Delta t$.Design Icons325,11713
\htmladdimg{NewItem147.png}Defining flows741,26683
is a neater way to define flows. Copying Godley Table input outputs817,29386
next section. Using Time Constants845,30276
obvious in the \htmlref{tutorial}{tutorial}.Multiple banks869,31181

intrusiveMap.h,3422
#define INTRUSIVEMAP_HINTRUSIVEMAP_H20,731
namespace minskyminsky25,809
  struct KeyAssertionKeyAssertion28,849
    KeyAssertion() {} // why?KeyAssertion30,875
    KeyAssertion(const K& id) {}KeyAssertion31,905
  struct KeyAssertion<int>KeyAssertion35,958
    KeyAssertion() {} // why?KeyAssertion37,989
    KeyAssertion(int id) {assert(id>=0);}KeyAssertion38,1019
  struct IntrusiveWrap: public ValIntrusiveWrap43,1104
    const Key m_id;m_id45,1143
    Key id() const {return m_id;};id48,1241
    IntrusiveWrap(const Key& id, const Val& v=Val()): Val(v), m_id(id)IntrusiveWrap49,1276
    bool operator<(const IntrusiveWrap& x) const {operator <51,1378
    IntrusiveWrap& operator=(const Val& v) {operator =54,1461
    IntrusiveWrap& operator=(IntrusiveWrap& v) {operator =58,1557
  class IntrusiveMap: public std::set<IntrusiveWrap<Key, Val> >IntrusiveMap72,1857
    typedef std::set<IntrusiveWrap<Key, Val> > Super; Super74,1925
    typedef typename Super::const_iterator const_iterator;const_iterator76,1990
    typedef typename Super::value_type value_type;value_type77,2049
    typedef Key key_type;key_type78,2100
    typedef Val mapped_type;mapped_type79,2126
    struct iterator: public Super::const_iteratoriterator82,2217
      iterator() {}iterator84,2273
      iterator(const_iterator it): const_iterator(it) {}iterator85,2293
      value_type& operator*() {operator *86,2350
      value_type* operator->() {operator ->89,2466
      const value_type& operator*() const {operator *92,2536
      const value_type* operator->() const {operator ->95,2664
    iterator begin() {return iterator(Super::begin());}begin100,2753
    const_iterator begin() const {return Super::begin();}begin101,2809
    iterator end() {return iterator(Super::end());}end103,2868
    const_iterator end() const {return Super::end();}end104,2920
    iterator find(const Key& k) {return iterator(Super::find(value_type(k)));}find106,2975
    const_iterator find(const Key& k) const {return Super::find(value_type(k));}find107,3054
    size_t count(const Key& k) const {return Super::count(value_type(k));}count109,3136
    std::pair<iterator, bool> insert(const value_type& x) {insert111,3212
    void insert(I1 i1, I2 i2) {Super::insert(i1,i2);}insert117,3426
    void insert(const Key& k, const Val& v)insert119,3491
    value_type& operator[](const Key& k) {operator []122,3567
    value_type operator[](const Key& k) const {operator []129,3763
    void swap(IntrusiveMap& x) {Super::swap(x);}swap137,3933
    std::set<Key> keys() const {keys139,3983
namespace ecolabecolab156,4284
  inline void keys_of(const minsky::IntrusiveMap<K,T>& o)keys_of161,4458
namespace classdesc_accessclassdesc_access173,4703
  struct access_pack<minsky::IntrusiveMap<K, V> >access_pack178,4789
    void operator()(cd::pack_t& b, const cd::string& d, T& a)operator ()181,4866
  struct access_unpack<minsky::IntrusiveMap<K, V> >access_unpack193,5123
    void insert(T& a, const U& v) {a.insert(v);}insert196,5211
    void insert(const T& a, const U& v) {}insert198,5292
    void operator()(cd::pack_t& b, const cd::string& d, T& a)operator ()201,5359
  template <class K, class T> struct access_TCL_obj<minsky::IntrusiveMap<K,T> >access_TCL_obj217,5697
    void operator()(ecolab::TCL_obj_t& targ, const classdesc::string& desc, operator ()220,5804

GUI/note.h,240
#define NOTE_HNOTE_H21,724
namespace minskyminsky27,816
  struct NoteNote29,835
    std::string detailedText, tooltip;detailedText32,906
    std::string detailedText, tooltip;tooltip32,906
    std::vector<int> ports;ports33,945

GUI/clickType.h,457
#define CLICKTYPE_HCLICKTYPE_H21,729
namespace minskyminsky27,818
  struct ClickTypeClickType32,1002
    enum Type {onItem, onPort, outside};Type34,1025
    enum Type {onItem, onPort, outside};onItem34,1025
    enum Type {onItem, onPort, outside};onPort34,1025
    enum Type {onItem, onPort, outside};outside34,1025
  constexpr float portRadius=3;portRadius38,1119
  ClickType::Type clickType(Item& item, float x, float y)clickType43,1309

GUI/wire.h,467
#define WIRE_HWIRE_H20,723
namespace minskyminsky28,835
  class Wire: public NoteWire30,854
    ecolab::array<float> m_coords;m_coords32,884
    virtual int id() const {return -1;}id36,989
    int from, to;from39,1063
    int from, to;to39,1063
    bool operator<(const Wire& x) const {operator <41,1109
    bool visible; ///<whether wire is visible on Canvas visible44,1214
    int group;group45,1271
    Wire(int from=0, int to=0, Wire51,1427

GUI/zoom.h,131
#define ZOOM_HZOOM_H21,724
namespace minskyminsky23,740
  inline void zoom(float& val, float origin, float factor)zoom26,793

GUI/geometry.h,1504
#define GEOMETRY_HGEOMETRY_H23,790
#define M_PI	M_PI31,996
namespace minskyminsky34,1041
  typedef boost::geometry::model::d2::point_xy<float> Point;Point36,1060
  typedef boost::geometry::model::ring<Point> Polygon;Polygon37,1121
  typedef boost::geometry::model::box<Point> Rectangle;Rectangle38,1176
  static const float M_PI = 3.1415926535f;M_PI41,1246
  operator+=( Polygon& c, Point v )operator +=48,1485
  class RotateRotate56,1772
    float angle; // in radiansangle58,1791
    float ca, sa;ca59,1822
    float ca, sa;sa59,1822
    float x0, y0;x060,1840
    float x0, y0;y060,1840
    Rotate(float rot, float x0, float y0):Rotate62,1868
    Point operator()(float x1, float y1) const {operator ()65,2013
    Point operator()(const Point& p) const {return operator()(p.x(), p.y());}operator ()67,2102
    float x(float x, float y) const {return ca*(x-x0)-sa*(y-y0)+x0;}x68,2180
    float y(float x, float y) const {return sa*(x-x0)+ca*(y-y0)+y0;}y69,2249
  class ReflectReflect73,2392
    float xx, xy, yx, yy; // matrix componentsxx75,2412
    float xx, xy, yx, yy; // matrix componentsxy75,2412
    float xx, xy, yx, yy; // matrix componentsyx75,2412
    float xx, xy, yx, yy; // matrix componentsyy75,2412
    float x0, y0;x076,2459
    float x0, y0;y076,2459
    Reflect(float angle=0, float x0=0, float y0=1): x0(x0), y0(y0) {Reflect78,2487
    float x(float x, float y) const {x87,2786
    float y(float x, float y) const {y90,2867

GUI/SVGItem.cc,222
namespace minskyminsky49,1745
  void SVGRenderer::setResource(const std::string& resource)setResource52,1766
  SVGRenderer::~SVGRenderer()~SVGRenderer70,2252
  void SVGRenderer::render(cairo_t* cairo)render76,2352

GUI/variable.cc,2008
void VariablePorts::addPorts()addPorts32,936
void VariablePorts::delPorts()delPorts41,1149
void VariablePorts::swapPorts(VariablePorts& v)swapPorts48,1306
void VariablePorts::toggleInPort()toggleInPort55,1478
VariableBase* VariableBase::create(VariableType::Type type)create70,1738
string VariableBase::valueId() const valueId86,2298
string VariableBase::name()  constname91,2393
string VariableBase::fqName()  constfqName98,2493
string VariableBase::name(const std::string& name) name109,2764
void VariableBase::ensureValueExists() constensureValueExists136,3336
void VariableBase::setScope(int s)setScope146,3637
string VariableBase::init() constinit154,3796
string VariableBase::init(const string& x)init163,3989
double VariableBase::value() constvalue174,4323
double VariableBase::value(double x)value179,4436
namespace minskyminsky187,4568
template <> size_t Variable<VariableBase::undefined>::numPorts() const {return 0;}numPorts189,4587
template <> size_t Variable<VariableBase::constant>::numPorts() const {return 1;}numPorts190,4670
template <> size_t Variable<VariableBase::parameter>::numPorts() const {return 1;}numPorts191,4752
template <> size_t Variable<VariableBase::flow>::numPorts() const {return 2;}numPorts192,4835
template <> size_t Variable<VariableBase::stock>::numPorts() const {return 1;}numPorts193,4913
template <> size_t Variable<VariableBase::tempFlow>::numPorts() const {return 2;}numPorts194,4992
template <> size_t Variable<VariableBase::integral>::numPorts() const numPorts195,5074
void VariablePorts::move(float dx, float dy) move202,5180
ecolab::array<int> VariablePorts::ports() const ports215,5385
void VariableBase::zoom(float xOrigin, float yOrigin,float factor)zoom224,5559
void VariablePtr::retype(VariableBase::Type type) retype242,5878
void VariableBase::initSliderBounds()initSliderBounds255,6199
void VariableBase::adjustSliderBounds()adjustSliderBounds276,6584
int VarConstant::nextId=0;nextId282,6717

GUI/opVarBaseAttributes.h,947
#define OPVARBASEATTRIBUTES_HOPVARBASEATTRIBUTES_H23,780
namespace minsky minsky24,810
  struct OpVarBaseAttributes: public NoteOpVarBaseAttributes27,887
    float m_x, m_y; ///< position in canvas, or within groupm_x29,933
    float m_x, m_y; ///< position in canvas, or within groupm_y29,933
    float zoomFactor;zoomFactor30,994
    double rotation; ///< rotation of icon, in degreesrotation31,1016
    int group;group32,1071
    bool mouseFocus; ///<true if target of a mouseovermouseFocus34,1089
    bool selected; ///<true if selected for cut, copy or group operationselected35,1144
    bool visible;visible41,1370
    OpVarBaseAttributes(): m_x(0), m_y(0), zoomFactor(1), rotation(0), OpVarBaseAttributes42,1388
    void moveTo(float x1, float y1) {moveTo53,1763
    virtual void move(float x1, float y1) {move60,1998
    ClickType::Type clickType(float x, float y) {return ClickType::onItem;}clickType63,2072

GUI/SVGItem.h,496
#define SVGITEM_HSVGITEM_H20,726
namespace minskyminsky27,867
  class SVGRendererSVGRenderer29,886
    classdesc::Exclude<RsvgHandle*> svg;svg31,910
    double m_width, m_height;m_width33,986
    double m_width, m_height;m_height33,986
    SVGRenderer() {}SVGRenderer35,1026
    SVGRenderer(const std::string& resource) {setResource(resource);}SVGRenderer36,1047
    double width() const {return m_width;}width44,1350
    double height() const {return m_height;}height45,1393

GUI/equationDisplayItem.cc,215
  struct EquationDisplayItem: public CairoImageEquationDisplayItem32,943
    void draw()draw34,995
  int registerItems()registerItems46,1286
static int dum=(initVec().push_back(registerItems), 0);dum57,1587

GUI/minsky.cc,4653
  const char* schemaURL="http://minsky.sf.net/minsky";schemaURL35,985
  inline bool isFinite(const double y[], size_t n)isFinite37,1041
  int RKfunction(double t, const double y[], double f[], void *params)RKfunction48,1240
  int jacobian(double t, const double y[], double * dfdy, double dfdt[], void * params)jacobian64,1631
namespace minskyminsky82,2103
  struct RKdataRKdata85,2123
    gsl_odeiv2_system sys;sys87,2143
    gsl_odeiv2_driver* driver;driver88,2170
    RKdata(Minsky* minsky) {RKdata89,2201
    ~RKdata() {gsl_odeiv2_driver_free(driver);}~RKdata117,3208
namespace minskyminsky129,3366
  void Minsky::openLogFile(const string& name)openLogFile131,3385
  void Minsky::logVariables() constlogVariables142,3751
  void Minsky::clearAllMaps()clearAllMaps156,4087
  const char* Minsky::minskyVersion=MINSKY_VERSION;minskyVersion183,4845
  int Minsky::addWire(int from, int to, const array<float>& coords) {addWire185,4898
  void Minsky::deleteWire(int id)deleteWire228,6250
  int Minsky::addOperation(const char* o)addOperation242,6533
  int Minsky::copyOperation(int id)copyOperation253,6840
  void Minsky::deleteOperation(int opid)deleteOperation265,7152
  int Minsky::createGroup()createGroup283,7657
  void Minsky::ungroup(int id)ungroup326,8758
  void Minsky::clearSelection()clearSelection333,8872
  void Minsky::select(float x0, float y0, float x1, float y1)select349,9255
  void Minsky::deleteGroup(int i)deleteGroup407,10714
  void Minsky::cut()cut422,11070
  void Minsky::copy() constcopy438,11468
  int Minsky::paste()paste506,13987
  void Minsky::toggleSelected(ItemType itemType, int item)toggleSelected517,14224
  int Minsky::copyGroup(int id)copyGroup523,14352
  int Minsky::insertGroupFromFile(const char* file)insertGroupFromFile534,14623
  array<int> Minsky::unwiredOperations() constunwiredOperations554,15220
  int Minsky::copyVariable(int id)copyVariable567,15542
  void Minsky::garbageCollect()garbageCollect584,15908
  void Minsky::renderEquationsToImage(const char* image)renderEquationsToImage623,16798
  void Minsky::constructEquations()constructEquations633,17092
  std::set<string> Minsky::matchingTableColumns(int currTable, GodleyAssetClass::AssetClass ac)matchingTableColumns673,18280
  void Minsky::importDuplicateColumn(const GodleyTable& srcTable, int srcCol)importDuplicateColumn711,19617
  void Minsky::balanceDuplicateColumns(const GodleyIcon& srcGodley, int srcCol)balanceDuplicateColumns724,20209
  void Minsky::reset()reset822,25055
  void Minsky::step()step849,25809
  string Minsky::diagnoseNonFinite() constdiagnoseNonFinite893,27070
  void Minsky::evalEquations(double result[], double t, const double vars[])evalEquations908,27581
  void Minsky::jacobian(Matrix& jac, double t, const double sv[])jacobian933,28498
  void Minsky::save(const char* filename)save964,29623
  void Minsky::load(const char* filename) load978,29946
  void Minsky::exportSchema(const char* filename, int schemaLevel)exportSchema1041,31807
  int Minsky::opIdOfEvalOp(const EvalOpBase& e) constopIdOfEvalOp1050,32075
  array<int> Minsky::opOrder() constopOrder1061,32320
  void Minsky::zoom(float xOrigin, float yOrigin, float factor)zoom1069,32482
  void Minsky::setZoom(float factor)setZoom1086,33064
  void Minsky::addVariableToGroup(int groupId, int varId, bool checkIOregions)addVariableToGroup1107,33816
  void Minsky::removeVariableFromGroup(int groupId, int varId)removeVariableFromGroup1124,34357
  void Minsky::addOperationToGroup(int groupId, int opId)addOperationToGroup1142,34972
  void Minsky::removeOperationFromGroup(int groupId, int opId)removeOperationFromGroup1159,35498
  bool Minsky::addGroupToGroup(int destGroup, int groupId)addGroupToGroup1176,36032
  void Minsky::removeGroupFromGroup(int destGroup, int groupId)removeGroupFromGroup1195,36598
    struct Network: public multimap<int,int>Network1213,37085
      set<int> portsVisited;portsVisited1215,37136
      vector<int> stack;stack1216,37165
      bool followWire(int p)followWire1218,37255
  bool Minsky::cycleCheck() constcycleCheck1242,37976
  bool Minsky::checkEquationOrder() constcheckEquationOrder1263,38724
  void Minsky::displayErrorItem(float x, float y)displayErrorItem1321,40745
  void Minsky::displayErrorItem(const OpVarBaseAttributes& op) constdisplayErrorItem1327,40900
    void Minsky::resetNextId()resetNextId1341,41301
  void Minsky::pushHistoryIfDifferent()pushHistoryIfDifferent1354,41948
  void Minsky::pushHistory()pushHistory1367,42329
  void Minsky::undo(int changes)undo1376,42527

GUI/godley.tcl,1305
proc accountingRules {accountType prefix} {accountingRules32,1241
proc accountingColor {accountType prefix} {accountingColor38,1435
proc createGodleyWindow {id} {createGodleyWindow44,1634
proc updateDEmode args {updateDEmode105,3336
proc parse_input {input p v} {parse_input115,3539
proc updateGodleyTitle {id} {updateGodleyTitle154,4475
proc setGetCell {id r c i s w} {setGetCell163,4685
proc setGetCell_ {id r c i s w} {setGetCell_168,4778
proc openGodley {id} {openGodley299,8079
proc addRow {id r} {addRow306,8235
proc delRow {id r} {delRow315,8471
proc addCol {id c} {addCol323,8612
proc delCol {id c} {delCol331,8759
proc moveRow {id row n} {moveRow339,8910
proc moveCol {id col n} {moveCol347,9074
proc currCell {id rowOrCol} {currCell356,9305
proc moveCell {id} {moveCell360,9451
proc finishMoveCell {id} {finishMoveCell380,10091
proc updateGodleys {} {updateGodleys398,10744
proc updateGodleysDisplay {} {updateGodleysDisplay406,10851
proc updateGodley {id} {updateGodley415,11095
proc columnVarTrace {id col varName args} {columnVarTrace424,11342
proc whenIdleUpdateGodley {id} {whenIdleUpdateGodley435,11671
proc updateGodleyDisplay {id} {updateGodleyDisplay529,15785
proc whenIdleUpdateGodleyDisplay {id} {whenIdleUpdateGodleyDisplay538,16046

GUI/variable.h,2557
#define VARIABLE_HVARIABLE_H20,727
namespace minskyminsky41,1118
  class VariableBase: public classdesc::PolyBase<VariableType::Type>,VariableBase46,1182
    typedef VariableType::Type Type;Type52,1436
    std::string m_name; m_name59,1576
    int m_scope=-1;m_scope62,1682
    virtual std::string uqName() const {return m_name;}uqName79,2117
    int scope() const {return m_scope;}scope91,2537
    void setZoom(float factor) {zoomFactor=factor;}setZoom98,2879
    void sliderSet(double x) {init(str(x)); value(x);}sliderSet110,3304
    bool lhs() const {return numPorts()==2;} lhs116,3536
    bool temp() const {return type()==tempFlow || type()==undefined;}temp118,3612
    VariableBase() {}VariableBase122,3761
    virtual ~VariableBase() {}~VariableBase123,3783
    ClickType::Type clickType(double x, double y) const {clickType137,4239
  class VariablePorts: public VariableBaseVariablePorts145,4454
    int m_outPort, m_inPort; m_outPort148,4522
    int m_outPort, m_inPort; m_inPort148,4522
    VariablePorts(): m_outPort(-1), m_inPort(-1) {}VariablePorts154,4673
    ~VariablePorts() {delPorts();}~VariablePorts155,4725
    VariablePorts(const VariablePorts& x): VariableBase(x) {addPorts();}VariablePorts157,4761
    VariablePorts& operator=(const VariablePorts& x) {operator =158,4834
    int outPort() const {return m_outPort;}outPort166,5028
    int inPort() const {return m_inPort;}inPort167,5072
  class Variable: public VariablePorts, public classdesc::PolyPack<Variable<T> >Variable174,5253
    typedef VariableBase::Type Type;Type177,5348
    Type type() const {return T;}type178,5385
    size_t numPorts() const override;override179,5419
    Variable(const std::string& name="") {this->name(name); this->addPorts();}Variable181,5458
    Variable(const Variable& x) {*this=x;} // ensures addPorts correctly calledVariable182,5537
  struct VarConstant: public Variable<VariableType::constant>VarConstant187,5745
    int id;id189,5811
    static int nextId;nextId190,5823
    VarConstant(): id(nextId++) {ensureValueExists();}VarConstant191,5846
  class VariablePtr: VariablePtr201,6316
    typedef classdesc::shared_ptr<VariableBase> PtrBase;PtrBase204,6389
    virtual int id() const {return -1;}id206,6456
    VariablePtr(VariableBase::Type type=VariableBase::undefined, VariablePtr207,6496
    VariablePtr(P* var): PtrBase(dynamic_cast<VariableBase*>(var)) VariablePtr211,6694
    VariablePtr(const VariableBase& x): PtrBase(x.clone()) {}VariablePtr216,6848

GUI/library/help/minsky/node33.html,79
<H3><A NAME="SECTION00246100000000000000">SECTION0024610000000000000052,1718

GUI/library/help/minsky/node27.html,79
<H2><A NAME="SECTION00243000000000000000">SECTION0024300000000000000052,1710

GUI/library/help/minsky/node42.html,107
<H2><A NAME="SECTION00322000000000000000"></A><A NAME="tut:money"></A>SECTION0032200000000000000051,1646

GUI/library/help/minsky/node36.html,136
<H3><A NAME="SECTION00246400000000000000"></A>SECTION0024640000000000000052,1708
<A NAME="time-constants"></A>time-constants53,1755

GUI/library/help/minsky/node19.html,130
<H2><A NAME="SECTION00235000000000000000"></A>SECTION0023500000000000000052,1671
<A NAME="Speedslider"></A>Speedslider53,1718

GUI/library/help/minsky/node39.html,79
<H1><A NAME="SECTION00310000000000000000">SECTION0031000000000000000052,1687

GUI/library/help/minsky/node40.html,191
<H1><A NAME="SECTION00320000000000000000"></A><A NAME="tut:basicBankModel"></A>SECTION0032000000000000000052,1685
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>CHILD_LINKS67,2167

GUI/library/help/minsky/node57.html,79
<H1><A NAME="SECTION00500000000000000000">SECTION0050000000000000000052,1707

GUI/library/help/minsky/node2.html,154
<H1><A NAME="SECTION00110000000000000000">SECTION0011000000000000000052,1643
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>CHILD_LINKS59,1746

GUI/library/help/minsky/node55.html,79
<H1><A NAME="SECTION00480000000000000000">SECTION0048000000000000000052,1661

GUI/library/help/minsky/node12.html,429
<H3><A NAME="SECTION00231200000000000000"></A>SECTION0023120000000000000052,1620
<A NAME="Edit"></A>Edit53,1667
<LI><A NAME="edit:undo"></A> Undo and Redo allow you to step back and forward in your editingedit:undo61,1714
<LI><A NAME="edit:copy"></A> Cut/copy/paste. Selecting, or lassoing a regionedit:copy67,1944
<LI><A NAME="edit:group"></A> Create a <A HREF="node51.html#group">group</A> using theedit:group82,2768

GUI/library/help/minsky/node58.html,154
<H1><A NAME="SECTION00600000000000000000">SECTION0060000000000000000051,1644
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>CHILD_LINKS58,1744

GUI/library/help/minsky/node15.html,128
<H3><A NAME="SECTION00231500000000000000"></A>SECTION0023150000000000000051,1605
<A NAME="RungeKutta"></A>RungeKutta52,1652

GUI/library/help/minsky/node20.html,122
<H2><A NAME="SECTION00236000000000000000"></A>SECTION0023600000000000000052,1674
<A NAME="SimTime"></A>SimTime53,1721

GUI/library/help/minsky/node35.html,79
<H3><A NAME="SECTION00246300000000000000">SECTION0024630000000000000052,1738

GUI/library/help/minsky/node31.html,79
<H3><A NAME="SECTION00245200000000000000">SECTION0024520000000000000051,1656

GUI/library/help/minsky/node41.html,79
<H2><A NAME="SECTION00321000000000000000">SECTION0032100000000000000052,1680

GUI/library/help/minsky/node10.html,191
<H2><A NAME="SECTION00231000000000000000"></A>SECTION0023100000000000000052,1654
<A NAME="Menu"></A>Menu53,1701
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>CHILD_LINKS71,2068

GUI/library/help/minsky/node50.html,79
<H1><A NAME="SECTION00430000000000000000">SECTION0043000000000000000052,1630

GUI/library/help/minsky/node24.html,154
<H1><A NAME="SECTION00240000000000000000">SECTION0024000000000000000051,1635
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>CHILD_LINKS58,1750

GUI/library/help/minsky/node17.html,130
<H2><A NAME="SECTION00233000000000000000"></A>SECTION0023300000000000000052,1667
<A NAME="ModeButtons"></A>ModeButtons53,1714

GUI/library/help/minsky/node28.html,79
<H2><A NAME="SECTION00244000000000000000">SECTION0024400000000000000052,1713

GUI/library/help/minsky/node23.html,118
<H2><A NAME="SECTION00239000000000000000"></A>SECTION0023900000000000000051,1625
<A NAME="Wires"></A>Wires52,1672

GUI/library/help/minsky/node13.html,120
<H3><A NAME="SECTION00231300000000000000"></A>SECTION0023130000000000000052,1625
<A NAME="Insert"></A>Insert53,1672

GUI/library/help/minsky/node21.html,433
<H2><A NAME="SECTION00237000000000000000">SECTION0023700000000000000052,1672
 ALT="257">. <A NAME="GodleyTable"></A> This is theGodleyTable71,2062
 ALT="263">. <A NAME="Variable"></A> This creates an entityVariable102,2885
 ALT="266"> <A NAME="Constant"></A> creates an entity whoseConstant129,3750
 ALT="272">.<A NAME="Integrate"></A>  This inserts a variable whose value depends on the integral of otherIntegrate185,5478

GUI/library/help/minsky/node54.html,104
<H1><A NAME="SECTION00470000000000000000"></A><A NAME="godley"></A>SECTION0047000000000000000052,1656

GUI/library/help/minsky/node59.html,142
<H1><A NAME="SECTION00610000000000000000"></A>SECTION0061000000000000000046,1480
<A NAME="faq:no-difference"></A>faq:no-difference47,1527

GUI/library/help/minsky/node51.html,103
<H1><A NAME="SECTION00440000000000000000"></A><A NAME="group"></A>SECTION0044000000000000000052,1635

GUI/library/help/minsky/node53.html,119
<H1><A NAME="SECTION00460000000000000000"></A>SECTION0046000000000000000052,1653
 <A NAME="Notes"></A>Notes53,1700

GUI/library/help/minsky/node56.html,79
<H1><A NAME="SECTION00490000000000000000">SECTION0049000000000000000051,1639

GUI/library/help/minsky/node16.html,128
<H2><A NAME="SECTION00232000000000000000"></A>SECTION0023200000000000000052,1665
<A NAME="RunButtons"></A>RunButtons53,1712

GUI/library/help/minsky/node37.html,79
<H3><A NAME="SECTION00246500000000000000">SECTION0024650000000000000051,1643

GUI/library/help/minsky/node43.html,79
<H1><A NAME="SECTION00330000000000000000">SECTION0033000000000000000051,1634

GUI/library/help/minsky/node9.html,155
<H1><A NAME="SECTION00230000000000000000">SECTION0023000000000000000052,1673
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>CHILD_LINKS119,2524

GUI/library/help/minsky/node11.html,198
<H3><A NAME="SECTION00231100000000000000"></A>SECTION0023110000000000000052,1618
<A NAME="File"></A>File53,1665
<DD><A NAME="recentfiles"></A> Provides a shortcut to some ofrecentfiles76,2034

GUI/library/help/minsky/node7.html,79
<H1><A NAME="SECTION00210000000000000000">SECTION0021000000000000000052,1668

GUI/library/help/minsky/node22.html,132
<H2><A NAME="SECTION00238000000000000000"></A>SECTION0023800000000000000052,1663
<A NAME="DesignCanvas"></A>DesignCanvas53,1710

GUI/library/help/minsky/index.html,47
<A NAME="CHILD_LINKS"></A>CHILD_LINKS42,1358

GUI/library/help/minsky/node29.html,223
<H2><A NAME="SECTION00245000000000000000"></A>SECTION0024500000000000000052,1706
<A NAME="creatingBankingModel"></A>creatingBankingModel53,1753
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>CHILD_LINKS61,1867

GUI/library/help/minsky/node25.html,79
<H2><A NAME="SECTION00241000000000000000">SECTION0024100000000000000052,1703

GUI/library/help/minsky/node34.html,79
<H3><A NAME="SECTION00246200000000000000">SECTION0024620000000000000052,1705

GUI/library/help/minsky/node6.html,154
<H1><A NAME="SECTION00200000000000000000">SECTION0020000000000000000052,1675
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>CHILD_LINKS59,1786

GUI/library/help/minsky/node8.html,79
<H1><A NAME="SECTION00220000000000000000">SECTION0022000000000000000052,1671

GUI/library/help/minsky/node38.html,181
<H1><A NAME="SECTION00300000000000000000"></A><A NAME="tutorial"></A>SECTION0030000000000000000052,1678
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>CHILD_LINKS60,1810

GUI/library/help/minsky/node14.html,241
<H3><A NAME="SECTION00231400000000000000"></A>SECTION0023140000000000000052,1633
<A NAME="Options"></A>Options53,1680
<LI><A NAME="wrap-equations"></A> Wrap long equations in LaTeX export. If ticked, use the breqnwrap-equations81,2560

GUI/library/help/minsky/node48.html,106
<H2><A NAME="SECTION00422000000000000000"></A><A NAME="var:init"></A>SECTION0042200000000000000052,1664

GUI/library/help/minsky/node49.html,79
<H2><A NAME="SECTION00423000000000000000">SECTION0042300000000000000051,1607

GUI/library/help/minsky/minsky.html,47
<A NAME="CHILD_LINKS"></A>CHILD_LINKS42,1392

GUI/library/help/minsky/node46.html,154
<H1><A NAME="SECTION00420000000000000000">SECTION0042000000000000000052,1649
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>CHILD_LINKS98,3183

GUI/library/help/minsky/node26.html,79
<H2><A NAME="SECTION00242000000000000000">SECTION0024200000000000000052,1711

GUI/library/help/minsky/node1.html,207
<H1><A NAME="SECTION00100000000000000000"></A>SECTION0010000000000000000052,1667
<A NAME="Introduction"></A>Introduction53,1714
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>CHILD_LINKS61,1808

GUI/library/help/minsky/node4.html,142
<H2><A NAME="SECTION00112000000000000000"></A>SECTION0011200000000000000051,1654
<A NAME="intro:experienced"></A>intro:experienced52,1701

GUI/library/help/minsky/node52.html,116
<H1><A NAME="SECTION00450000000000000000"></A>SECTION0045000000000000000052,1646
<A NAME="Plot"></A>Plot53,1693

GUI/library/help/minsky/node30.html,79
<H3><A NAME="SECTION00245100000000000000">SECTION0024510000000000000052,1693

GUI/library/help/minsky/node5.html,79
<H1><A NAME="SECTION00120000000000000000">SECTION0012000000000000000051,1630

GUI/library/help/minsky/node45.html,1826
<H1><A NAME="SECTION00410000000000000000"></A><A NAME="operations"></A>SECTION0041000000000000000052,1645
<DD><A NAME="op:add"></A> Add multiple numbers together. The input ports allowop:add60,1779
<DD><A NAME="op:subtract"></A> Subtract two numbers. The input portsop:subtract67,2011
<DD><A NAME="op:multiply"></A> Multiple numbers with each other. The input portsop:multiply76,2392
<DD><A NAME="op:divide"></A> Divide a number by another. The input ports allowop:divide83,2642
<DD><A NAME="op:pow"></A> Raise one number to the power of another. Theop:pow92,3025
<DD><A NAME="op:log"></A> Take the logarithm of the <IMGop:log107,3443
<DD><A NAME="op:time"></A> Returns the current value of system time.op:time126,4019
<DD><A NAME="op:copy"></A> This just copies its input to its output,op:copy131,4130
<DD><A NAME="op:integrate"></A> Creates an integration (or stock)op:integrate138,4322
<DD><A NAME="op:data"></A> A data interpolation widget. Currently, theop:data148,4600
<DD><A NAME="op:sqrt"></A> Square root of the inputop:sqrt213,6200
<DD><A NAME="op:exp"></A> Exponential of the inputop:exp218,6293
<DD><A NAME="op:ln"></A> Natural logarithmop:ln223,6384
<DD><A NAME="op:sin"></A> sine functionop:sin228,6468
<DD><A NAME="op:cos"></A> cosine functionop:cos231,6544
<DD><A NAME="op:tan"></A> tangent functionop:tan234,6622
<DD><A NAME="op:asin"></A> Arc sine, inverse of sineop:asin237,6702
<DD><A NAME="op:acos"></A> Arc cosine, inverse of cosineop:acos240,6792
<DD><A NAME="op:atan"></A> Arc tangent, inverse of tangentop:atan243,6886
<DD><A NAME="op:sinh"></A> hyperbolic sine function <!-- MATHop:sinh246,6982
<DD><A NAME="op:cosh"></A> hyperbolic cosine function <!-- MATHop:cosh255,7209
<DD><A NAME="op:tanh"></A> hyperbolic tangent function <!-- MATHop:tanh264,7438

GUI/library/help/minsky/node32.html,154
<H2><A NAME="SECTION00246000000000000000">SECTION0024600000000000000051,1672
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>CHILD_LINKS85,2596

GUI/library/help/minsky/node3.html,126
<H2><A NAME="SECTION00111000000000000000"></A>SECTION0011100000000000000052,1677
<A NAME="intro:new"></A>intro:new53,1724

GUI/library/help/minsky/node18.html,130
<H2><A NAME="SECTION00234000000000000000"></A>SECTION0023400000000000000052,1668
<A NAME="ZoomButtons"></A>ZoomButtons53,1715

GUI/library/help/minsky/node47.html,79
<H2><A NAME="SECTION00421000000000000000">SECTION0042100000000000000052,1662

GUI/library/help/minsky/node44.html,154
<H1><A NAME="SECTION00400000000000000000">SECTION0040000000000000000052,1670
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>CHILD_LINKS59,1775

GUI/library/help/minsky.html,45
      function setContent()setContent8,203

GUI/library/Xecolab.tcl,76
proc mem_avail {} {return "[lindex [exec vmstat] 24]KB"}mem_avail135,3433

GUI/library/init.tcl,360
proc use {name} {use1,0
	proc $procname {args} "eval $name \$args"$procname5,144
proc savebgerror {} {savebgerror11,291
        proc bgerror x {puts stdout $x}bgerror14,433
proc restorebgerror {} {restorebgerror18,482
	proc bgerror {} {}  bgerror20,553
proc use_namespace {name} {use_namespace26,628
proc unknown {procname args} {unknown32,820

GUI/library/tooltip.tcl,764
proc ::tooltip::tooltip {w args} {::tooltip::tooltip100,2669
proc ::tooltip::register {w args} {::tooltip::register159,4060
proc ::tooltip::clear {{pattern .*}} {::tooltip::clear229,6081
proc ::tooltip::show {w msg {i {}}} {::tooltip::show249,6680
proc ::tooltip::menuMotion {w} {::tooltip::menuMotion318,8975
proc ::tooltip::hide {{fadeOk 0}} {::tooltip::hide344,9728
proc ::tooltip::fade {w step} {::tooltip::fade356,9956
proc ::tooltip::wname {{w {}}} {::tooltip::wname367,10295
proc ::tooltip::itemTip {w args} {::tooltip::itemTip380,10522
proc ::tooltip::enableCanvas {w args} {::tooltip::enableCanvas392,10815
proc ::tooltip::tagTip {w tag} {::tooltip::tagTip400,11159
proc ::tooltip::enableTag {w tag} {::tooltip::enableTag411,11496

GUI/library/Xecolab/histogram.tcl,447
proc histogram {name args} {histogram4,19
	    proc setnbins {x} {setnbins8,116
	    proc xlogscale {} {xlogscale16,349
	    proc ylogscale {} {ylogscale31,762
	    proc fmttick {name val} {fmttick43,1138
	    proc outputdata {} {outputdata47,1208
	    proc print {{filename histogram.ps } {options ""}} {print55,1417
	    proc histogram {name argl} {histogram60,1579
			proc $procname {args} "eval $comm \$args"$procname80,2169

GUI/library/Xecolab/plot.tcl,268
proc plot {name args} {plot3,27
	    proc fmttick {name val} {fmttick7,149
	    proc init {name title} {init11,219
	    proc clear {} {clear40,1162
	    proc print {{filename plot.ps } {options ""}} {print48,1369
	    proc plot {name arglist} {plot53,1528

GUI/library/Xecolab/connect.tcl,159
proc connect_plot {args} {connect_plot3,33
	    proc print {{filename plot.ps } {options ""}} {print80,2305
	    proc update_size {} {update_size86,2485

GUI/library/Xecolab/obj-browser.tcl,689
proc read_select {browser} {read_select3,59
proc update_browser {browser} {update_browser23,611
proc repeat {freq cmd} {repeat65,1766
proc repeat_plot {obj_browse lead varname} {repeat_plot72,1857
proc obj_browser {{pat *} {ns ""}} {obj_browser82,2131
	proc [set $obj_browse.lead]\#value {args} \[set132,4270
proc browse_vector {name} {browse_vector186,5993
proc browse_deque {name} {browse_vector $name}browse_deque199,6501
proc browse_list {name} {browse_vector $name}browse_list200,6548
proc browse_set {name} {browse_vector $name}browse_set201,6594
proc getCurrentSelection {name sel_idx} {getCurrentSelection203,6640
proc browse_map {name} {browse_map207,6772

GUI/library/Xecolab/display.tcl,140
proc display {args} {display3,30
	    proc print {{filename display.ps } {options ""}} {print41,1224
	    proc clear {} {clear46,1381

GUI/library/Xecolab/filebrowser.tcl,80
proc browse file {browse1,0
proc get_filename {pattern} {get_filename18,328

GUI/library/Xecolab/netgraph.tcl,125
proc netgraph {name args} {netgraph1,0
	    proc refresh {} {refresh37,1571
	    proc netgraph {args} {netgraph54,2057

GUI/group.tcl,975
proc radian {deg} {radian22,783
proc newGroupItem {id} {newGroupItem28,893
proc rightMouseGroup {id x y X Y} {rightMouseGroup47,1710
proc deleteGroupItem {id} {deleteGroupItem71,2381
proc ungroupGroupItem {id} {ungroupGroupItem76,2449
proc lasso {x y} {lasso81,2514
proc lassoEnd {x y} {lassoEnd92,2826
proc groupContext {id x y} {groupContext109,3297
proc deiconifyEditGroup {} {deiconifyEditGroup131,4656
proc groupEdit {id} {groupEdit162,5907
proc checkAddGroup {item id x y} {checkAddGroup180,6517
    proc resize {id} {resize224,8026
    proc resizeRect {item x y} {resizeRect241,8798
    proc resizeItem {item id x y} {resizeItem253,9214
    proc copy {id} {insertNewGroup [copyGroup $id]}copy281,10243
    proc flip {id} {flip283,10296
    proc flipContents {id} {flipContents295,10582
    proc zoomToDisplay {id} {zoomToDisplay303,10757
    proc button1 {id x y} {button1312,11051
    proc lassoEnd {id x y} {lassoEnd325,11571

GUI/godley.h,1472
#define GODLEY_HGODLEY_H20,725
namespace minskyminsky30,845
  class GodleyTable: public GodleyAssetClassGodleyTable35,919
    vector<vector<string> > data;data42,1051
    vector<AssetClass> m_assetClass;m_assetClass45,1177
    void _resize(unsigned rows, unsigned cols) {_resize48,1274
    bool doubleEntryCompliant;doubleEntryCompliant56,1524
    std::string title;title58,1556
    static const char* initialConditions;initialConditions60,1582
    GodleyTable(): doubleEntryCompliant(false)GodleyTable61,1624
    GodleyTable(const GodleyTable& other)GodleyTable68,1787
    const vector<AssetClass>& _assetClass() const {return m_assetClass;}_assetClass76,2048
    bool signConventionReversed(int col) constsignConventionReversed88,2471
    size_t rows() const {return data.size();}rows105,3030
    size_t cols() const {return data.empty()? 0: data[0].size();}cols106,3076
    void clear() {data.clear(); markEdited();}clear108,3143
    void resize(unsigned rows, unsigned cols){_resize(rows,cols); markEdited();}resize109,3190
    void dimension(unsigned rows, unsigned cols) {clear(); resize(rows,cols);}dimension131,4032
    string& cell(unsigned row, unsigned col) {cell133,4112
    const string& cell(unsigned row, unsigned col) const {return data[row][col];}cell138,4263
    string getCell(unsigned row, unsigned col) const {getCell139,4345
    const vector<vector<string> >& getData() const {return data;}getData159,4990

GUI/cairoItems.cc,4907
#define DISPLAY_POW_UPSIDE_DOWNDISPLAY_POW_UPSIDE_DOWN23,880
  struct TkMinskyItem: public ImageItemTkMinskyItem46,1367
    int id; // identifier of the C++ object this item representsid48,1411
  static Tk_CustomOption tagsOption = {tagsOption51,1482
  struct MinskyItemImage: public CairoImageMinskyItemImage56,1625
    static Tk_ConfigSpec configSpecs[];configSpecs58,1673
  struct OperationItem: public MinskyItemImageOperationItem61,1719
    OperationPtr op;    op63,1770
    cairo_t * cairo;cairo64,1795
    void draw()draw67,1818
  struct VariableItem: public MinskyItemImageVariableItem87,2319
    VariablePtr var;var89,2369
    void draw()draw90,2390
  Tk_ConfigSpec MinskyItemImage::configSpecs[] =configSpecs115,2974
  int operationCreatProc(Tcl_Interp *interp, Tk_Canvas canvas, operationCreatProc131,3593
  int varCreatProc(Tcl_Interp *interp, Tk_Canvas canvas, varCreatProc149,4219
  int configureProc(Tcl_Interp *interp,Tk_Canvas canvas,Tk_Item *itemPtr,configureProc168,4928
  int registerItems()registerItems176,5249
static int dum=(initVec().push_back(registerItems), 0);dum196,5865
void minsky::drawSelected(cairo_t* cairo)drawSelected198,5922
RenderOperation::RenderOperation(const OperationBase& op, cairo_t* cairo):RenderOperation207,6154
Polygon RenderOperation::geom() constgeom258,7373
  struct DrawBinOpDrawBinOp273,7754
    cairo_t *cairo;cairo275,7777
    DrawBinOp(cairo_t *cairo): cairo(cairo) {}DrawBinOp276,7797
    void drawPlus() constdrawPlus278,7845
    void drawMinus() constdrawMinus287,8041
    void drawMultiply() constdrawMultiply294,8173
    void drawDivide() constdrawDivide303,8375
    void drawPort(void (DrawBinOp::*symbol)() const, float x, float y, float rotation)  constdrawPort316,8730
namespace minskyminsky337,9268
  template <> void Operation<OperationType::constant>::iconDraw(cairo_t* cairo) consticonDraw344,9443
  template <> void Operation<OperationType::data>::iconDraw(cairo_t* cairo) consticonDraw349,9577
  template <> void Operation<OperationType::time>::iconDraw(cairo_t* cairo) consticonDraw354,9707
  template <> void Operation<OperationType::copy>::iconDraw(cairo_t* cairo) consticonDraw360,9861
  template <> void Operation<OperationType::integrate>::iconDraw(cairo_t* cairo) consticonDraw366,10015
  template <> void Operation<OperationType::differentiate>::iconDraw(cairo_t* cairo) consticonDraw373,10220
  template <> void Operation<OperationType::sqrt>::iconDraw(cairo_t* cairo) consticonDraw386,10644
  template <> void Operation<OperationType::exp>::iconDraw(cairo_t* cairo) consticonDraw401,11107
  template <> void Operation<OperationType::pow>::iconDraw(cairo_t* cairo) consticonDraw410,11361
  template <> void Operation<OperationType::ln>::iconDraw(cairo_t* cairo) consticonDraw432,11938
  template <> void Operation<OperationType::log>::iconDraw(cairo_t* cairo) consticonDraw438,12092
  template <> void Operation<OperationType::sin>::iconDraw(cairo_t* cairo) consticonDraw454,12556
  template <> void Operation<OperationType::cos>::iconDraw(cairo_t* cairo) consticonDraw461,12746
  template <> void Operation<OperationType::tan>::iconDraw(cairo_t* cairo) consticonDraw468,12936
  template <> void Operation<OperationType::asin>::iconDraw(cairo_t* cairo) consticonDraw475,13126
  template <> void Operation<OperationType::acos>::iconDraw(cairo_t* cairo) consticonDraw486,13453
  template <> void Operation<OperationType::atan>::iconDraw(cairo_t* cairo) consticonDraw497,13780
  template <> void Operation<OperationType::sinh>::iconDraw(cairo_t* cairo) consticonDraw508,14107
  template <> void Operation<OperationType::cosh>::iconDraw(cairo_t* cairo) consticonDraw515,14298
  template <> void Operation<OperationType::tanh>::iconDraw(cairo_t* cairo) consticonDraw522,14489
  template <> void Operation<OperationType::add>::iconDraw(cairo_t* cairo) consticonDraw529,14680
  template <> void Operation<OperationType::subtract>::iconDraw(cairo_t* cairo) consticonDraw537,14921
  template <> void Operation<OperationType::multiply>::iconDraw(cairo_t* cairo) consticonDraw545,15169
  template <> void Operation<OperationType::divide>::iconDraw(cairo_t* cairo) consticonDraw553,15427
  template <> void Operation<OperationType::numOps>::iconDraw(cairo_t* cairo) consticonDraw561,15679
void RenderOperation::draw()draw566,15818
void OperationBase::draw(cairo_t* cairo) constdraw571,15870
RenderVariable::RenderVariable(const VariableBase& var, cairo_t* cairo):RenderVariable791,22685
Polygon RenderVariable::geom() constgeom817,23257
void RenderVariable::draw()draw830,23547
void VariableBase::draw(cairo_t *cairo) constdraw836,23619
void RenderVariable::updatePortLocs()updatePortLocs898,25330
bool RenderVariable::inImage(float x, float y)inImage911,25831
void minsky::drawTriangledrawTriangle920,26111

GUI/slider.h,625
#define SLIDER_HSLIDER_H21,726
namespace minskyminsky22,743
  struct SliderSlider26,859
    bool sliderVisible, ///< slider is visible on canvassliderVisible29,909
      sliderBoundsSet, ///< slider bounds have been initialised at some pointsliderBoundsSet30,966
      sliderStepRel;   /**< sliderStep is relative to the rangesliderStepRel31,1044
    double sliderMin, sliderMax, sliderStep;sliderMin34,1160
    double sliderMin, sliderMax, sliderStep;sliderMax34,1160
    double sliderMin, sliderMax, sliderStep;sliderStep34,1160
    Slider(): sliderVisible(false), sliderBoundsSet(false), Slider35,1205

GUI/godley.cc,1066
const char* GodleyTable::initialConditions="Initial Conditions";initialConditions26,849
void GodleyTable::markEdited()markEdited28,915
bool GodleyTable::initialConditionRow(unsigned row) constinitialConditionRow33,984
void GodleyTable::insertRow(unsigned row)insertRow46,1422
void GodleyTable::insertCol(unsigned col)insertCol55,1586
void GodleyTable::deleteCol(unsigned col)deleteCol70,2050
void GodleyTable::moveRow(int row, int n)moveRow83,2390
void GodleyTable::moveCol(int col, int n)moveCol94,2679
vector<string> GodleyTable::getColumnVariables() constgetColumnVariables109,3058
vector<string> GodleyTable::getVariables() constgetVariables126,3465
GodleyTable::AssetClass GodleyTable::_assetClass(size_t col) const _assetClass141,3869
GodleyTable::AssetClass GodleyTable::_assetClass_assetClass146,4009
string GodleyTable::assetClass(TCL_args args)assetClass157,4260
string GodleyTable::rowSum(int row) constrowSum169,4529
void GodleyTable::setDEmode(bool mode)setDEmode202,5298
void GodleyTable::nameUnique()nameUnique224,6053

GUI/plotWidget.cc,3152
namespace minskyminsky41,1184
    const unsigned numLines = 4; // number of simultaneous variables to plot, on a sidenumLines45,1219
    Plots& plots() {return minsky::minsky().plots;}plots47,1308
    const unsigned nBoundsPorts=6;nBoundsPorts49,1361
    const double orient[nBoundsPorts]={-0.4*M_PI, -0.6*M_PI, -0.2*M_PI, 0.2*M_PI, 1.2*M_PI, 0.8*M_PI};orient51,1437
    const float boundX[nBoundsPorts]={-0.46,0.45,-0.49,-0.49, 0.48, 0.48};boundX53,1583
    const float boundY[nBoundsPorts]={0.49,0.49,0.47,-0.49, 0.47, -0.49};boundY55,1701
    const double titleHeight=0.07;titleHeight58,1839
    struct SetTicksAndFontSizeSetTicksAndFontSize61,1951
      PlotWidget& p;p63,1988
      int nxTicks, nyTicks;nxTicks64,2009
      int nxTicks, nyTicks;nyTicks64,2009
      double fontScale;fontScale65,2037
      bool subgrid;subgrid66,2061
      SetTicksAndFontSize(PlotWidget& p, bool override, int n, double f, bool g):SetTicksAndFontSize67,2081
      ~SetTicksAndFontSize()~SetTicksAndFontSize78,2419
    struct TkMinskyItem: public ImageItemTkMinskyItem88,2650
      int id; // identifier of the C++ object this item representsid90,2698
    static Tk_CustomOption tagsOption = {tagsOption93,2773
    struct MinskyItemImage: public CairoImageMinskyItemImage98,2924
      static Tk_ConfigSpec configSpecs[];configSpecs100,2976
    Tk_ConfigSpec MinskyItemImage::configSpecs[] =configSpecs106,3155
  struct PlotItem: public MinskyItemImagePlotItem117,3455
    PlotWidget* pw; // weak ref to plotWidget controlling this itempw119,3501
    PlotItem(): pw(0) {}PlotItem120,3569
    void init(int id, Tk_Canvas canvas)init121,3594
    void draw()draw126,3694
    int creatProc(Tcl_Interp *interp, Tk_Canvas canvas, creatProc139,3911
  int configureProc(Tcl_Interp *interp,Tk_Canvas canvas,Tk_Item *itemPtr,configureProc160,4637
    int registerPlotItem()registerPlotItem172,5058
  static int reg=(initVec().push_back(registerPlotItem), 0);reg190,5498
  PlotWidget::PlotWidget()PlotWidget192,5560
  PlotWidget::~PlotWidget()~PlotWidget201,5703
  void PlotWidget::assignPorts()assignPorts206,5767
  void PlotWidget::draw(cairo::Surface& cairoSurface)draw236,6738
  void PlotWidget::draw(cairo_t* cairo) constdraw249,7165
  void PlotWidget::deletePorts()deletePorts343,10278
  void PlotWidget::moveTo(float x1, float y1)moveTo350,10395
  void PlotWidget::scalePlot()scalePlot359,10592
  void PlotWidget::redraw()redraw380,11210
  static ptime epoch=microsec_clock::local_time(), accumulatedBlitTime=epoch;epoch427,13049
  static ptime epoch=microsec_clock::local_time(), accumulatedBlitTime=epoch;accumulatedBlitTime427,13049
  void PlotWidget::addPlotPt(double t)addPlotPt429,13128
  static VariableValue disconnected;disconnected472,14484
  constexpr float PlotWidget::rotation;rotation473,14521
  void PlotWidget::connectVar(const VariableValue& var, unsigned port)connectVar475,14562
  void PlotWidget::updatePortLocation()updatePortLocation502,15241
  void Plots::addImage(int id, const string& image) addImage535,16108
  void Plots::reset()reset543,16316

GUI/inGroupTest.cc,433
InGroup::Cell::Cell(int id, const GroupIcon& g): Cell26,810
  void excludeSelfAndChildren(set<int>& excludeIds, excludeSelfAndChildren39,1100
void InGroup::initGroupList(const IntrusiveMap<int, GroupIcon>& g, int exclude)initGroupList51,1431
int InGroup::containingGroup(float x, float y) constcontainingGroup95,2973
int InGroup::groupContainingBoth(float x0, float y0, float x1, float y1) constgroupContainingBoth109,3418

GUI/portManager.h,786
#define PORTMANAGER_HPORTMANAGER_H20,730
namespace minskyminsky31,925
  struct PMMap: private IntrusiveMap<int,T>PMMap36,1060
    typedef IntrusiveMap<int,T> Super;Super42,1204
    T& operator[](int x) {operator []58,1665
    const T& operator[](int x) const {operator []63,1816
    void TCL_obj(classdesc::TCL_obj_t& t, const classdesc::string& d) {TCL_obj68,1979
  class PortManagerPortManager73,2112
    typedef PMMap<Port> Ports;Ports77,2147
    typedef PMMap<Wire> Wires;Wires78,2178
    Ports ports;ports79,2209
    Wires wires;wires80,2226
    void movePort(int port, float dx, float dy) {movePort91,2493
    void clear() {wires.clear(); ports.clear();}clear114,3250
void TCL_obj(classdesc::TCL_obj_t& t, const classdesc::string& d, TCL_obj136,3805

GUI/operation.h,4842
#define OPERATION_HOPERATION_H20,728
namespace minskyminsky42,1134
  class OperationBase: public classdesc::PolyBase<minsky::OperationType::Type>,OperationBase49,1263
    static constexpr float l=-8, h=12, r=12;l55,1529
    static constexpr float l=-8, h=12, r=12;h55,1529
    static constexpr float l=-8, h=12, r=12;r55,1529
    typedef OperationType::Type Type;Type56,1574
    const vector<int>& ports() const {return m_ports;}ports58,1613
    size_t numPorts() const  {return m_ports.size();}numPorts59,1668
    OperationBase() {}OperationBase66,1980
    OperationBase(const OpVarBaseAttributes& attr): OpVarBaseAttributes(attr) {}OperationBase67,2003
    OperationBase(const vector<int>& ports): m_ports(ports) {}OperationBase68,2084
    virtual ~OperationBase() {}~OperationBase69,2147
    string name() const {return typeName(type());}name75,2342
    static string opName(int i) {return typeName(i);}opName77,2437
    void setZoom(float factor) {zoomFactor=factor;}setZoom86,2818
    ClickType::Type clickType(float x, float y) const {clickType99,3249
    void addPorts(const vector<int>& ports) {addPorts106,3462
    vector<int> m_ports;m_ports115,3677
  class Operation: public Poly<Operation<T>, OperationBase>,Operation121,3812
    typedef OperationBase Super;Super124,3927
    typedef OperationType::Type Type;Type126,3970
    Type type() const {return T;}type127,4008
    Operation(const Operation& x): Super(x) {this->addPorts();}Operation131,4125
    const Operation& operator=(const Operation& x)operator =132,4189
    Operation() {this->addPorts();}Operation135,4300
    Operation(const vector<int>& ports) {this->addPorts(ports);}Operation136,4336
    ~Operation() {this->delPorts();}~Operation137,4401
  struct NamedOpNamedOp140,4444
    string description;description142,4465
  class Constant: public NamedOp, public Slider, Constant145,4495
    typedef Operation<OperationType::constant> Super;Super148,4617
    double value; ///< constant valuevalue150,4681
    Constant(const vector<int>& ports=vector<int>()):  Constant151,4719
    Constant* clone() const {return new Constant(*this);}clone156,4901
    void pack(pack_t& x, const string& d) constpack162,5146
    void unpack(unpack_t& x, const string& d)unpack165,5226
  class IntOp: public Operation<minsky::OperationType::integrate>IntOp169,5305
    typedef Operation<OperationType::integrate> Super;Super171,5375
    int intVar; intVar174,5548
    string m_description; m_description176,5602
    static constexpr float intVarOffset=10;intVarOffset182,5831
    IntOp(): intVar(-1) {}IntOp184,5876
    ~IntOp() {if (!ecolab::interpExiting) variableManager().erase(intVarID(), true);}~IntOp186,5940
    IntOp(const IntOp& x): IntOp189,6084
    IntOp* clone() const {return new IntOp(*this);}clone195,6343
    void description(const string& desc) {description200,6513
    const string& description() const {return m_description;}description204,6612
    string valueId() const valueId207,6686
    int intVarID() const {return intVar;}intVarID211,6818
    VariablePtr getIntVar() const {getIntVar214,6910
    bool coupled() const {coupled225,7274
    void pack(pack_t& x, const string& d) constpack229,7390
    void unpack(unpack_t& x, const string& d)unpack232,7470
  class DataOp: public NamedOp, public Operation<minsky::OperationType::data>DataOp236,7549
    std::map<double, double> data;data240,7671
    DataOp(const vector<int>& ports=vector<int>()):DataOp241,7706
    void pack(pack_t& x, const string& d) constpack251,8208
    void unpack(unpack_t& x, const string& d)unpack254,8288
  class OperationPtr: public classdesc::shared_ptr<OperationBase>OperationPtr261,8577
    OperationPtr(OperationType::Type type=OperationType::numOps,OperationPtr264,8657
    OperationPtr(OperationBase* op): shared_ptr<OperationBase>(op) OperationPtr268,8902
    OperationPtr clone() const {return OperationPtr(get()->clone());}clone270,8988
    virtual int id() const {return -1;}id271,9058
    size_t use_count() const {return  classdesc::shared_ptr<OperationBase>::use_count();}use_count272,9098
  struct Operations: public IntrusiveMap<int, OperationPtr>Operations277,9196
inline std::ostream& operator<<(std::ostream& x, const std::vector<int>& y)operator <<285,9336
inline void pack(classdesc::pack_t&,const classdesc::string&,classdesc::ref<ecolab::urand>&) {}pack293,9494
inline void unpack(classdesc::pack_t&,const classdesc::string&,classdesc::ref<ecolab::urand>&) {}unpack294,9590
inline void xml_pack(classdesc::xml_pack_t&,const classdesc::string&,classdesc::ref<ecolab::urand>&) {}xml_pack295,9688
inline void xml_unpack(classdesc::xml_unpack_t&,const classdesc::string&,classdesc::ref<ecolab::urand>&) {}xml_unpack296,9792

GUI/wire.cc,263
void Wire::zoom(float xOrigin, float yOrigin, float factor)zoom27,843
void Wire::move(float dx, float dy)move40,1153
ecolab::array<float> Wire::coords() constcoords50,1441
ecolab::array<float> Wire::coords(const ecolab::array<float>& coords)coords62,1710

GUI/minskyTCL.cc,1032
#undef ReallocRealloc28,841
namespace minskyminsky32,885
    Minsky* l_minsky=NULL;l_minsky36,920
  Minsky& minsky()minsky39,952
  LocalMinsky::LocalMinsky(Minsky& minsky) {l_minsky=&minsky;}LocalMinsky48,1085
  LocalMinsky::~LocalMinsky() {l_minsky=NULL;}~LocalMinsky49,1148
  void member_entry_hook(int argc, CONST84 char** argv)member_entry_hook52,1260
  TCL_obj_t& minskyTCL_obj() minskyTCL_obj64,1571
  int TCL_obj_minsky=TCL_obj_minsky72,1761
    void MinskyTCL::putClipboard(const string& s) constputClipboard79,1910
    string MinskyTCL::getClipboard() constgetClipboard120,3004
  void MinskyTCL::latex(const char* filename, bool wrapLaTeXLines) latex155,3748
    struct OperationIcon: public ecolab::cairo::CairoImageOperationIcon184,4499
      OperationPtr op;op186,4564
      OperationIcon(const char* imageName, const char* opName):OperationIcon187,4587
      void draw()draw195,4928
  void MinskyTCL::operationIcon(const char* imageName, const char* opName) constoperationIcon209,5437

GUI/port.h,649
#define PORT_HPORT_H20,723
namespace minskyminsky24,788
  class PortPort26,807
    float m_x, m_y;m_x28,824
    float m_x, m_y;m_y28,824
    bool m_multiWireAllowed;m_multiWireAllowed29,844
    bool m_input; ///<true if input portm_input30,873
    bool input() const {return m_input;}input35,1013
    bool multiWireAllowed() const {return m_multiWireAllowed;}multiWireAllowed40,1208
    float x() const {return m_x;}x41,1271
    float y() const {return m_y;}y42,1305
    Port(float x=0, float y=0, bool input=false, bool multiWireAllowed=false): Port43,1339
    void move(float dx, float dy) {m_x+=dx; m_y+=dy;}move47,1539

GUI/variableManager.h,1764
#define VARIABLEMANAGER_HVARIABLEMANAGER_H20,734
namespace minskyminsky33,935
  class VariableManager: public IntrusiveMap<int,VariablePtr>VariableManager45,1343
    typedef IntrusiveMap<int,VariablePtr> Super;Super47,1409
    typedef IntrusiveMap<int,VariablePtr> Variables;Variables51,1539
    typedef std::map<int, int> PortMap;PortMap52,1592
    typedef std::set<std::string> WiredVariables;WiredVariables53,1632
    WiredVariables wiredVariables; /// variables whose input port is wiredwiredVariables56,1694
    PortMap portToVariable; /// map of ports to variablesportToVariable57,1769
    VariableValue undefined;undefined59,1828
    void insert(int) {}insert63,1920
    VariableValues values;values65,1954
    VariablePtr operator[](int i) const {operator []69,2097
    void setInit(const std::string& name, const std::string& val)setInit86,2600
    bool inputWired(const std::string& name) const {inputWired107,3528
    bool exists(std::string name) const {exists121,4111
    static bool isValueId(const std::string& name)isValueId137,4763
    static std::string valueId(int scope, std::string name) {valueId142,4997
    static std::string valueId(std::string name) {valueId146,5182
    VariableValue& getVariableValue(const std::string& name) {getVariableValue159,5708
    VariableValue& getVariableValueFromPort(int port)  {getVariableValueFromPort165,5929
    const VariableValue& getVariableValue(const std::string& name) const {getVariableValue169,6062
    const VariableValue& getVariableValueFromPort(int port) const {getVariableValueFromPort175,6301
    int getIDFromVariable(const VariablePtr& v) const {getIDFromVariable179,6445
    std::vector<std::string> stockVars() const {stockVars186,6705

GUI/godleyIcon.cc,2833
namespace minskyminsky33,1010
    struct OrderByNameOrderByName37,1045
      bool operator()(const VariablePtr& x, const VariablePtr& y) constoperator ()39,1074
    static Tk_CustomOption tagsOption = {tagsOption43,1206
    struct GodleyIconItem: public CairoImageGodleyIconItem48,1357
      static Tk_ConfigSpec configSpecs[];configSpecs50,1408
      int id;id51,1450
      void draw()draw52,1464
    struct DrawVarsDrawVars60,1611
      cairo_t* cairo;cairo62,1637
      float x, y; // position of this iconx63,1659
      float x, y; // position of this icony63,1659
      float zoomFactor;zoomFactor64,1702
      DrawVars(cairo_t* cairo, float x, float y, float zoomFactor): DrawVars65,1726
      void operator()(const GodleyIcon::Variables& vars)operator ()68,1862
    struct TkXGLItem: public ImageItemTkXGLItem85,2428
      int id; // C++ object identifierid87,2473
    Tk_ConfigSpec GodleyIconItem::configSpecs[] =configSpecs93,2649
    int creatProc(Tcl_Interp *interp, Tk_Canvas canvas, creatProc103,2941
  int configureProc(Tcl_Interp *interp,Tk_Canvas canvas,Tk_Item *itemPtr,configureProc122,3595
    int registerItem()registerItem134,4015
    void updateVars(GodleyIcon::Variables& vars, updateVars149,4455
    void accumulateWidthHeight(const GodleyIcon::Variables& vars,accumulateWidthHeight193,6181
  inline bool isDotOrDigit(char x)isDotOrDigit208,6608
  void GodleyIcon::setCell(int row, int col, const string& newVal) setCell211,6677
  void GodleyIcon::deleteRow(unsigned row)deleteRow226,7127
  void GodleyIcon::moveCell(int srcRow, int srcCol, int destRow, int destCol)moveCell238,7500
  map<string,double> GodleyIcon::flowSignature(int col) constflowSignature257,8205
  void GodleyIcon::update()update270,8536
  size_t GodleyIcon::numPorts() constnumPorts340,11163
  ecolab::array<int> GodleyIcon::ports() constports350,11479
  void GodleyIcon::moveTo(float x1, float y1)moveTo360,11793
  int GodleyIcon::select(float x, float y)select372,12219
  void GodleyIcon::zoom(float xOrigin, float yOrigin,float factor) {zoom383,12638
  void GodleyIcon::wtDraw(ecolab::cairo::Surface& cairoSurface)wtDraw396,13075
  void GodleyIcon::updatePortLocation()updatePortLocation444,14701
  void GodleyIcon::draw(cairo_t* cairo) constdraw508,16913
  SVGRenderer GodleyIcon::svgRenderer;svgRenderer552,18265
  constexpr float GodleyIcon::rotation;rotation553,18304
  GodleyIteratorAdaptor<GodleyIcons::iterator>::data() constdata557,18408
  GodleyIteratorAdaptor<GodleyIcons::iterator>::assetClass(size_t col) constassetClass562,18553
  signConventionReversed(int col) constsignConventionReversed567,18738
  initialConditionRow(int row) constinitialConditionRow572,18897
  static int dum=(initVec().push_back(registerItem), 0);dum577,18986

GUI/groupIcon.cc,5273
namespace minskyminsky37,1083
    const int portOffset=10;portOffset43,1188
    void printPortLoc(int i)printPortLoc46,1239
    bool near_eq(double x, double y)near_eq53,1437
    bool includesPart(const Rectangle& rect, const Polygon& poly)includesPart61,1702
    bool boundariesIntersect(const Rectangle& rect, const Polygon& poly)boundariesIntersect67,1881
    array<float> translateWireCoords(array<float> c, float dx, float dy)translateWireCoords75,2190
    bool itemExists(const string& item, int id)itemExists83,2393
    struct GroupIconItem: public CairoImageGroupIconItem93,2663
      static Tk_ConfigSpec configSpecs[];configSpecs95,2713
      GroupIconItem(): displayContents(false) {}GroupIconItem97,2762
      bool displayContents;displayContents98,2811
      int id;id99,2839
      void draw()draw100,2853
      void createOrDeleteContentItems(bool display)createOrDeleteContentItems116,3373
    struct TkXGLItem: public ImageItemTkXGLItem221,7810
      int id; // C++ object identifierid223,7855
    static Tk_CustomOption tagsOption = {tagsOption226,7902
    Tk_ConfigSpec GroupIconItem::configSpecs[] =configSpecs234,8182
    int creatProc(Tcl_Interp *interp, Tk_Canvas canvas, creatProc244,8473
  int configureProc(Tcl_Interp *interp,Tk_Canvas canvas,Tk_Item *itemPtr,configureProc263,9124
    int registerItem()registerItem275,9543
    Minsky* l_minsky=NULL;l_minsky290,9939
  static int dum=(initVec().push_back(registerItem), 0);dum293,9971
  void GroupIcon::deleteContents()deleteContents295,10029
  std::vector<int> GroupIcon::ports() constports318,10699
  float GroupIcon::x() constx329,11043
  float GroupIcon::y() consty337,11182
  float GroupIcon::rotFactor() constrotFactor345,11321
  vector<VariablePtr> GroupIcon::edgeVariables() constedgeVariables357,11667
  void GroupIcon::addEdgeVariableaddEdgeVariable376,12271
  void GroupIcon::eliminateIOduplicates()eliminateIOduplicates439,14561
  void GroupIcon::ungroup()ungroup459,15222
  void GroupIcon::moveTo(float x1, float y1)moveTo593,19795
  array<float> GroupIcon::updatePortLocation() constupdatePortLocation634,21882
  struct PortMap: public map<int, int>PortMap674,23240
    void addPorts(const T& src, const T& dest)addPorts678,23358
  void GroupIcon::copy(const GroupIcon& src)copy686,23575
  float GroupIcon::contentBounds(float& x0, float& y0, float& x1, float& y1) constcontentBounds781,27115
  void GroupIcon::moveContents(float dx, float dy)moveContents861,29676
  void GroupIcon::drawVardrawVar874,30163
  void GroupIcon::drawEdgeVariablesdrawEdgeVariables884,30383
  void GroupIcon::drawIORegion(cairo_t* cairo) constdrawIORegion901,30945
  void GroupIcon::margins(float& left, float& right) constmargins946,32366
  void GroupIcon::zoom(float xOrigin, float yOrigin,float factor) {zoom967,33140
  float GroupIcon::computeDisplayZoom()computeDisplayZoom988,33682
  void GroupIcon::addAnyWires(const S& ports)addAnyWires1014,34481
  void GroupIcon::removeAnyWires(const S& ports)removeAnyWires1091,37774
  void GroupIcon::addWire(int id)addWire1113,38527
  void GroupIcon::delWire(int id)delWire1122,38699
  void GroupIcon::addWires(const vector<int>& wires) addWires1127,38820
  int GroupIcon::inIORegion(float x, float y) constinIORegion1142,39165
  void GroupIcon::setName(const string& name)setName1158,39530
  void GroupIcon::addVariable(const VariableManager::value_type& pv, bool checkIOregions)addVariable1170,39825
  void GroupIcon::removeVariable(const VariableManager::value_type& pv)removeVariable1207,40882
  void GroupIcon::removeVariableById(int id)removeVariableById1251,42716
  void GroupIcon::addOperation(Operations::value_type& po)addOperation1258,42894
  void GroupIcon::removeOperation(Operations::value_type& po)removeOperation1271,43238
  bool GroupIcon::isAncestor(int gid) constisAncestor1290,43799
  bool GroupIcon::addGroup(IntrusiveWrap<int, GroupIcon>& pg)addGroup1299,44017
  void GroupIcon::removeGroup(IntrusiveWrap<int, GroupIcon>& pg)removeGroup1314,44462
  void GroupIcon::setZoom(float factor)setZoom1328,44864
    inline void rotate(float& x, float& y, float ca, float sa)rotate1347,45471
    inline void rotate(float& x, float& y, float ox, float oy, float ca, float sa)rotate1354,45665
  void GroupIcon::rotate(float angle)rotate1362,45830
  void GroupIcon::flipContents()flipContents1405,47084
  int GroupIcon::selectVariable(float x, float y) constselectVariable1447,48334
  Polygon GroupIcon::geom() constgeom1467,49037
  void GroupIcon::draw(cairo_t* cairo) constdraw1478,49338
  void GroupIcon::wtDraw(ecolab::cairo::Surface& cairoSurface)wtDraw1588,52664
  SVGRenderer GroupIcon::svgRenderer;svgRenderer1701,56714
  vector<int> GroupIcons::visibleGroups() constvisibleGroups1703,56753
    bool insert(set<int>& items, const vector<int>& itemList)insert1714,56961
  void GroupIcon::select(Selection& sel, float x0, float y0, float x1, float y1)select1723,57177
  void GroupIcon::centreIconOnContents() centreIconOnContents1766,58130
  void GroupIcon::rehostGlobalVars(int id)rehostGlobalVars1783,58549
  bool GroupIcons::uniqueGroupMembership() constuniqueGroupMembership1798,58837

GUI/TCL_extend.h,1775
#define TCL_EXTEND_HTCL_EXTEND_H21,730
namespace minskyminsky27,802
  template <class T> class TclExtendBase TclExtendBase30,891
    T& ref;ref33,950
    TclExtendBase(T& ref): ref(ref) {}TclExtendBase36,1039
  template <class T> struct TclExtend: public TclExtendBase<T>TclExtend39,1084
    TclExtend(T& x): TclExtendBase<T>(x) {}TclExtend41,1151
  template <> struct TclExtend<std::shared_ptr<minsky::VariableBase> >: TclExtend46,1276
    TclExtend(std::shared_ptr<VariableBase>& ref): TclExtendBase<std::shared_ptr<VariableBase>>(ref) {}TclExtend49,1418
    std::string name(TCL_args args) {name50,1522
    std::string init(TCL_args args) {init56,1659
    double value(TCL_args args) {value62,1796
  template <> struct TclExtend<minsky::Wire>: TclExtend70,1937
    TclExtend(Wire& ref): TclExtendBase<Wire>(ref) {}TclExtend73,2027
    ecolab::array<float> coords(TCL_args args) {coords74,2081
  template <> struct TclExtend<std::shared_ptr<minsky::IntOp> >: TclExtend86,2312
    TclExtend(std::shared_ptr<IntOp>& ref): TclExtendBase<std::shared_ptr<IntOp>>(ref) {}TclExtend89,2440
    string description(TCL_args args=TCL_args()) {description90,2530
namespace classdesc_accessclassdesc_access106,2902
  template <class T> struct access_pack<minsky::TclExtendBase<T> >:access_pack109,2957
  template <class T> struct access_unpack<minsky::TclExtendBase<T> >:access_unpack111,3071
   template <class T> struct access_pack<minsky::TclExtend<T> >:access_pack114,3188
  template <class T> struct access_unpack<minsky::TclExtend<T> >:access_unpack116,3299
  template <class T> struct access_TCL_obj<minsky::TclExtendBase<T> >access_TCL_obj119,3412
    void operator()(TCL_obj_t& t,const std::string& d, U& a)operator ()122,3509

GUI/selection.h,1089
#define SELECTION_HSELECTION_H21,729
namespace minskyminsky29,813
  struct SelectionSelection32,879
    std::vector<int> wires, operations, variables, groups, godleys, plots;wires34,902
    std::vector<int> wires, operations, variables, groups, godleys, plots;operations34,902
    std::vector<int> wires, operations, variables, groups, godleys, plots;variables34,902
    std::vector<int> wires, operations, variables, groups, godleys, plots;groups34,902
    std::vector<int> wires, operations, variables, groups, godleys, plots;godleys34,902
    std::vector<int> wires, operations, variables, groups, godleys, plots;plots34,902
    int group;group37,1039
    void clear() {clear39,1055
  struct LassoBoxLassoBox46,1257
    float x0, y0, x1, y1;x048,1279
    float x0, y0, x1, y1;y048,1279
    float x0, y0, x1, y1;x148,1279
    float x0, y0, x1, y1;y148,1279
    LassoBox(float x0, float y0, float x1, float y1): LassoBox49,1305
    bool intersects(const Item& item) const {intersects56,1580
    bool contains(const Wire& wire) const {contains71,2116

GUI/inGroupTest.h,773
#define INGROUPTEST_HINGROUPTEST_H21,731
namespace minskyminsky26,818
  class InGroupInGroup30,932
    struct CellCell33,962
      Cell() {}Cell37,1073
      bool operator<(const Cell& x) const {operator <39,1129
      bool inRect(float x, float y) const {inRect42,1238
    typedef std::vector<std::vector<std::set<Cell> > > Cells;Cells46,1346
    float xmin, xmax, ymin, ymax, xBinSz, yBinSz;xmin50,1428
    float xmin, xmax, ymin, ymax, xBinSz, yBinSz;xmax50,1428
    float xmin, xmax, ymin, ymax, xBinSz, yBinSz;ymin50,1428
    float xmin, xmax, ymin, ymax, xBinSz, yBinSz;ymax50,1428
    float xmin, xmax, ymin, ymax, xBinSz, yBinSz;xBinSz50,1428
    float xmin, xmax, ymin, ymax, xBinSz, yBinSz;yBinSz50,1428
    Cells cells;cells51,1478

GUI/makeMsi.sh,29
builddir ()builddir60,2604

GUI/godleyIcon.h,1843
#define GODLEYICON_HGODLEYICON_H20,729
namespace minskyminsky35,995
  class GodleyIcon: public NoteGodleyIcon39,1031
    float m_x, m_y; ///< position of Godley iconm_x41,1067
    float m_x, m_y; ///< position of Godley iconm_y41,1067
    float flowMargin, stockMargin, iconSize;flowMargin43,1166
    float flowMargin, stockMargin, iconSize;stockMargin43,1166
    float flowMargin, stockMargin, iconSize;iconSize43,1166
    virtual int id() const {return -1;}id47,1286
    static SVGRenderer svgRenderer;svgRenderer49,1327
    void iconResource(const std::string& resource)iconResource51,1422
    static constexpr float rotation=0;rotation56,1627
    bool mouseFocus; ///<true if target of a mouseovermouseFocus58,1667
    bool selected; ///<true if selected for cut, copy or group operationselected59,1722
    float width() const {return (flowMargin+iconSize)*zoomFactor;}width62,1847
    float height() const {return (stockMargin+iconSize)*zoomFactor;}height64,1966
    float leftMargin() const {return flowMargin*zoomFactor;}leftMargin66,2085
    float bottomMargin() const {return stockMargin*zoomFactor;}bottomMargin68,2198
    GodleyIcon(): m_x(0), m_y(0), GodleyIcon70,2263
    float x() const {return m_x;}x83,2835
    float y() const {return m_y;}y84,2869
    float scale; ///< scale factor of the XGL imagescale86,2914
    typedef std::vector<VariablePtr> Variables;Variables87,2966
    Variables flowVars, stockVars;flowVars88,3014
    Variables flowVars, stockVars;stockVars88,3014
    GodleyTable table;table89,3049
    float zoomFactor;zoomFactor105,3652
    ClickType::Type clickType(float x, float y) const {clickType110,3811
    std::string valueId(const std::string& x) const {valueId127,4301
  typedef IntrusiveMap<int, GodleyIcon> GodleyIcons;GodleyIcons135,4512

GUI/minsky.h,4639
#define MINSKY_HMINSKY_H21,726
namespace minskyminsky50,1292
  struct MinskyExcludeMinskyExclude59,1529
    EvalOpVector equations;equations61,1556
    vector<Integral> integrals;integrals62,1584
    shared_ptr<RKdata> ode;ode63,1616
    shared_ptr<ofstream> outputDataFile;outputDataFile64,1644
    MinskyExclude(): historyPtr(0) {}MinskyExclude68,1789
    MinskyExclude(const MinskyExclude&): historyPtr(0) {}MinskyExclude69,1827
    MinskyExclude& operator=(const MinskyExclude&) {return *this;}operator =70,1885
    std::deque<classdesc::pack_t> history;history78,2185
    size_t historyPtr;historyPtr79,2228
  class MinskyMatrixMinskyMatrix83,2329
    size_t n;n85,2354
    double *data;data86,2368
    MinskyMatrix(size_t n, double* data): n(n), data(data) {}MinskyMatrix89,2432
    double& operator()(size_t i, size_t j) {return data[i*n+j];}operator ()90,2494
    double operator()(size_t i, size_t j) const {return data[i*n+j];}operator ()91,2559
  enum ItemType {wire, op, var, group, godley, plot};ItemType94,2635
  enum ItemType {wire, op, var, group, godley, plot};wire94,2635
  enum ItemType {wire, op, var, group, godley, plot};op94,2635
  enum ItemType {wire, op, var, group, godley, plot};var94,2635
  enum ItemType {wire, op, var, group, godley, plot};group94,2635
  enum ItemType {wire, op, var, group, godley, plot};godley94,2635
  enum ItemType {wire, op, var, group, godley, plot};plot94,2635
  class Minsky: public ValueVector, public Exclude<MinskyExclude>, Minsky96,2690
    bool m_edited;  m_edited107,3091
    Selection currentSelection;currentSelection119,3462
    bool edited() const {return m_edited;}edited123,3573
    void markEdited() {pushHistory(); m_edited=true; reset_needed=true;}markEdited124,3616
    void resetNotNeeded() {reset_needed=false;}resetNotNeeded126,3738
    void resetEdited() {m_edited=false;}resetEdited128,3826
    typedef GodleyIcons GodleyItems;GodleyItems130,3868
    GodleyItems godleyItems;godleyItems131,3905
    void setGodleyIconResource(const string& s)setGodleyIconResource133,3935
    void setGroupIconResource(const string& s)setGroupIconResource135,4029
    inline int getNewId()getNewId149,4784
    EvalGodley evalGodley;evalGodley156,4926
    Operations operations;operations159,4955
    VariableManager variables;variables160,4982
    GroupIcons groupItems;groupItems162,5014
    typedef IntrusiveMap<int, OpVarBaseAttributes> Notes;Notes163,5041
    Notes notes; ///< descriptive textual itemsnotes164,5099
    Plots plots;plots166,5148
    Minsky() {m_edited=false;}Minsky170,5236
    ~Minsky() {clearAllMaps();} //improve shutdown times~Minsky171,5267
    template <class E> void enumVals()enumVals180,5526
    int addWire(const Wire& w) {return PortManager::addWire(w);}addWire187,5732
    void availableOperations() {enumVals<OperationType::Type>();}availableOperations193,5937
    void variableTypes() {enumVals<VariableType::Type>();}variableTypes195,6044
    void assetClasses() {enumVals<GodleyTable::AssetClass>();}assetClasses198,6151
    int newVariable(const string& name) {return variables.newVariable(name, VariableType::flow);}newVariable210,6488
    void deleteVariable(int id)        {variables.erase(id);}deleteVariable215,6645
    int newPlot(double x, double y)newPlot220,6760
    void deletePlot(int id)deletePlot228,6931
    void setGodleyCell(int id, int row, int col, const string& value)setGodleyCell234,7026
    int addGodleyTable(float x, float y) addGodleyTable247,7439
    void deleteGodleyTable(int id)deleteGodleyTable258,7698
     int newNote() {newNote273,8174
    void deleteNote(int id) {deleteNote278,8260
    virtual void putClipboard(const string&) const {}putClipboard294,8812
    virtual std::string getClipboard() const {return "";}getClipboard295,8866
    InGroup groupTest;groupTest317,9742
    float zoomFactor() const {return m_zoomFactor;}zoomFactor319,9795
    void closeLogFile() {outputDataFile.reset();}closeLogFile338,10568
    size_t numEquations() const {return equations.size();}numEquations347,10927
    typedef MinskyMatrix Matrix; Matrix354,11175
    static const char* minskyVersion;minskyVersion391,12722
    string ecolabVersion() {return VERSION;}ecolabVersion392,12760
    void clearHistory() {history.clear(); historyPtr=0;}clearHistory397,12902
    void checkPushHistory() {if (historyPtr==history.size()) pushHistory();}checkPushHistory401,13072
  inline const Minsky& cminsky() {return minsky();}cminsky412,13427
  struct LocalMinskyLocalMinsky414,13554

GUI/operation.cc,1630
#define OPNAMEDEFOPNAMEDEF19,708
  inline double sqr(double x) {return x*x;}sqr37,987
namespace minskyminsky40,1034
  constexpr float IntOp::intVarOffset;intVarOffset44,1095
  constexpr float OperationBase::l;l45,1134
  constexpr float OperationBase::h;h46,1170
  constexpr float OperationBase::r;r47,1206
  void OperationBase::move(float x1, float y1)move49,1243
  void OperationBase::addPorts()addPorts56,1410
  IntOp::IntOp(const vector<int>& ports): Super(ports), intVar(-1) IntOp102,3094
  const IntOp& IntOp::operator=(const IntOp& x)operator =111,3303
  void IntOp::addPorts()addPorts120,3519
  void OperationBase::delPorts()delPorts128,3654
    struct EnsureVariablesConsistentEnsureVariablesConsistent138,3911
      ~EnsureVariablesConsistent() ~EnsureVariablesConsistent140,3954
  void IntOp::setDescription()setDescription145,4047
  bool OperationBase::selfWire(int from, int to) constselfWire217,6403
  OperationBase* OperationBase::create(OperationType::Type type,create226,6617
  array<int> Operations::visibleOperations() constvisibleOperations286,8413
  bool IntOp::toggleCoupled()toggleCoupled296,8608
  void OperationBase::zoom(float xOrigin, float yOrigin,float factor)zoom328,9476
  string OperationBase::portValues() constportValues350,10031
  void Constant::adjustSliderBounds()adjustSliderBounds370,10794
  void Constant::initOpSliderBounds()initOpSliderBounds376,10925
  void DataOp::readData(const string& fileName)readData397,11340
  double DataOp::interpolate(double x) constinterpolate416,11971
  double DataOp::deriv(double x) constderiv440,12576

GUI/minsky.tcl,2656
proc setFname {name} {setFname69,2204
proc enableEventProcessingOnExit {cmd level args} {enableEventProcessingOnExit79,2448
proc scopedDisableEventProcessing {} {scopedDisableEventProcessing90,2838
proc setBackgroundColour bgc {setBackgroundColour127,3855
proc deiconify {widget} {deiconify181,5589
    proc ::tk::mac::OpenDocument {args} {::tk::mac::OpenDocument198,6089
    proc ::tk::mac::ShowPreferences {} {showPreferences}::tk::mac::ShowPreferences202,6260
proc showPreferences {} {showPreferences240,7572
proc undo {delta} {undo439,16189
proc cut {} {cut447,16331
proc scrollCanvases {xyview args} {eval .wiring.canvas $xyview $args; eval .equations.canvas yview $args}scrollCanvases494,17683
proc runstop {} {runstop533,19173
proc step {} {step555,19660
proc simulate {} {simulate577,20210
proc reset {} {reset592,20598
proc setSimulationDelay {delay} {setSimulationDelay613,21101
proc populateRecentFiles {} {populateRecentFiles624,21374
proc openFile {} {openFile639,21806
proc openNamedFile {ofname} {openNamedFile646,22044
proc insertFile {} {insertFile665,22495
proc insertNewGroup {gid} {insertNewGroup672,22709
proc recentreCanvas {} {recentreCanvas693,23405
proc save {} {save706,23979
proc saveAs {} {saveAs715,24181
proc newSystem {} {newSystem723,24365
proc toggleImplicitSolver {} {toggleImplicitSolver750,25050
proc invokeOKorCancel {window} {invokeOKorCancel756,25215
proc deiconifyRKDataForm {} {deiconifyRKDataForm773,25613
proc closeRKDataForm {} {closeRKDataForm813,27387
proc setRKparms {} {setRKparms818,27473
proc closePreferencesForm {} {closePreferencesForm823,27584
proc setPreferenceParms {} {setPreferenceParms828,27685
proc topLevelHelp {} {topLevelHelp873,29252
proc helpContext {x y} {helpContext878,29359
proc helpFor {x y} {helpFor885,29552
proc help {topic} {help897,29816
proc aboutMinsky {} {aboutMinsky928,30926
proc deleteSubsidiaryTopLevels {} {deleteSubsidiaryTopLevels961,31855
proc exit {} {exit977,32307
    proc traceProc {args} {}traceProc990,32704
    proc bgerror x {} bgerror1008,33399
proc setFname {name} {setFname1012,33438
proc ifDef {var} {ifDef1052,34806
proc addEvent {event window button height state width x y delta keysym subwindow} {addEvent1061,34929
proc startRecording {filename} {startRecording1075,35522
proc stopRecording {} {stopRecording1091,36184
proc toggleRecording {} {toggleRecording1102,36367
proc replay {} {replay1114,36652
proc checkHistory {} {checkHistory1126,37077
proc attachTraceProc {namesp} {attachTraceProc1133,37210
    proc traceProc {args} {traceProc1148,37650

GUI/minskyTCL.h,3476
#define MINSKYTCL_HMINSKYTCL_H21,729
namespace minskyminsky27,848
  class GetterSetterGetterSetter37,1068
    M& map;map39,1093
    typedef typename M::key_type K;K40,1105
    typedef typename M::mapped_type T;T41,1141
    std::unique_ptr<TclExtend<T> > ref;ref42,1180
    K key; ///<last key gottenkey44,1230
    void get(TCL_args args) {get45,1261
    void set(TCL_args args) {set58,1676
    GetterSetter(M& m): map(m) {}GetterSetter60,1712
    void operator=(const GetterSetter&) {}operator =63,1840
  class GetterSetterPtrGetterSetterPtr67,1957
    typedef typename M::key_type K;K69,1985
    typedef typename M::mapped_type T;T70,2021
    M& map;map71,2060
    std::unique_ptr<TclExtend<std::shared_ptr<V> > > ref;ref72,2072
    std::shared_ptr<V> val;val73,2130
    string cmdPrefix;cmdPrefix74,2158
    void get(TCL_args args) {get78,2302
    void set(TCL_args args) {}set112,3404
    void clear() {clear114,3516
    GetterSetterPtr(M& m): map(m) {}GetterSetterPtr124,3819
    void operator=(const GetterSetterPtr&) {}operator =127,3950
  struct MinskyTCL: public MinskyMinskyTCL131,4003
    GetterSetter<Ports> port;port134,4063
    GetterSetter<Wires> wire;wire135,4093
    GetterSetterPtr<Operations> op;op136,4123
    GetterSetterPtr<Operations, Constant> constant;constant137,4159
    GetterSetterPtr<Operations, IntOp> integral;integral138,4211
    GetterSetterPtr<Operations, DataOp > data;data139,4260
    GetterSetterPtr<VariableManager> var;var140,4307
    GetterSetter<std::map<string, VariableValue> > value;value141,4349
    GetterSetter<Plots> plot;plot142,4407
    GetterSetter<GodleyIcons> godley;godley143,4437
    GetterSetter<GroupIcons> group;group144,4475
    GetterSetter<Notes> note;note145,4511
    MinskyTCL(): port(ports), wire(wires), op(operations), MinskyTCL147,4542
    void clearAllGetterSetters() {clearAllGetterSetters153,4844
    void clearAll() {clearAll162,5078
    int addWire(TCL_args args) {addWire174,5553
    void deleteOperation(int id) {deleteOperation182,5750
    void cut()cut194,6151
    void putClipboard(const std::string& s) const override; override202,6347
    std::string getClipboard() const override; override203,6408
    int newVariable(std::string name, VariableType::Type type)newVariable207,6576
    void convertVarType(const std::string& name, VariableType::Type type)convertVarType210,6687
    void deleteVariable(int id) {deleteVariable213,6810
    void inGroupSelect(int gid, float x0, float y0, float x1, float y1)inGroupSelect218,6939
    void deleteGroup(TCL_args args) {deleteGroup228,7306
    void initGroupList(TCL_args args) {initGroupList234,7437
    float localZoomFactor(std::string item, int id, float x, float y) const {localZoomFactor236,7545
    void load(const char* filename) {load249,7999
    void exportSchema(TCL_args args) {exportSchema253,8104
    void matlab(const char* filename) {matlab261,8358
    string latex2pango(const char* x) {return latexToPango(x);}latex2pango268,8576
    void undo(TCL_args args) {undo271,8688
namespace classdesc_accessclassdesc_access294,9348
  struct access_pack<minsky::GetterSetter<M> >:access_pack299,9428
  struct access_unpack<minsky::GetterSetter<M> >:access_unpack303,9545
  struct access_pack<minsky::GetterSetterPtr<M, V> >:access_pack307,9673
  struct access_unpack<minsky::GetterSetterPtr<M, V> >:access_unpack311,9805

GUI/plots.tcl,599
proc newPlotItem {id x y} {newPlotItem21,778
proc newPlot {} {newPlot32,1185
proc deiconifyPltWindowOptions {} {deiconifyPltWindowOptions53,1738
proc setPlotOptions {id} {setPlotOptions128,5787
proc doPlotOptions {id} {doPlotOptions147,6564
proc resizePlot {id w h dw dh} {resizePlot182,7893
proc plotDoubleClick {id} {plotDoubleClick191,8314
proc deletePlot {item id} {deletePlot216,9112
    proc resize {id} {resize223,9244
    proc resizeRect {item x y} {resizeRect240,10008
    proc resizeItem {item id x y} {resizeItem252,10424
    proc setLegend {} {setLegend277,11275

GUI/helpRefDb.tcl,0

GUI/variableManager.cc,1867
VariableManager& minsky::variableManager() {return minsky().variables;}variableManager30,921
ecolab::array<int> VariableManager::visibleVariables() constvisibleVariables32,994
int VariableManager::addVariable(const VariablePtr& var, int id)addVariable40,1219
bool VariableManager::varExists(const VariablePtr& var) constvarExists63,2002
int VariableManager::newVariable(string name, VariableType::Type type)newVariable68,2116
void VariableManager::erase(Variables::iterator it)erase79,2491
void VariableManager::erase(int i, bool eraseIfIntegral)erase86,2673
void VariableManager::erase(const VariablePtr& v)erase119,3764
int VariableManager::wireToVariable(const string& name) constwireToVariable126,3938
bool VariableManager::noMultipleWiredInputs() constnoMultipleWiredInputs140,4325
ecolab::array<int> VariableManager::wiresFromVariable(const string& name) constwiresFromVariable151,4614
void VariableManager::removeVariable(string name)removeVariable162,4934
bool VariableManager::addWire(int from, int to)addWire173,5189
void VariableManager::deleteWire(int port)deleteWire191,5674
int VariableManager::scope(const std::string& name) scope202,5940
std::string VariableManager::uqName(const std::string& name)uqName219,6363
int VariableManager::getVariableIDFromPort(int port) constgetVariableIDFromPort229,6545
const VariablePtr& VariableManager::getVariableFromPort(int port) constgetVariableFromPort238,6742
void VariableManager::reset()reset251,7065
void VariableManager::makeConsistent()makeConsistent260,7311
void VariableManager::clear()clear307,8848
string VariableManager::valueNames() constvalueNames315,8975
void VariableManager::makeVarConsistentWithValue(int id)makeVarConsistentWithValue325,9344
void VariableManager::convertVarType(const string& name, VariableType::Type type)convertVarType332,9492

GUI/plotWidget.h,1982
#define PLOTWIDGET_HPLOTWIDGET_H20,729
namespace minskyminsky35,1087
  class PlotWidget: public Note, public ecolab::PlotPlotWidget39,1172
    array<int> m_ports;m_ports49,1623
    bool justDataChanged=false;justDataChanged51,1714
    classdesc::Exclude<Tk_Canvas> canvas; // canvas this widget will be displayed oncanvas52,1746
    virtual int id() const {return -1;}id57,1924
    const array<int>& ports() const {return m_ports;}ports61,1990
    std::vector<VariableValue> yvars;yvars66,2113
    std::vector<VariableValue> xvars;xvars67,2151
    VariableValue xminVar, xmaxVar, yminVar, ymaxVar, y1minVar, y1maxVar;xminVar70,2234
    VariableValue xminVar, xmaxVar, yminVar, ymaxVar, y1minVar, y1maxVar;xmaxVar70,2234
    VariableValue xminVar, xmaxVar, yminVar, ymaxVar, y1minVar, y1maxVar;yminVar70,2234
    VariableValue xminVar, xmaxVar, yminVar, ymaxVar, y1minVar, y1maxVar;ymaxVar70,2234
    VariableValue xminVar, xmaxVar, yminVar, ymaxVar, y1minVar, y1maxVar;y1minVar70,2234
    VariableValue xminVar, xmaxVar, yminVar, ymaxVar, y1minVar, y1maxVar;y1maxVar70,2234
    std::string title;title78,2459
    float x() const {return m_x;}x81,2541
    float y() const {return m_y;}y82,2575
    static constexpr float rotation=0;rotation91,2870
    ClickType::Type clickType(float x, float y) {clickType104,3321
    Exclude<cairo::SurfacePtr> cairoSurface, expandedPlot; cairoSurface109,3520
    Exclude<cairo::SurfacePtr> cairoSurface, expandedPlot; expandedPlot109,3520
    void autoScale() {xminVar=xmaxVar=yminVar=ymaxVar=y1minVar=y1maxVar=VariableValue();}autoScale113,3678
    void zoom(float xOrigin, float yOrigin, float factor) {zoom119,3945
  struct Plots: public IntrusiveMap<int, PlotWidget> Plots134,4344
inline void xml_pack(classdesc::xml_pack_t&,const ecolab::string&,ecolab::Plot&) {}xml_pack152,4820
inline void xml_unpack(classdesc::xml_unpack_t&,const ecolab::string&,ecolab::Plot&) {}xml_unpack153,4904

GUI/opVarBaseAttributes.cc,127
namespace minskyminsky24,792
  float OpVarBaseAttributes::x() constx26,811
  float OpVarBaseAttributes::y() consty34,955

GUI/cairoItems.h,758
namespace minskyminsky27,867
  class RenderOperationRenderOperation32,1019
    const OperationBase& op;op34,1047
    cairo_t *cairo;cairo35,1076
    float w, h, hoffs;w36,1096
    float w, h, hoffs;h36,1096
    float w, h, hoffs;hoffs36,1096
    float width() const {return w;}width44,1334
    float height() const {return h;}height46,1409
  class RenderVariableRenderVariable56,1690
    const VariableBase& var;var58,1717
    cairo_t *cairo;cairo59,1746
    float w, h, hoffs;w60,1766
    float w, h, hoffs;h60,1766
    float w, h, hoffs;hoffs60,1766
    float width() const {return w;}width69,2070
    float height() const {return h;}height71,2145
  void drawPorts(const Item& item, const Ports& ports, drawPorts80,2495

GUI/portManager.cc,1544
PortManager& minsky::portManager() {return minsky::minsky();}portManager28,869
const PortManager& minsky::cportManager() {return minsky::minsky();}cportManager29,931
int PortManager::addPort(const Port& p) addPort31,1001
int PortManager::addWire(Wire w) addWire38,1144
void PortManager::movePortTo(int port, float x, float y)movePortTo61,1663
int PortManager::closestPortImpl(float x, float y)closestPortImpl92,2498
  struct AlwaysTrueAlwaysTrue112,2900
    inline static bool eval(const Port& p) {return true;}eval114,2924
  struct InputTrueInputTrue116,2987
    inline static bool eval(const Port& p) {return p.input();}eval118,3010
  struct OutputTrueOutputTrue120,3078
    inline static bool eval(const Port& p) {return !p.input();}eval122,3102
int PortManager::closestPort(float x, float y)closestPort127,3175
int PortManager::closestOutPort(float x, float y)closestOutPort130,3266
int PortManager::closestInPort(float x, float y)closestInPort133,3360
ecolab::array<int> PortManager::wiresAttachedToPort(int port) constwiresAttachedToPort136,3452
void PortManager::delPort(int port)delPort145,3697
ecolab::array<int> PortManager::visibleWires() constvisibleWires157,3915
void PortManager::deleteWire(int id)deleteWire166,4121
  struct LessWireLessWire183,4506
    bool operator()(const Minsky::Wires::value_type& x, operator ()185,4528
void PortManager::removeDuplicateWires()removeDuplicateWires193,4727
void PortManager::removeUnusedPorts(const std::set<int>& keep)removeUnusedPorts201,4968

GUI/groupIcon.h,2271
#define GROUPICON_HGROUPICON_H20,728
namespace minskyminsky40,1081
  class GroupIcon: public NoteGroupIcon45,1143
    std::vector<int> m_operations;m_operations50,1232
    std::vector<int> m_variables;m_variables51,1267
    std::vector<int> m_wires;m_wires52,1301
    std::vector<int> m_groups;m_groups53,1331
    std::set<int> inVariables, outVariables;inVariables55,1416
    std::set<int> inVariables, outVariables;outVariables55,1416
    std::set<std::string> inVarNames, outVarNames;inVarNames58,1551
    std::set<std::string> inVarNames, outVarNames;outVarNames58,1551
    std::string m_name;m_name62,1689
    static SVGRenderer svgRenderer;svgRenderer76,2149
    std::string iconResource(const std::string& resource)iconResource78,2244
    const std::string& name() const {return m_name;}name81,2361
    std::vector<int> createdVars;createdVars91,2763
    size_t numPorts() const {return inVariables.size()+outVariables.size();}numPorts97,2977
    std::set<int> edgeSet() const {edgeSet102,3221
    const std::vector<int>& operations() const {return m_operations;}operations110,3491
    const std::vector<int>& variables() const {return m_variables;}variables111,3561
    const std::vector<int>& wires() const {return m_wires;}wires112,3629
    const std::vector<int>& groups() const {return m_groups;}groups113,3689
    int parent() const {return m_parent;}parent120,3856
    int group() const {return parent();}group122,3955
    virtual int id() const {return -1;}id125,4026
    int groupId() const {return id();}groupId126,4066
    float iconCentre() const {iconCentre132,4272
    bool empty() {return m_variables.empty() && m_operations.empty() && empty144,4587
    void move(float dx, float dy) {moveTo(x()+dx, y()+dy);}move165,5502
    array<float> cBounds() const {cBounds176,5937
    float localZoom() const {localZoom197,6688
    float edgeScale() const {edgeScale204,6982
    bool displayContents() const {return zoomFactor>displayZoom;}displayContents214,7268
    void rotateTo(float angle) {rotate(angle-rotation);}rotateTo253,9008
    ClickType::Type clickType(float x, float y) const {clickType269,9587
  struct GroupIcons: public IntrusiveMap<int, GroupIcon>GroupIcons287,10133

GUI/createIcons.tcl,0

GUI/wiring.tcl,5110
proc createWire {coords} {createWire24,772
proc get_pointer_x {c} {get_pointer_x117,4505
proc get_pointer_y {c} {get_pointer_y121,4590
proc zoom {factor} {zoom138,5167
proc clearTempBindings {} {clearTempBindings167,6256
proc handleEscapeKey {} {handleEscapeKey175,6481
proc placeNewVar {id} {placeNewVar180,6575
proc addVariablePostModal {} {addVariablePostModal201,7180
proc addVariable {} {addVariable224,7816
proc addConstant {} {addConstant232,8030
proc addConstantOrVariable {} {addConstantOrVariable240,8249
proc addOperation {op} {addOperation253,8635
proc addOperationKey {op} {addOperationKey268,9009
proc textInput {char} {textInput289,9596
proc deleteKey {} {deleteKey353,12205
proc placeNewOp {opid} {placeNewOp367,12669
proc cancelPlaceNewOp {id} {cancelPlaceNewOp387,13202
proc redraw {item} {redraw396,13414
proc deleteTooltipIfLeft {item id} {deleteTooltipIfLeft403,13524
proc itemEnterLeave {item id tag enter} {itemEnterLeave415,13869
proc drawOperation {id} {drawOperation445,14870
proc updateItemPos {item id} {updateItemPos470,15876
proc submitUpdateItemPos {item id} {submitUpdateItemPos484,16255
proc moveSet {item id x y} {moveSet498,16786
proc move {item id x y} {move512,17145
proc newVar {id} {newVar544,18372
proc addNewGodleyItem {id} {addNewGodleyItem566,19331
proc addNewGodleyItemKey {} {addNewGodleyItemKey585,19852
proc newGodleyItem {id} {newGodleyItem602,20350
proc rightMouseGodley {id x y X Y} {rightMouseGodley622,21201
proc doubleMouseGodley {id x y} {doubleMouseGodley641,21732
proc updateGodleyItem {id} {updateGodleyItem651,21960
proc newWire {wire wireid} {newWire656,22050
proc updateCoords {wire handle pos x y} {updateCoords668,22712
proc insertCoords {wire handle pos x y} {insertCoords684,23241
proc createHandle {w x y} {createHandle698,23774
proc deleteHandle {wire handle pos} {deleteHandle707,24057
proc decorateWire {wire} {decorateWire718,24347
    proc startConnect {portId id x y} {startConnect750,25474
                proc extendConnect {x y} {extendConnect761,25834
                proc finishConnect {x y} {finishConnect768,26073
    proc extendConnect {portId id x y} {extendConnect805,27474
    proc finishConnect {id x y} {[set id]::finishConnect $x $y}finishConnect813,27702
proc adjustWire {portId} {adjustWire817,27821
proc straightenWire {id} {straightenWire831,28221
proc closestOutPort {x y} {closestOutPort843,28517
proc unbindOnRelease {tag} {unbindOnRelease849,28674
proc onClick {item id tag x y} {onClick857,28873
proc setM1Binding {item id tag} {setM1Binding881,29867
proc setInteractionMode {args} {setInteractionMode906,30716
proc recentreCanvas {} {recentreCanvas944,32263
proc anyItems {tag} {anyItems951,32441
proc updateCanvas {} {updateCanvas955,32531
proc indicateCanvasItemInError {x y} {indicateCanvasItemInError1026,34438
proc doubleClick {item x y} {doubleClick1032,34618
proc toggleCoupled {id} {toggleCoupled1049,35136
proc addIntegral name {addIntegral1056,35247
proc canvasContext {x y} {canvasContext1063,35398
proc canvasHelp {x y} {canvasHelp1073,35866
proc raiseItem {item} {raiseItem1122,37597
proc lowerItem {item} {lowerItem1125,37658
proc contextMenu {item x y} {contextMenu1130,37735
    proc resize {id} {resize1253,45053
    proc resizeRect {item x y} {resizeRect1270,45818
    proc resizeItem {item id x y} {resizeItem1290,46527
proc flip_default {} {flip_default1320,47402
proc deleteItem {id tag} {deleteItem1325,47523
proc copyVar {id} {copyVar1353,48088
proc copyOp  {id} {copyOp1363,48279
proc rotateOp {id angle} {rotateOp1372,48447
proc rotateVar {id angle} {rotateVar1382,48624
proc deiconifyEditVar {} {deiconifyEditVar1391,48801
proc deiconifyInitVar {} {deiconifyInitVar1477,52893
proc deiconifyEditConstant {} {deiconifyEditConstant1537,55576
proc cleanEditConstantConfig {} {cleanEditConstantConfig1582,57618
proc configEditConstantForConstant {} {configEditConstantForConstant1590,57843
proc configEditConstantForIntegral {} {configEditConstantForIntegral1609,58323
proc configEditConstantForData {} {configEditConstantForData1625,58718
proc deiconifyEditOperation {} {deiconifyEditOperation1641,59094
proc setItem {modelCmd attr dialogCmd} {setItem1675,60752
proc closeEditWindow {window} {closeEditWindow1687,61031
proc setConstantValue {} {setConstantValue1693,61132
proc setDataValue {} {setDataValue1704,61521
proc setIntegralIValue {} {setIntegralIValue1709,61610
proc editItem {id tag} {editItem1717,61815
proc setVarVal {v x} {setVarVal1823,66512
proc setSliderProperties {id} {setSliderProperties1828,66574
proc sliderYCoord {y} {sliderYCoord1858,67537
proc drawSlider {var x y} {drawSlider1862,67604
proc importData {id} {importData1911,69656
proc deiconifyNote {} {deiconifyNote1921,69858
proc postNote {item id} {postNote1939,70644
proc OKnote {item id} {OKnote1952,71057
proc newNote {id} {newNote1959,71242
proc placeNewNote {} {placeNewNote1966,71472
proc tout {args} {tout1984,71974

Makefile,2149
DLLS=libcairo-2.dll libexpat-1.dll \DLLS4,72
WIN_DIST_DIR=$(shell pwd)-win-distWIN_DIST_DIR13,524
MAC_DIST_DIR=minsky.app/Contents/MacOSMAC_DIST_DIR16,615
TCL_PREFIX=$(shell grep TCL_PREFIX $(call search,lib*/tclConfig.sh) | cut -f2 -d\')TCL_PREFIX27,943
TCL_VERSION=$(shell grep TCL_VERSION $(call search,lib*/tclConfig.sh) | cut -f2 -d\')TCL_VERSION28,1027
TCL_LIB=$(dir $(shell find $(TCL_PREFIX) -name init.tcl -path "*/tcl$(TCL_VERSION)*" -print))TCL_LIB29,1113
TK_LIB=$(dir $(shell find $(TCL_PREFIX) -name tk.tcl -path "*/tk$(TCL_VERSION)*" -print))TK_LIB30,1207
ECOLAB_HOME=$(HOME)/usr/mxe/ecolabECOLAB_HOME34,1364
ECOLAB_HOME=$(HOME)/usr/ecolabECOLAB_HOME37,1495
ECOLAB_HOME=/usr/local/ecolabECOLAB_HOME39,1531
PREFIX=/usr/localPREFIX46,1650
EXES=gui-wt/minsky GUI/minsky server/server gui-wt/minskyEXES49,1670
MODLINK=$(LIBMODS:%=$(ECOLAB_HOME)/lib/%)MODLINK53,1872
GUI_OBJS=minskyTCL.o minsky.o godley.o portManager.o wire.o \GUI_OBJS54,1914
ENGINE_OBJS=evalOp.o equations.o derivative.o equationDisplay.o evalGodley.o latexMarkup.o flowCoef.o coverage.oENGINE_OBJS58,2160
SERVER_OBJS=database.o message.o websocket.o databaseServer.oSERVER_OBJS59,2273
SCHEMA_OBJS=schema0.o schema1.o variableType.o operationType.oSCHEMA_OBJS60,2335
WTGUI_OBJS=canvasView.o mainMenu.o minskyApp.o propertiesDlg.o  \WTGUI_OBJS61,2398
ALL_OBJS=tclmain.o $(GUI_OBJS) $(ENGINE_OBJS) $(SERVER_OBJS) $(SCHEMA_OBJS) $(WTGUI_OBJS) $(WTGUI_OBJS)ALL_OBJS75,3191
VPATH= schema GUI engine server gui-wt $(ECOLAB_HOME)/includeVPATH82,3441
TESTS=TESTS90,3749
TESTS=tests checkMissing TESTS93,3810
LIBS:=$(DIRS:%=-L%/lib/Tktable2.11) -lTktable2.11 $(LIBS)LIBS98,3890
BOOST_EXT=-mtBOOST_EXT101,3959
EXE=.exeEXE102,3973
BOOST_EXT=BOOST_EXT104,3987
EXE=EXE105,3998
GUI_LIBS=GUI_LIBS121,4398
SERVER_LIBS=-lwebsocketpp -lsoci_core SERVER_LIBS122,4408
WT_LIBS=-lwthttp -lwtext -lwt -lGraphicsMagick -lGraphicsMagick++ \WT_LIBS123,4447
WINBUILD=1WINBUILD145,5120
WINBUILD=1WINBUILD148,5147
WINDRES=$(MXE_PREFIX)-windresWINDRES160,5469
	-env MINSKY_COV=`pwd`/minsky.cov $(MAKE) AEGIS=1 sureINSKY_COV281,10948

engine/evalOp.h,1543
#define EVALOP_HEVALOP_H20,725
namespace minskyminsky40,1075
  struct EvalOpBase: public classdesc::PolyBase<minsky::OperationType::Type>,EvalOpBase48,1209
    typedef OperationType::Type Type;Type52,1394
    static double t;t55,1473
    int out, in1, in2;out58,1544
    int out, in1, in2;in158,1544
    int out, in1, in2;in258,1544
    bool flow1, flow2; flow160,1650
    bool flow1, flow2; flow260,1650
    std::shared_ptr<OperationBase> state;state63,1723
    EvalOpBase(int out=0, int in1=0, int in2=0, EvalOpBase64,1765
    virtual ~EvalOpBase() {}~EvalOpBase68,1936
  struct EvalOp: public classdesc::Poly<EvalOp<T>, EvalOpBase>,EvalOp110,3551
    EvalOp(int out=0, int in1=0, int in2=0, EvalOp113,3675
    int numArgs() const override;override123,4011
    double evaluate(double in1=0, double in2=0) const override;override124,4045
    double d1(double x1=0, double x2=0) const override;override125,4109
    double d2(double x1=0, double x2=0) const override;override126,4165
  struct ConstantEvalOp: public EvalOp<minsky::OperationType::constant>ConstantEvalOp130,4231
    double value;value132,4307
    ConstantEvalOp(int out=0, int in1=0, int in2=0, ConstantEvalOp133,4325
    double evaluate(double in1=0, double in2=0) const override;override136,4499
  struct EvalOpPtr: public classdesc::shared_ptr<EvalOpBase>, EvalOpPtr139,4570
    EvalOpPtr(OperationType::Type op, const VariableValue& to,EvalOpPtr146,4859
  struct EvalOpVector: public vector<EvalOpPtr>EvalOpVector154,5176

engine/equationDisplay.cc,3556
namespace MathDAGMathDAG26,859
    enum class Anchor {n,e,w,s,ne,nw,se,sw};Anchor31,896
    enum class Anchor {n,e,w,s,ne,nw,se,sw};n31,896
    enum class Anchor {n,e,w,s,ne,nw,se,sw};e31,896
    enum class Anchor {n,e,w,s,ne,nw,se,sw};w31,896
    enum class Anchor {n,e,w,s,ne,nw,se,sw};s31,896
    enum class Anchor {n,e,w,s,ne,nw,se,sw};ne31,896
    enum class Anchor {n,e,w,s,ne,nw,se,sw};nw31,896
    enum class Anchor {n,e,w,s,ne,nw,se,sw};se31,896
    void moveToAnchor(cairo_t* cairo, const T& object, Anchor anchor)moveToAnchor35,1014
    double print(cairo_t* cairo, const string& text, Anchor anchor)print60,1988
    void displaySurface(cairo_t* cairo, const Surface& source, Anchor anchor)displaySurface75,2543
    struct RecordingSurface: public SurfaceRecordingSurface89,3052
      RecordingSurface(): Surface(cairo_recording_surface_createRecordingSurface91,3102
    double parenthesise(Surface& s, X x)parenthesise98,3387
    void naryRender(Surface& dest, const vector<WeakNodePtr>& arglist, int BODMASlevel, const char* op, const char *empty)naryRender124,4250
    void variableRender(Surface& surf, const VariableDAG& v)variableRender140,4823
  void SystemOfEquations::renderEquations(Surface& dest) constrenderEquations151,5106
  void ConstantDAG::render(ecolab::cairo::Surface& surf) constrender216,7379
  void VariableDAG::render(ecolab::cairo::Surface& surf) constrender221,7524
  void OperationDAG<OperationType::constant>::render(Surface& surf) const render228,7676
  void OperationDAG<OperationType::add>::render(Surface& surf) constrender234,7846
  void OperationDAG<OperationType::subtract>::render(Surface& surf) const render244,8138
  void OperationDAG<OperationType::multiply>::render(Surface& surf) const render260,8727
  void OperationDAG<OperationType::divide>::render(Surface& surf) const render270,9027
  void OperationDAG<OperationType::log>::render(Surface& surf) const render307,10549
  void OperationDAG<OperationType::pow>::render(Surface& surf) const render326,11198
  void OperationDAG<OperationType::time>::render(Surface& surf) const render351,12072
  void OperationDAG<OperationType::copy>::render(Surface& surf) constrender354,12204
  void OperationDAG<OperationType::integrate>::render(Surface& surf) constrender357,12328
  void OperationDAG<OperationType::differentiate>::render(Surface& surf) const render364,12590
  void OperationDAG<OperationType::sqrt>::render(Surface& surf) const render367,12755
  void OperationDAG<OperationType::data>::render(Surface& surf) const render400,13910
  void OperationDAG<OperationType::exp>::render(Surface& surf) const render410,14375
  void OperationDAG<OperationType::ln>::render(Surface& surf) const render417,14661
  void OperationDAG<OperationType::sin>::render(Surface& surf) constrender424,14945
  void OperationDAG<OperationType::cos>::render(Surface& surf) constrender431,15230
  void OperationDAG<OperationType::tan>::render(Surface& surf) constrender438,15515
  void OperationDAG<OperationType::asin>::render(Surface& surf) constrender445,15800
  void OperationDAG<OperationType::acos>::render(Surface& surf) constrender452,16099
  void OperationDAG<OperationType::atan>::render(Surface& surf) constrender459,16413
  void OperationDAG<OperationType::sinh>::render(Surface& surf) constrender466,16727
  void OperationDAG<OperationType::cosh>::render(Surface& surf) constrender473,17014
  void OperationDAG<OperationType::tanh>::render(Surface& surf) constrender480,17301

engine/equations.cc,6306
namespace MathDAGMathDAG26,823
    struct ParenIfParenIf33,984
      ostream& o;o35,1009
      bool c;c36,1027
      ParenIf(ostream& o, bool c): o(o), c(c)  {if (c) o<<"\\left(";}ParenIf37,1041
      ~ParenIf() {if (c) o<<"\\right)";}~ParenIf38,1111
    struct InvalidCharInvalidChar41,1160
      bool operator()(char c) const {return !isalnum(c) && c!='_';}operator ()43,1189
    string validMatlabIdentifier(string name)validMatlabIdentifier46,1265
    struct VariableDefOrderVariableDefOrder55,1569
      unsigned maxOrder;maxOrder57,1603
      VariableDefOrder(unsigned maxOrder): maxOrder(maxOrder) {}VariableDefOrder58,1628
      bool operator()(const VariableDAG* x, const VariableDAG* y) {operator ()59,1693
  string mathrm(const string& nm)mathrm67,1878
  string latex(double x)latex81,2307
  VariableValue ConstantDAG::addEvalOpsaddEvalOps93,2584
  ostream& VariableDAG::latex(ostream& o) constlatex114,3284
  ostream& VariableDAG::matlab(ostream& o) constmatlab124,3497
  VariableValue VariableDAG::addEvalOpsaddEvalOps135,3793
  VariableValue IntegralInputVariableDAG::addEvalOpsaddEvalOps154,4446
  OperationDAGBase* OperationDAGBase::create(Type type, const string& name)create174,5064
  int OperationDAGBase::order(unsigned maxOrder) constorder208,6628
    void cumulate(EvalOpVector& ev, VariableValue& r, const vector<vector<VariableValue> >& argIdx,cumulate230,7253
  VariableValue OperationDAGBase::addEvalOpsaddEvalOps265,8654
  ostream& OperationDAG<OperationType::constant>::matlab(ostream& o) constmatlab360,12225
  ostream& OperationDAG<OperationType::add>::matlab(ostream& o) constmatlab366,12343
  ostream& OperationDAG<OperationType::subtract>::matlab(ostream& o) constmatlab386,12867
  ostream& OperationDAG<OperationType::multiply>::matlab(ostream& o) constmatlab410,13447
  ostream& OperationDAG<OperationType::divide>::matlab(ostream& o) constmatlab430,13998
  ostream& OperationDAG<OperationType::log>::matlab(ostream& o) constmatlab456,14637
  ostream& OperationDAG<OperationType::pow>::matlab(ostream& o) constmatlab464,14913
  ostream& OperationDAG<OperationType::time>::matlab(ostream& o) constmatlab471,15177
  ostream& OperationDAG<OperationType::copy>::matlab(ostream& o) constmatlab477,15290
  ostream& OperationDAG<OperationType::integrate>::matlab(ostream& o) constmatlab489,15550
  ostream& OperationDAG<OperationType::data>::matlab(ostream& o) constmatlab497,15775
  ostream& OperationDAG<OperationType::sqrt>::matlab(ostream& o) constmatlab504,15956
  ostream& OperationDAG<OperationType::exp>::matlab(ostream& o) constmatlab511,16164
  ostream& OperationDAG<OperationType::ln>::matlab(ostream& o) constmatlab523,16436
  ostream& OperationDAG<OperationType::sin>::matlab(ostream& o) constmatlab530,16641
  ostream& OperationDAG<OperationType::cos>::matlab(ostream& o) constmatlab537,16847
  ostream& OperationDAG<OperationType::tan>::matlab(ostream& o) constmatlab544,17053
  ostream& OperationDAG<OperationType::asin>::matlab(ostream& o) constmatlab551,17259
  ostream& OperationDAG<OperationType::acos>::matlab(ostream& o) constmatlab558,17467
  ostream& OperationDAG<OperationType::atan>::matlab(ostream& o) constmatlab565,17675
  ostream& OperationDAG<OperationType::sinh>::matlab(ostream& o) constmatlab572,17883
  ostream& OperationDAG<OperationType::cosh>::matlab(ostream& o) constmatlab579,18091
  ostream& OperationDAG<OperationType::tanh>::matlab(ostream& o) constmatlab586,18299
  ostream& OperationDAG<OperationType::constant>::latex(ostream& o) constlatex593,18507
  ostream& OperationDAG<OperationType::data>::latex(ostream& o) constlatex599,18632
  ostream& OperationDAG<OperationType::add>::latex(ostream& o) constlatex605,18789
  ostream& OperationDAG<OperationType::subtract>::latex(ostream& o) constlatex625,19310
  ostream& OperationDAG<OperationType::multiply>::latex(ostream& o) constlatex650,19991
  ostream& OperationDAG<OperationType::divide>::latex(ostream& o) constlatex672,20676
  ostream& OperationDAG<OperationType::log>::latex(ostream& o) constlatex697,21421
  ostream& OperationDAG<OperationType::pow>::latex(ostream& o) constlatex705,21706
  ostream& OperationDAG<OperationType::time>::latex(ostream& o) constlatex716,22047
  ostream& OperationDAG<OperationType::copy>::latex(ostream& o) constlatex722,22161
  ostream& OperationDAG<OperationType::integrate>::latex(ostream& o) constlatex734,22419
  ostream& OperationDAG<OperationType::sqrt>::latex(ostream& o) constlatex742,22628
  ostream& OperationDAG<OperationType::exp>::latex(ostream& o) constlatex749,22836
  ostream& OperationDAG<OperationType::ln>::latex(ostream& o) constlatex761,23121
  ostream& OperationDAG<OperationType::sin>::latex(ostream& o) constlatex768,23338
  ostream& OperationDAG<OperationType::cos>::latex(ostream& o) constlatex775,23557
  ostream& OperationDAG<OperationType::tan>::latex(ostream& o) constlatex782,23776
  ostream& OperationDAG<OperationType::asin>::latex(ostream& o) constlatex789,23995
  ostream& OperationDAG<OperationType::acos>::latex(ostream& o) constlatex796,24218
  ostream& OperationDAG<OperationType::atan>::latex(ostream& o) constlatex803,24441
  ostream& OperationDAG<OperationType::sinh>::latex(ostream& o) constlatex810,24664
  ostream& OperationDAG<OperationType::cosh>::latex(ostream& o) constlatex817,24885
  ostream& OperationDAG<OperationType::tanh>::latex(ostream& o) constlatex824,25106
  SystemOfEquations::SystemOfEquations(const Minsky& m): minsky(m)SystemOfEquations830,25313
  shared_ptr<VariableDAG> SystemOfEquations::makeDAG(const string& valueId, int scope, const string& name, VariableType::Type type)makeDAG925,29659
  NodePtr SystemOfEquations::makeDAG(const OperationPtr& op)makeDAG946,30497
  NodePtr SystemOfEquations::getNodeFromWire(int wire)getNodeFromWire995,32193
  ostream& SystemOfEquations::latex(ostream& o) constlatex1027,33103
  ostream& SystemOfEquations::latexWrapped(ostream& o) constlatexWrapped1056,33978
  ostream& SystemOfEquations::matlab(ostream& o) constmatlab1087,34970
  void SystemOfEquations::populateEvalOpVectorpopulateEvalOpVector1130,36165
  void SystemOfEquations::processGodleyTableprocessGodleyTable1179,38000

engine/evalGodley.h,1271
#define EVALGODLEY_HEVALGODLEY_H20,729
namespace minskyminsky32,949
  class EvalGodleyEvalGodley36,995
    array<int> sidx, fidx;sidx39,1096
    array<int> sidx, fidx;fidx39,1096
    array<double> m;m40,1123
    array<int> initIdx;initIdx43,1218
    EvalGodley():  compatibility(false) {}EvalGodley60,1809
    bool compatibility;compatibility63,1987
  template <class T>  class GodleyIteratorAdaptorGodleyIteratorAdaptor68,2063
    T it;it70,2117
    GodleyIteratorAdaptor(const T& it): it(it) {}GodleyIteratorAdaptor72,2137
    void operator++() {++it;}operator ++73,2187
    bool operator!=(const GodleyIteratorAdaptor& x) constoperator !=74,2217
    int id() const {return it->id();}id77,2299
    string valueId(const std::string& x) const {return it->valueId(x);}valueId86,2727
  template <class T> GodleyIteratorAdaptor<T> makeGodleyIt(const T& it)makeGodleyIt89,2805
  struct SharedColumnCheck: public GodleyAssetClassSharedColumnCheck93,2968
    std::map<string, AssetClass> colAssetType;colAssetType97,3083
    std::set<string> sharedCol;sharedCol99,3189
    ConstMap<string, std::map<string, double> > colDef;colDef108,3565
  template <class GodleyIterator> void EvalGodley::initialiseGodleysinitialiseGodleys119,3900

engine/latexMarkup.h,151
#define LATEXMARKUP_HLATEXMARKUP_H21,731
namespace minskyminsky24,772
  inline std::string latexToPango(const std::string& x) latexToPango29,975

engine/latexMarkup.cc,1115
  struct SymbolSymbol31,869
    const char* first, *second;first33,889
    const char* first, *second;second33,889
    symbolData[]={symbolData35,925
  map<string,string> populateSymbols(Symbol symbs[], size_t nSyms)populateSymbols642,12771
  map<string,string> latexSymbols=populateSymbolslatexSymbols650,12962
  string parseLaTeXSym(const char*& input)parseLaTeXSym656,13247
  struct Result: public stringResult688,14105
    vector<string> stack;stack690,14140
    vector<bool> popMore; // if true, then pop will pop the next item of stackpopMore691,14166
    Result(const string& x=""): string(x) {}Result693,14246
    void push_back(const string& x,bool popAgain=false)push_back695,14292
    void push(const string& x, const char*& input)push703,14532
    void pop()pop738,15420
    void process1arg(const string& tag, const char*& input)process1arg750,15730
    string parseOpt(const char*& input)parseOpt762,16075
    void processLaTeX(const char*& input)processLaTeX772,16294
namespace minskyminsky833,17977
  string latexToPango(const char* input)latexToPango835,17996

engine/variableValue.cc,264
namespace minskyminsky28,897
  VariableValue& VariableValue::allocValue()allocValue33,1014
  double& VariableValue::valRef()valRef59,1635
  double VariableValue::initValueinitValue80,2170
  void VariableValue::reset(const VariableValues& v)reset103,2923

engine/equations.h,6402
#define EQUATIONS_HEQUATIONS_H25,847
namespace minskyminsky39,1086
  struct IntegralIntegral44,1206
    VariableValue stock;stock46,1228
    VariableValue input;input47,1253
    IntOp* operation; //< reference to the interal operation objectoperation48,1278
    Integral(VariableValue input=VariableValue()):Integral49,1346
namespace MathDAGMathDAG55,1476
  struct LaTeXManipLaTeXManip64,1674
    const Node& node;node66,1698
    LaTeXManip(const Node& node): node(node) {}LaTeXManip67,1720
  struct MatlabManipMatlabManip70,1774
    const Node& node;node72,1799
    MatlabManip(const Node& node): node(node) {}MatlabManip73,1821
  struct NodeNode82,2118
    LaTeXManip latex() const {return LaTeXManip(*this);}latex110,3535
    MatlabManip matlab() const {return MatlabManip(*this);}matlab111,3592
    mutable VariableValue result;result119,4012
    Node(): result(VariableType::flow) {}Node121,4047
  typedef std::shared_ptr<Node> NodePtr;NodePtr124,4095
  struct WeakNodePtrWeakNodePtr126,4182
    Node* payload;payload128,4207
    Node& operator*() {return *payload;}operator *129,4226
    const Node& operator*() const {return *payload;}operator *130,4267
    Node* operator->() {return payload;}operator ->131,4320
    const Node* operator->() const {return payload;}operator ->132,4361
    WeakNodePtr operator=(const NodePtr& x)operator =133,4414
    WeakNodePtr operator=(Node* x)operator =135,4495
    WeakNodePtr(): payload(nullptr) {}WeakNodePtr137,4561
    WeakNodePtr(const std::shared_ptr<T>& x): payload(x.get()) {}WeakNodePtr139,4623
    operator bool() const {return payload!=nullptr;}operator bool140,4689
  inline ostream& operator<<(ostream& o, LaTeXManip m)operator <<143,4748
  inline ostream& operator<<(ostream& o, MatlabManip m)operator <<145,4831
  struct ConstantDAG: public NodeConstantDAG149,5020
    double value;value151,5058
    ConstantDAG(double value=0): value(value) {}ConstantDAG152,5076
    void render(ecolab::cairo::Surface& surf) const override;override157,5385
                             const VariableValue&) const override;override159,5532
    NodePtr derivative(SystemOfEquations&) const override;override160,5599
  class VariableDAG: public Node, public VariableTypeVariableDAG163,5664
    string valueId;valueId166,5732
    int scope=-1; ///< namespace for this variablescope167,5752
    Type type=undefined;type168,5803
    string name;name169,5828
    double init=0;init170,5845
    WeakNodePtr rhs;rhs171,5864
    OperationPtr intOp; /// reference to operation if this isintOp172,5885
    VariableDAG() {}VariableDAG174,6005
    VariableDAG(const string& valueId, int scope, const string& name, Type type): VariableDAG175,6026
    int order(unsigned maxOrder) const {order178,6223
    ostream& latex(ostream&) const override;override186,6438
    ostream& matlab(ostream&) const override;override187,6483
    void render(ecolab::cairo::Surface& surf) const override;override188,6529
     const VariableValue& v=VariableValue()) const override;override191,6681
    NodePtr derivative(SystemOfEquations&) const override; override194,6789
  typedef shared_ptr<VariableDAG> VariableDAGPtr;VariableDAGPtr197,6855
  struct IntegralInputVariableDAG: public VariableDAGIntegralInputVariableDAG201,7041
     const VariableValue& v=VariableValue()) const override;override205,7189
  struct OperationDAGBase: public Node, public OperationType  OperationDAGBase208,7256
    vector<vector<WeakNodePtr> > arguments;arguments210,7323
    string name;name211,7367
    double init;init212,7384
    std::shared_ptr<OperationBase> state;state213,7401
    OperationDAGBase(const string& name=""): OperationDAGBase214,7443
    int order(unsigned maxOrder) const override;override219,7637
                             const VariableValue&) const override;override221,7771
  struct OperationDAG: public OperationDAGBaseOperationDAG225,7879
    Type type() const {return T;}type227,7930
    OperationDAG(const string& name=""): OperationDAGBase(name) OperationDAG228,7964
    int BODMASlevel() const {BODMASlevel230,8091
    ostream& latex(ostream&) const override; override248,8579
    ostream& matlab(ostream& o) const override;override249,8625
    void render(ecolab::cairo::Surface& surf) const override;override250,8673
    NodePtr derivative(SystemOfEquations&) const override; override253,8782
  struct GodleyColumnDAG: public OperationDAG<OperationType::subtract>GodleyColumnDAG257,8881
    int godleyId;godleyId259,8956
    GodleyColumnDAG(): godleyId(-1) {}GodleyColumnDAG260,8974
  class SubexpressionCacheSubexpressionCache267,9241
    std::map<std::string, NodePtr > cache;cache269,9272
    std::map<std::string, VariableDAGPtr> integrationInputs;integrationInputs270,9315
    std::map<const Node*, NodePtr> reverseLookupCache;reverseLookupCache271,9376
    std::string key(const OperationBase& x) const {key273,9441
    std::string key(const VariableBase& x) const {key276,9537
    std::string key(const string& x) const {key280,9666
    bool exists(const T& x) {return cache.count(key(x));}exists284,9763
    NodePtr operator[](const T& x) const {operator []286,9844
    const NodePtr& insert(const T& x, const NodePtr& n) {insert294,10038
    void insertIntegralInput(const string& name, const VariableDAGPtr& n) {insertIntegralInput298,10201
    VariableDAGPtr getIntegralInput(const string& name) const {getIntegralInput302,10380
    size_t size() const {return cache.size()+integrationInputs.size();}size309,10610
    NodePtr reverseLookup(const Node& x) const {reverseLookup311,10775
    NodePtr insertAnonymous(NodePtr x) {insertAnonymous320,11056
  class SystemOfEquationsSystemOfEquations327,11204
    SubexpressionCache expressionCache;expressionCache329,11234
    vector<VariableDAG*> variables;variables331,11307
    vector<VariableDAG*> integrationVariables;integrationVariables332,11343
    set<string> processedColumns; // to avoid double counting shared columnsprocessedColumns333,11390
    const Minsky& minsky;minsky335,11468
    map<int, int> portToOperation;portToOperation336,11494
    shared_ptr<VariableDAG> makeDAG(VariableBase& v)makeDAG340,11719
  NodePtr OperationDAG<T>::derivative(SystemOfEquations& se) constderivative387,13685

engine/flowCoef.h,208
#define FLOWCOEF_HFLOWCOEF_H20,727
namespace minskyminsky23,765
  struct FlowCoefFlowCoef27,854
    double coef;coef29,876
    std::string name;name30,893
    FlowCoef(): coef(0) {}FlowCoef31,915

engine/derivative.cc,4308
namespace MathDAGMathDAG29,910
    struct Expr: public NodePtrExpr34,1008
      SubexpressionCache& cache; //for anonymous nodescache36,1046
      Expr(SubexpressionCache& cache, const NodePtr& x): Expr37,1101
      Expr(SubexpressionCache& cache, const shared_ptr<OperationDAGBase>& x):Expr39,1220
      Expr(SubexpressionCache& cache, const Node& x): Expr41,1359
      Expr(SubexpressionCache& cache, const WeakNodePtr& x): Expr43,1485
      shared_ptr<OperationDAGBase> newNode(OperationType::Type type) const {newNode46,1620
      Expr operator+(const NodePtr& x) const {operator +52,1830
      Expr operator-(const NodePtr& x) const {operator -59,2097
      Expr operator*(const NodePtr& x) const {operator *66,2369
      Expr operator/(const NodePtr& x) const {operator /73,2641
    inline Expr operator+(const NodePtr& x, const Expr& y) {operator +82,2919
    inline Expr operator+(const Expr& x, const Expr& y) {operator +85,3004
    inline Expr operator+(double x, const Expr& y) {operator +88,3095
    inline Expr operator-(const NodePtr& x, const Expr& y) {operator -92,3199
    inline Expr operator-(const Expr& x, const Expr& y) {operator -95,3308
    inline Expr operator-(double x, const Expr& y) {operator -98,3399
    inline Expr operator-(const Expr& x, double y) {operator -101,3502
    inline Expr operator*(const NodePtr& x, const Expr& y) {operator *105,3606
    inline Expr operator*(const Expr& x, const Expr& y) {operator *108,3691
    inline Expr operator*(double x, const Expr& y) {operator *111,3782
    inline Expr operator/(const Expr& x, const Expr& y) {operator /115,3886
    inline Expr operator/(const NodePtr& x, const Expr& y) {operator /118,3977
    inline Expr operator/(double x, const Expr& y) {operator /121,4077
    inline Expr log(const Expr& x) {log125,4181
    inline Expr exp(const Expr& x) {exp131,4359
    inline Expr sin(const Expr& x) {sin136,4537
    inline Expr cos(const Expr& x) {cos142,4716
    inline Expr sinh(const Expr& x) {sinh147,4894
    inline Expr cosh(const Expr& x) {cosh153,5075
    inline Expr sqrt(const Expr& x) {sqrt159,5256
    struct CachedOp: std::shared_ptr<OperationDAGBase>CachedOp166,5474
      CachedOp(SubexpressionCache& ec):CachedOp168,5535
  NodePtr VariableDAG::derivative(SystemOfEquations& se) constderivative175,5694
  NodePtr ConstantDAG::derivative(SystemOfEquations& se) constderivative177,5790
  string differentiateName(const string& x)differentiateName180,5887
  NodePtr SystemOfEquations::chainRule(const Expr& x, const Expr& deriv)chainRule209,6665
  NodePtr SystemOfEquations::derivative(const VariableDAG& expr)derivative222,6954
  NodePtr SystemOfEquations::derivative(const ConstantDAG&)derivative243,7648
  NodePtr SystemOfEquations::derivativederivative249,7748
  NodePtr SystemOfEquations::derivative<>derivative256,7886
  NodePtr SystemOfEquations::derivativederivative273,8468
  NodePtr SystemOfEquations::derivativederivative286,8909
  NodePtr SystemOfEquations::derivativederivative318,9913
  NodePtr SystemOfEquations::derivative(const OperationDAG<OperationType::log>& expr)derivative350,10953
  NodePtr SystemOfEquations::derivativederivative371,11561
  NodePtr SystemOfEquations::derivativederivative392,12153
  NodePtr SystemOfEquations::derivativederivative399,12282
  NodePtr SystemOfEquations::derivativederivative409,12537
  NodePtr SystemOfEquations::derivativederivative419,12810
  NodePtr SystemOfEquations::derivativederivative429,13094
  NodePtr SystemOfEquations::derivativederivative436,13268
  NodePtr SystemOfEquations::derivativederivative444,13471
  NodePtr SystemOfEquations::derivativederivative453,13737
  NodePtr SystemOfEquations::derivativederivative466,14016
  NodePtr SystemOfEquations::derivative<>derivative479,14298
  NodePtr SystemOfEquations::derivative<>derivative493,14587
  NodePtr SystemOfEquations::derivative<>derivative507,14904
  NodePtr SystemOfEquations::derivative<>derivative520,15197
  NodePtr SystemOfEquations::derivative<>derivative533,15491
  NodePtr SystemOfEquations::derivative<>derivative546,15780
  NodePtr SystemOfEquations::derivative<>derivative559,16067
  NodePtr SystemOfEquations::derivative<>derivative572,16354

engine/flowCoef.cc,134
namespace minskyminsky26,809
  FlowCoef::FlowCoef(const string& formula)FlowCoef28,828
  string FlowCoef::str() conststr55,1515

engine/coverage.h,258
namespace minskyminsky10,200
  struct Coverage: public cachedDBM<string,unsigned>Coverage13,245
    Coverage& operator=(const Coverage&) {return *this;}operator =16,366
    Coverage(const Coverage&) {}Coverage17,423
    Coverage() {}Coverage18,456

engine/variableValue.h,1480
#define VARIABLE_VALUEVARIABLE_VALUE20,731
namespace minskyminsky27,870
  class VariableValue: public VariableTypeVariableValue32,938
    Type m_type;m_type36,1033
    int m_idx; /// index into value vectorm_idx37,1050
    bool lhs() const {lhs45,1229
    bool temp() const {temp48,1332
    bool isFlowVar() const {isFlowVar51,1490
    Type type() const {return m_type;}type56,1575
    std::string init;init59,1658
    bool godleyOverridden;godleyOverridden61,1681
    std::string name; // full marked up name of this variablename62,1708
    double value() const {value64,1771
    int idx() const {return m_idx;}idx67,1861
    VariableValue(Type type=VariableType::undefined, const std::string& name="", const std::string& init=""): VariableValue69,1898
    const VariableValue& operator=(double x) {valRef()=x; return *this;}operator =72,2088
    const VariableValue& operator+=(double x) {valRef()+=x; return *this;}operator +=73,2161
    const VariableValue& operator-=(double x) {valRef()-=x; return *this;}operator -=74,2236
    double initValue(const VariableValues& v) const {initValue84,2677
  struct ValueVectorValueVector91,2856
    static std::vector<double> stockVars;stockVars95,3008
    static std::vector<double> flowVars;flowVars99,3221
  struct VariableValues: public ConstMap<std::string, VariableValue>VariableValues102,3268
    VariableValues() {clear();}VariableValues104,3341
    void clear() {clear105,3373

engine/evalGodley.cc,477
namespace minskyminsky25,785
    void throwInvalidAssetLiabilityPair(const string& name)throwInvalidAssetLiabilityPair29,820
  void SharedColumnCheck::checkShared(const string& name, AssetClass ac)checkShared36,999
  bool SharedColumnCheck::updateColDefs(const string& col, const FlowCoef& fc)updateColDefs60,1745
  void SharedColumnCheck::checkSharedColDefs() constcheckSharedColDefs70,2004
  void EvalGodley::eval(double sv[], const double fv[]) consteval84,2517

engine/coverage.cc,158
namespace minskyminsky7,136
  string Coverage::key(const string& file, int line) key13,220
  void Coverage::add(const string& file, int line) add17,315

engine/evalOp.cc,8983
#define OPNAMEDEFOPNAMEDEF19,708
#define finite finite32,929
  inline double sqr(double x) {return x*x;}sqr37,973
namespace minskyminsky40,1020
  void EvalOpBase::reset()reset43,1040
  template <> int EvalOp<OperationType::constant>::numArgs() const {return 0;}numArgs49,1177
  template <> int EvalOp<OperationType::time>::numArgs() const {return 0;}numArgs50,1256
  template <> int EvalOp<OperationType::copy>::numArgs() const {return 1;}numArgs51,1331
  template <> int EvalOp<OperationType::integrate>::numArgs() const {return 1;}numArgs52,1406
  template <> int EvalOp<OperationType::data>::numArgs() const {return 1;}numArgs53,1486
  template <> int EvalOp<OperationType::sqrt>::numArgs() const {return 1;}numArgs54,1561
  template <> int EvalOp<OperationType::exp>::numArgs() const {return 1;}numArgs55,1636
  template <> int EvalOp<OperationType::ln>::numArgs() const {return 1;}numArgs56,1710
  template <> int EvalOp<OperationType::log>::numArgs() const {return 2;}numArgs57,1783
  template <> int EvalOp<OperationType::pow>::numArgs() const {return 2;}numArgs58,1857
  template <> int EvalOp<OperationType::sin>::numArgs() const {return 1;}numArgs59,1931
  template <> int EvalOp<OperationType::cos>::numArgs() const {return 1;}numArgs60,2005
  template <> int EvalOp<OperationType::tan>::numArgs() const {return 1;}numArgs61,2079
  template <> int EvalOp<OperationType::asin>::numArgs() const {return 1;}numArgs62,2153
  template <> int EvalOp<OperationType::acos>::numArgs() const {return 1;}numArgs63,2228
  template <> int EvalOp<OperationType::atan>::numArgs() const {return 1;}numArgs64,2303
  template <> int EvalOp<OperationType::sinh>::numArgs() const {return 1;}numArgs65,2378
  template <> int EvalOp<OperationType::cosh>::numArgs() const {return 1;}numArgs66,2453
  template <> int EvalOp<OperationType::tanh>::numArgs() const {return 1;}numArgs67,2528
  template <> int EvalOp<OperationType::add>::numArgs() const {return 2;}numArgs68,2603
  template <> int EvalOp<OperationType::subtract>::numArgs() const {return 2;}numArgs69,2677
  template <> int EvalOp<OperationType::multiply>::numArgs() const {return 2;}numArgs70,2756
  template <> int EvalOp<OperationType::divide>::numArgs() const {return 2;}numArgs71,2835
  template <> int EvalOp<OperationType::numOps>::numArgs() const {return 0;}numArgs72,2912
  void EvalOpBase::eval(double fv[], const double sv[])eval75,2991
  void EvalOpBase::deriv(double df[], const double ds[],deriv103,3716
  double ConstantEvalOp::evaluate(double in1, double in2) constevaluate141,5100
  double EvalOp<OperationType::constant>::evaluate(double in1, double in2) constevaluate144,5196
  double EvalOp<OperationType::constant>::d1(double x1, double x2) constd1147,5341
  double EvalOp<OperationType::constant>::d2(double x1, double x2) constd2150,5442
  double EvalOpBase::t;t153,5530
  double EvalOp<OperationType::time>::evaluate(double in1, double in2) constevaluate156,5569
  double EvalOp<OperationType::time>::d1(double x1, double x2) constd1159,5675
  double EvalOp<OperationType::time>::d2(double x1, double x2) constd2162,5772
  double EvalOp<OperationType::copy>::evaluate(double in1, double in2) constevaluate168,5872
  double EvalOp<OperationType::copy>::d1(double x1, double x2) constd1171,5979
  double EvalOp<OperationType::copy>::d2(double x1, double x2) constd2174,6076
  EvalOp<OperationType::integrate>::evaluate(double in1, double in2) constevaluate178,6181
  double EvalOp<OperationType::integrate>::d1(double x1, double x2) constd1181,6342
  double EvalOp<OperationType::integrate>::d2(double x1, double x2) constd2184,6445
  EvalOp<OperationType::data>::evaluate(double in1, double in2) constevaluate188,6556
  double EvalOp<OperationType::data>::d1(double x1, double x2) constd1191,6710
  double EvalOp<OperationType::data>::d2(double x1, double x2) constd2194,6856
  double EvalOp<OperationType::sqrt>::evaluate(double in1, double in2) constevaluate198,6955
  double EvalOp<OperationType::sqrt>::d1(double x1, double x2) constd1201,7070
  double EvalOp<OperationType::sqrt>::d2(double x1, double x2) constd2204,7180
  double EvalOp<OperationType::exp>::evaluate(double in1, double in2) constevaluate208,7278
  double EvalOp<OperationType::exp>::d1(double x1, double x2) constd1211,7391
  double EvalOp<OperationType::exp>::d2(double x1, double x2) constd2214,7495
  double EvalOp<OperationType::ln>::evaluate(double in1, double in2) constevaluate218,7592
  double EvalOp<OperationType::ln>::d1(double x1, double x2) constd1221,7704
  double EvalOp<OperationType::ln>::d2(double x1, double x2) constd2224,7802
  double EvalOp<OperationType::log>::evaluate(double in1, double in2) constevaluate228,7898
  double EvalOp<OperationType::log>::d1(double x1, double x2) constd1231,8022
  double EvalOp<OperationType::log>::d2(double x1, double x2) constd2234,8133
  double EvalOp<OperationType::pow>::evaluate(double in1, double in2) constevaluate238,8259
  double EvalOp<OperationType::pow>::d1(double x1, double x2) constd1241,8376
  double EvalOp<OperationType::pow>::d2(double x1, double x2) constd2244,8489
  double EvalOp<OperationType::sin>::evaluate(double in1, double in2) constevaluate248,8607
  double EvalOp<OperationType::sin>::d1(double x1, double x2) constd1251,8720
  double EvalOp<OperationType::sin>::d2(double x1, double x2) constd2254,8824
  double EvalOp<OperationType::cos>::evaluate(double in1, double in2) constevaluate258,8921
  double EvalOp<OperationType::cos>::d1(double x1, double x2) constd1261,9034
  double EvalOp<OperationType::cos>::d2(double x1, double x2) constd2264,9139
  double EvalOp<OperationType::tan>::evaluate(double in1, double in2) constevaluate268,9236
  double EvalOp<OperationType::tan>::d1(double x1, double x2) constd1271,9349
  double EvalOp<OperationType::tan>::d2(double x1, double x2) constd2274,9460
  double EvalOp<OperationType::asin>::evaluate(double in1, double in2) constevaluate278,9557
  double EvalOp<OperationType::asin>::d1(double x1, double x2) constd1281,9672
  double EvalOp<OperationType::asin>::d2(double x1, double x2) constd2284,9787
  double EvalOp<OperationType::acos>::evaluate(double in1, double in2) constevaluate288,9885
  double EvalOp<OperationType::acos>::d1(double x1, double x2) constd1291,10000
  double EvalOp<OperationType::acos>::d2(double x1, double x2) constd2294,10116
  double EvalOp<OperationType::atan>::evaluate(double in1, double in2) constevaluate298,10214
  double EvalOp<OperationType::atan>::d1(double x1, double x2) constd1301,10329
  double EvalOp<OperationType::atan>::d2(double x1, double x2) constd2304,10438
  double EvalOp<OperationType::sinh>::evaluate(double in1, double in2) constevaluate308,10536
  double EvalOp<OperationType::sinh>::d1(double x1, double x2) constd1311,10651
  double EvalOp<OperationType::sinh>::d2(double x1, double x2) constd2314,10757
  double EvalOp<OperationType::cosh>::evaluate(double in1, double in2) constevaluate318,10855
  double EvalOp<OperationType::cosh>::d1(double x1, double x2) constd1321,10970
  double EvalOp<OperationType::cosh>::d2(double x1, double x2) constd2324,11076
  double EvalOp<OperationType::tanh>::evaluate(double in1, double in2) constevaluate328,11174
  double EvalOp<OperationType::tanh>::d1(double x1, double x2) constd1331,11289
  double EvalOp<OperationType::tanh>::d2(double x1, double x2) constd2334,11402
  double EvalOp<OperationType::add>::evaluate(double in1, double in2) constevaluate338,11500
  double EvalOp<OperationType::add>::d1(double x1, double x2) constd1341,11610
  double EvalOp<OperationType::add>::d2(double x1, double x2) constd2344,11706
  double EvalOp<OperationType::subtract>::evaluate(double in1, double in2) constevaluate348,11803
  double EvalOp<OperationType::subtract>::d1(double x1, double x2) constd1351,11918
  double EvalOp<OperationType::subtract>::d2(double x1, double x2) constd2354,12019
  double EvalOp<OperationType::multiply>::evaluate(double in1, double in2) constevaluate358,12122
  double EvalOp<OperationType::multiply>::d1(double x1, double x2) constd1361,12237
  double EvalOp<OperationType::multiply>::d2(double x1, double x2) constd2364,12339
  double EvalOp<OperationType::divide>::evaluate(double in1, double in2) constevaluate368,12442
  double EvalOp<OperationType::divide>::d1(double x1, double x2) constd1371,12555
  double EvalOp<OperationType::divide>::d2(double x1, double x2) constd2374,12657
  double EvalOp<OperationType::numOps>::evaluate(double in1, double in2) constevaluate379,12768
  double EvalOp<OperationType::numOps>::d1(double x1, double x2) constd1382,12926
  double EvalOp<OperationType::numOps>::d2(double x1, double x2) constd2385,13068
  EvalOpBase* EvalOpBase::createcreate388,13199
  EvalOpPtr::EvalOpPtr(OperationType::Type op,EvalOpPtr450,15353

gcov-report.pl,0

str.h,402
#define STR_HSTR_H20,722
namespace minskyminsky26,815
  template <class T> std::string str(T x) {str29,909
  inline bool IsNotalnum(char x) {return !std::isalnum(x);}IsNotalnum36,1046
  inline void stripNonAlnum(std::string& x) {stripNonAlnum38,1152
  inline std::string trimWS(const std::string& s)trimWS43,1322
  inline std::string stripActive(const std::string& s) {stripActive57,1771

makeRefDb.pl,0

minskyVersion.h,43
#define MINSKY_VERSION MINSKY_VERSION1,0
