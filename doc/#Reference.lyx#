#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package none
\inputencoding auto
\fontencoding default
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 0
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Reference
\end_layout

\begin_layout Section
Operations
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operations"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/DesignIcons.png

\end_inset


\end_layout

\begin_layout Standard
The first 8 icons on the Operations bar—from data importing to the simulation
 time–are immediately activated by clicking on them.
 The remaining mathematical and data operations are stored on pop-up sideway
 menus, which are activated when you click on the menu's icon.
 For example, clicking on the 
\begin_inset Graphics
	filename images/Plus.svg

\end_inset

 symbol brings up the Binary Operators menu:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/DesignIconsWithBinaryOperatorsMenu.png

\end_inset


\end_layout

\begin_layout Subsection
Special constants
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:euler"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Operation:pi"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Operation:zero"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Operation:one"

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "Operation:inf"

\end_inset


\end_layout

\begin_layout Standard
Some special constants (
\begin_inset Formula $e=2.72\ldots$
\end_inset

, 
\begin_inset Formula $\pi=3.14\ldots$
\end_inset

, 0, 1, 
\begin_inset Formula $\infty$
\end_inset

) can be placed on the canvas, via two methods:
\end_layout

\begin_layout Itemize
By clicking on the relevant icon on the 
\emph on
Fundamental Constants (
\begin_inset Quotes eld
\end_inset

constop
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By typing the constant name on the canvas, and pressing Enter (or clicking
 OK) in the variable definition window.
 These names are: 
\shape italic
Euler
\shape default
 for 
\begin_inset Formula $e=2.72\ldots$
\end_inset

; 
\shape italic
pi
\shape default
 for 
\begin_inset Formula $\pi=3.14\ldots$
\end_inset

; 
\shape italic
inf
\shape default
 for 
\begin_inset Formula $\infty$
\end_inset

; and the percent symbol for the percent operator (which multiplies the
 input by 100).
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/FundamentalConstants.png

\end_inset


\end_layout

\begin_layout Subsubsection
Percent
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:percent"

\end_inset

 The percent operator takes one input, and multiplies its elements by 100.
 It is useful for converting fractions into percentages for display purposes.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/PercentOperator.png

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Fundamental Constants (
\begin_inset Quotes eld
\end_inset

constop
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By pressing the percent key anywhere on the wiring canvas.
 
\end_layout

\begin_layout Subsection
add +
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:add"

\end_inset

 Add multiple numbers together.
\end_layout

\begin_layout Standard
The input ports allow multiple wires, which are all summed.
 If an input port is unwired, it is equivalent to setting it to zero.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/PlusSymbol.png

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Binary Operations (
\begin_inset Quotes eld
\end_inset

binop
\begin_inset Quotes erd
\end_inset

) 
\emph default
toolbar; or 
\end_layout

\begin_layout Itemize
By pressing the plus key anywhere on the wiring canvas.
 
\end_layout

\begin_layout Subsection
subtract 
\begin_inset Formula $-$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:subtract"

\end_inset

 Subtract two numbers.
 The input ports allow multiple wires, which are summed prior to the subtraction
 being carried out.
 If an input port is unwired, it is equivalent to setting it to zero.
 Note the small `+' and `
\begin_inset Formula $-$
\end_inset

' signs on the input ports indicating which terms are added or subtracted
 from the result.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/MinusKey.png

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Binary Operations (
\begin_inset Quotes eld
\end_inset

binop
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By pressing the minus key anywhere on the wiring canvas, 
\shape italic
followed by pressing the Enter key, or clicking on OK in the text input
 window
\shape default
.
 The reason for requiring the Enter key to be pressed—rather than immediately
 placing the minus operator on the keyboard, as with the plus and multiply
 operators—is that a user may wish to enter a negative number as a constant.
 
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/MinusTextWindow.png

\end_inset


\end_layout

\begin_layout Subsection
multiply 
\begin_inset Formula $\times$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:multiply"

\end_inset

 Multiply numbers with each other.
 The input ports allow multiple wires, which are all multiplied together.
 If an input port is unwired, it is equivalent to setting it to one.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/MultiplyKey.png

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Binary Operations (
\begin_inset Quotes eld
\end_inset

binop
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By pressing the multiply (asterisk: *) key anywhere on the wiring canvas.
 
\end_layout

\begin_layout Subsection
divide 
\begin_inset Formula $\div$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:divide"

\end_inset

 Divide a number by another.
 The input ports allow multiple wires, which are multiplied together for
 each port prior to the division being carried out.
 If an input port is unwired, it is equivalent to setting it to one.
 Note the small `
\begin_inset Formula $\times$
\end_inset

' and `
\begin_inset Formula $\div$
\end_inset

' signs indicating which port refers to the numerator and which the denominator.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/DivideKey.png

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Binary Operations (
\begin_inset Quotes eld
\end_inset

binop
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By pressing the divide key (/) anywhere on the wiring canvas.
 
\end_layout

\begin_layout Subsection
log
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:log"

\end_inset

 Take the logarithm of the 
\begin_inset Formula $x$
\end_inset

 input port, to base 
\begin_inset Formula $b$
\end_inset

.
 The base 
\begin_inset Formula $b$
\end_inset

 needs to be specified — if the natural logarithm is desired (
\begin_inset Formula $b=e$
\end_inset

), use the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
htmlref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

ln operator
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Operation:ln
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 instead.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/LogKey.png

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Binary Operations (
\begin_inset Quotes eld
\end_inset

binop
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By typing the word 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

log
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 anywhere on the wiring canvas, and then pressing the Enter key.
 
\end_layout

\begin_layout Standard
When you use the direct typing method to enter the Log operator, the text
 entry window pops up.
 This allows you to type a variable/parameter name starting with Log (like,
 for example, 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

Logical
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

.
 If you press Enter (or click on OK) with only the word Log in the window,
 the Log operator will be placed on the canvas.
\end_layout

\begin_layout Subsection
pow 
\begin_inset Formula $x^{y}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:pow"

\end_inset

 Raise one number to the power of another.
 The ports are labelled 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

, referring the the formula 
\begin_inset Formula $x^{y}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/PowerKey.png

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Binary Operations (
\begin_inset Quotes eld
\end_inset

binop
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

Pow
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 anywhere on the wiring canvas and then pressing the Enter Key (or clicking
 on OK).
 
\end_layout

\begin_layout Subsection
lt 
\begin_inset Formula $<$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:lt"

\end_inset

 Returns 0 or 1, depending on whether 
\begin_inset Formula $x<y$
\end_inset

 is true (1) or false (0).
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/LessThanKey.png

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Binary Operations (
\begin_inset Quotes eld
\end_inset

binop
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

lt
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
 
\end_layout

\begin_layout Subsection
le 
\begin_inset Formula $\le$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:le"

\end_inset

 Returns 0 or 1, depending on whether 
\begin_inset Formula $x\le y$
\end_inset

 is true (1) or false (0).
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/LessEqualKey.png

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Binary Operations (
\begin_inset Quotes eld
\end_inset

binop
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

le
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
 
\end_layout

\begin_layout Subsection
eq 
\begin_inset Formula $=$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:eq"

\end_inset

 Returns 0 or 1, depending on whether 
\begin_inset Formula $x=y$
\end_inset

 is true (1) or false (0).
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/EqualKey.png

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Binary Operations (
\begin_inset Quotes eld
\end_inset

binop
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

eq
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
 
\end_layout

\begin_layout Subsection
min
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:min"

\end_inset

 Returns the minimum of 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/minkey.png

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Binary Operations (
\begin_inset Quotes eld
\end_inset

binop
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

min
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
 
\end_layout

\begin_layout Subsection
max
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:max"

\end_inset

 Returns the maximum of 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/maxkey.png

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Binary Operations (
\begin_inset Quotes eld
\end_inset

binop
\begin_inset Quotes erd
\end_inset

) 
\emph default
toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

max
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
 
\end_layout

\begin_layout Subsection
and 
\begin_inset Formula $\wedge$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:and_"

\end_inset

 Logical and of 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

, where 
\begin_inset Formula $x\le0.5$
\end_inset

 means false, and 
\begin_inset Formula $x>0.5$
\end_inset

 means true.
 The output is 1 or 0, depending on the result being true (1) or false (0)
 respectively.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/andkey.png

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Binary Operations (
\begin_inset Quotes eld
\end_inset

binop
\begin_inset Quotes erd
\end_inset

) 
\emph default
toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

and_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 (the word and, 
\emph on
followed by an underscore
\emph default
) on the canvas and then pressing the Enter key.
 The underscore is needed because 
\begin_inset Quotes eld
\end_inset

and
\begin_inset Quotes erd
\end_inset

 is a reserved word in 
\emph on
C++,
\emph default
 the programming language in which 
\emph on
Ravel
\emph default
 is written.
\end_layout

\begin_layout Subsection
or 
\begin_inset Formula $\vee$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:or_"

\end_inset

 Logical or of 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

, where 
\begin_inset Formula $x\le0.5$
\end_inset

 means false, and 
\begin_inset Formula $x>0.5$
\end_inset

 means true.
 The output is 1 or 0, depending on the result being true (1) or false (0)
 respectively.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/or.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Binary Operations (
\begin_inset Quotes eld
\end_inset

binop
\begin_inset Quotes erd
\end_inset

) 
\emph default
toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

or_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 (the word or, 
\emph on
followed by an underscore
\emph default
) on the canvas and then pressing the Enter key.
 The underscore is needed because 
\begin_inset Quotes eld
\end_inset

or
\begin_inset Quotes erd
\end_inset

 is a reserved word in 
\emph on
C++,
\emph default
 the programming language in which 
\emph on
Ravel
\emph default
 is written.
\end_layout

\begin_layout Subsection
not 
\begin_inset Formula $\neg$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:not_"

\end_inset

 The output is 1 or 0, depending on whether 
\begin_inset Formula $x\le0.5$
\end_inset

 is true (1) or false (0) respectively.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/not.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Functions (
\begin_inset Quotes eld
\end_inset

function
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

not_
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 (the word not, 
\emph on
followed by an underscore
\emph default
) on the canvas and then pressing the Enter key.
 The underscore is needed because 
\begin_inset Quotes eld
\end_inset

not
\begin_inset Quotes erd
\end_inset

 is a reserved word in 
\emph on
C++,
\emph default
 the programming language in which 
\emph on
Ravel
\emph default
 is written.
\end_layout

\begin_layout Subsection
time 
\begin_inset Formula $t$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:time"

\end_inset

 Returns the current value of system time.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/time.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the time widget on the toolbar 
\begin_inset Graphics
	filename images/time.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

time
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Subsection
Gamma 
\begin_inset Formula $\Gamma$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:Gamma"

\end_inset

 Returns the Gamma function of its argument: 
\begin_inset Formula 
\[
\Gamma(x)=\int_{0}^{\infty}t^{x-1}e^{-t}dt
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/Gamma.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Functions (
\begin_inset Quotes eld
\end_inset

function
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

gamma
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Subsection
Factorial !
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:fact"

\end_inset

 Returns the factorial of its argument: 
\begin_inset Formula 
\begin{eqnarray*}
0! & = & 1\\
n! & = & \prod_{i=1}^{n}i\\
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/Factorial.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Functions (
\begin_inset Quotes eld
\end_inset

function
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

fact
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Standard
Note: 
\begin_inset Formula 
\[
n!=\Gamma(n+1)
\]

\end_inset

which is how it is implemented in Minsky.
\end_layout

\begin_layout Subsection
Polygamma 
\begin_inset Formula $\psi^{(n)}(x)$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:polygamma"

\end_inset

 Returns the polygamma function of the first argument 
\begin_inset Formula $x$
\end_inset

, with the order 
\begin_inset Formula $n$
\end_inset

 being given by the floor of the second argument.
 
\begin_inset Formula 
\[
\psi^{(n)}(x)=\frac{d^{n+1}}{dx^{n+1}}\ln\Gamma(x)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/Polygamma.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Binary Operations (
\begin_inset Quotes eld
\end_inset

binop
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

polygamma
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Standard

\emph on
Minsky
\emph default
 provides this function because of its relationship to the derivative of
 the Gamma function (and factorials).
\end_layout

\begin_layout Subsection
differentiate 
\begin_inset Formula $d/dt$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:differentiate"

\end_inset

 Symbolically differentiates its input with respect to system time, producing
 d/dt[input].
 For further explanation regarding differentiation, see 
\begin_inset CommandInset href
LatexCommand href
name "this wikipedia page"
target "https://en.wikipedia.org/wiki/Derivative"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/differential.svg

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% 
\backslash
subsection{data }
\backslash
label{Operation:data} 
\backslash
buttonIcon{data.eps} A
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% data interpolation widget.
 The data can be imported from a file
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% containing two values on each line, eg:
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% 
\backslash
begin{quote}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%   
\backslash
begin{tabular}{rr}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%0.1 &0.3
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%0.5 &0.7
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%0.9 &1
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%
\backslash
end{tabular}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% 
\backslash
end{quote}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% If the input is less than the minimum key value (0.1 here), then the
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% operation outputs the corresponding value (0.3).
 Similarly if the
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% input is greater than the maximum (0.9), the corresponding value (1)
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% is output.
 If it lies in between two keys (eg 0.2), the the output
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% is linearly interpolated (0.4).
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% Alternatively, the data block can be initialised by a random number
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% generator, which is a way of introducing random numbers
\backslash
index{random
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% numbers} into the simulation.
 The parameters, the minimum and
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% maximum values of the function's domain, and the number of random
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% samples over that domain, are all required.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% 
\backslash
begin{center}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%   
\backslash
begin{tabular}{cc}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%  
\backslash
resizebox{5.17cm}{!}{
\backslash
includegraphics{images/initRandom.eps}} &
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%  
\backslash
resizebox{0.5
\backslash
textwidth}{!}{
\backslash
includegraphics{images/randomExample.eps}}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%  
\backslash
end{tabular}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%
\backslash
end{center}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%More formally, a data block is an empirical function, based on a
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% table of pairs of values ($x_i, y_i, i=1
\backslash
ldots n, x_{i+1}>x_i$) read
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% in from a file.
 The function's output is linearly interpolated from
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% the data, ie:
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

% 
\backslash
begin{displaymath}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%f(x) = 
\backslash
left
\backslash
{
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%
\backslash
begin{array}{cl}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%y_1 & x < x_1
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%y_n & x
\backslash
geq x_n
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%
\backslash
frac{y_i(x_{i+1}-x)+y_{i+1}(x-x_i)}{x_{i+1}-x_i} & x_i 
\backslash
leq x <
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%x_{i+1}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%
\backslash
end{array}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%
\backslash
right.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%
\backslash
end{displaymath}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
User defined function
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:userFunction"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "UserFunction"

\end_inset


\end_layout

\begin_layout Standard
A user defined function is a functioned defined by an algebraic expression.
 Support for this feature is courtesy of the wonderful 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
htmladdnormallink
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

exprtk
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

http://www.partow.net/programming/exprtk/index.html
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 library developed by Arash Partow.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/userFunction.svg

\end_inset


\end_layout

\begin_layout Standard
A user defined function has a 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
em
\end_layout

\end_inset

 name
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

, 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
em
\end_layout

\end_inset

 parameters
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 and an 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
em
\end_layout

\end_inset

 expression
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

.
 Example expressions are things like 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb'x+y'
\end_layout

\end_inset

 or 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb'sin(x)'
\end_layout

\end_inset

.
 More details of the sorts of expressions possible can be found in the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
htmlref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

User Defined Functions
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

ExprTk
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 section of the manual.
\end_layout

\begin_layout Standard
The parameters are specified as part of the name, so a user defined function
 adding x and y would be called 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb'useradd(a,y)'
\end_layout

\end_inset

 and the sin example might be called 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb'mysin(x)'
\end_layout

\end_inset

.
 Functions with up to two arguments can be wired on the canvas.
 User defined functions can call other user defined functions, so specifiying
 more than 2 parameters can be a useful thing to do.
\end_layout

\begin_layout Subsection
copy
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:copy"

\end_inset

 This just copies its input to its output, which is redundant on wiring
 diagrams, but is needed for internal purposes.
\end_layout

\begin_layout Subsection
integrate 
\begin_inset Formula $\int dt$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "IntOp"

\end_inset

 Creates an integration (or stock) variable.
 Editable attributes include the variable's name and its initial value at
 
\begin_inset Formula $t=0$
\end_inset

.
 The function to be integrated needs to be connected to the top port, labelled
 `
\begin_inset Formula $f$
\end_inset

'.
 The bottom port, labelled `0', can optionally be connected to a constant,
 parameter or variable, which is used to specify the initial value of the
 integral.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/integral.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the integrate widget 
\begin_inset Graphics
	filename images/integral.svg

\end_inset

 on the toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

integrate
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Standard
Note that the units of the integral operator are given by the units of the
 input, multiplied by the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
htmlref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

time unit
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

RungeKutta
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

, but the units of the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
em
\end_layout

\end_inset

 integral's variable
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 are user specified.
 It is an error for these to be mismatched, and running 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
em
\end_layout

\end_inset

 dimensional analysis
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 from the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
htmlref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

File menu
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

File
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 will check for the consistency of this.
 Note that the user specified units in the integral variable can be used
 to dimension up the integral if the integral variable is connected to the
 integral's input.
\end_layout

\begin_layout Subsection
sqrt 
\begin_inset Formula $\surd$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:sqrt"

\end_inset

 This produces the square root of the input value.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/squareRoot.svg

\end_inset


\end_layout

\begin_layout Standard
For example, connecting the value of 9 with the 
\begin_inset Quotes eld
\end_inset

sqrt
\begin_inset Quotes erd
\end_inset

 block will produce the value of 3.
 As with all Ravel operators, this function accepts multidimensional arguments.
\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Functions (
\begin_inset Quotes eld
\end_inset

function
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

sqrt
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
 
\end_layout

\begin_layout Subsection
exp
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:exp"

\end_inset

 Connecting a variable (for example, 
\begin_inset Quotes eld
\end_inset

time
\begin_inset Quotes erd
\end_inset

) to this block will produce the exponential function 
\begin_inset Formula $e^{x}$
\end_inset

 where x is the input variable.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/Exponential.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Functions (
\begin_inset Quotes eld
\end_inset

function
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

exp
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
 
\end_layout

\begin_layout Subsection
ln
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:ln"

\end_inset

 Produces a natural logarithm of the input, to the base of e.
 This takes the equation 
\begin_inset Formula $\log_{e}x$
\end_inset

 where 
\begin_inset Formula $x$
\end_inset

 is the input.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/ln.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Functions (
\begin_inset Quotes eld
\end_inset

function
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

ln
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
 
\end_layout

\begin_layout Subsection
sin
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:sin"

\end_inset

 Produces a sine function of the input.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/sine.svg

\end_inset


\end_layout

\begin_layout Standard
For example, connecting a 
\begin_inset Quotes eld
\end_inset

time
\begin_inset Quotes erd
\end_inset

 block to this function, and then to a graph, will produce a sine wave.
\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Functions (
\begin_inset Quotes eld
\end_inset

function
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

sin
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
 
\end_layout

\begin_layout Standard
For further explanation regarding trigonemtric functions, see 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
htmladdnormallinkfoot
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

this wikipedia page
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

https://en.wikipedia.org/wiki/Trigonometric_functions
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
cos
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:cos"

\end_inset

 Produces a cosine function of the input.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/cosine.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Functions (
\begin_inset Quotes eld
\end_inset

function
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

cos
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Standard
For example, connecting a 
\begin_inset Quotes eld
\end_inset

time
\begin_inset Quotes erd
\end_inset

 block to this function, and then to a graph, will produce a cosine wave.
 For further explanation regarding trigonemtric functions, see 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
htmladdnormallinkfoot
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

this wikipedia page
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

https://en.wikipedia.org/wiki/Trigonometric_functions
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
tan
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:tan"

\end_inset

 Produces a tangent function of the input.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/tan.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Functions (
\begin_inset Quotes eld
\end_inset

function
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

tan
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Standard
For example, connecting a 
\begin_inset Quotes eld
\end_inset

time
\begin_inset Quotes erd
\end_inset

 block to this function, and then to a graph, will produce a tangent graph.
 For further explanation regarding trigonemtric functions, see 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
htmladdnormallinkfoot
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

this wikipedia page
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

https://en.wikipedia.org/wiki/Trigonometric_functions
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
asin
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:asin"

\end_inset

 Produces an arc sine function of the input, or the inverse of the sine
 function.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/sin-1.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Functions (
\begin_inset Quotes eld
\end_inset

function
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

asin
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Standard
For further explanation regarding trigonemtric functions, see 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
htmladdnormallinkfoot
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

this wikipedia page
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

https://en.wikipedia.org/wiki/Trigonometric_functions
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
acos
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:acos"

\end_inset

 Produces an arc cosine function of the input, or the inverse of the cosine
 function.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/cos-1.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Functions (
\begin_inset Quotes eld
\end_inset

function
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

acos
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Standard
For further explanation regarding trigonemtric functions, see 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
htmladdnormallinkfoot
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

this wikipedia page
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

https://en.wikipedia.org/wiki/Trigonometric_functions
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
atan
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:atan"

\end_inset

 Produces an arc tangent function of the input, or the inverse of the tangent
 function.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/tan-1.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Functions (
\begin_inset Quotes eld
\end_inset

function
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

atan
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Standard
For further explanation regarding trigonemtric functions, see 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
htmladdnormallinkfoot
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

this wikipedia page
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

https://en.wikipedia.org/wiki/Trigonometric_functions
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
sinh
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:sinh"

\end_inset

 hyperbolic sine function 
\begin_inset Formula $\frac{e^{x}-e^{-x}}{2}$
\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/sinh.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Functions (
\begin_inset Quotes eld
\end_inset

function
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

sinh
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Subsection
cosh
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:cosh"

\end_inset

 hyperbolic cosine function 
\begin_inset Formula $\frac{e^{x}+e^{-x}}{2}$
\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/cosh.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Functions (
\begin_inset Quotes eld
\end_inset

function
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

cosh
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Subsection
tanh
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:tanh"

\end_inset

 hyperbolic tangent function 
\begin_inset Formula $\frac{e^{x}-e^{-x}}{e^{x}+e^{-x}}$
\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/tanh.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Functions (
\begin_inset Quotes eld
\end_inset

function
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

tanh
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Subsection
abs 
\begin_inset Formula $|x|$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:abs"

\end_inset

 absolute value function.
 Returns the magnitude of any entered variable.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/abs.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Functions (
\begin_inset Quotes eld
\end_inset

function
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

abs
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Subsection
floor 
\begin_inset Formula $\lfloor x\rfloor$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:floor"

\end_inset

 The greatest integer less than or equal to 
\begin_inset Formula $x$
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/floor.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Functions (
\begin_inset Quotes eld
\end_inset

function
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

floor
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Subsection
frac
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:frac"

\end_inset

 Fractional part of 
\begin_inset Formula $x$
\end_inset

, ie 
\begin_inset Formula $x-\lfloor x\rfloor$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/frac.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Functions (
\begin_inset Quotes eld
\end_inset

function
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

frac
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Section
Tensor operations
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "tensor   operations"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
tensor|operations
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In the following operations, an axis argument can be supplied in the operation
 edit dialog.
 The axis name is symbolic and available in a drop-down box in the Edit
 form from the context (right-click) menu.
 For example, if you wish to analyse change in the variable 
\emph on
Sales
\emph default
 over time, and the dates of sales are recorded on the axis 
\emph on
Month
\emph default
, then you would choose the axis Month from the drop-down box on the Edit
 form.
\end_layout

\begin_layout Standard
If the axis name is not specified, then the operation will be applied as
 though the input was flattened (unrolled to a vector), and then the result
 reshaped to the original tensor.
\end_layout

\begin_layout Subsection
sum 
\begin_inset Formula $\sum$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:sum"

\end_inset

 Sum along a given axis.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/sum.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Reductions Operations (
\begin_inset Quotes eld
\end_inset

reduction
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar 
\begin_inset Graphics
	filename images/sum.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

sum
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Standard
The same result can be achieved by collapsing the relevant Ravel axis after
 choosing 
\begin_inset Graphics
	filename images/sum.svg

\end_inset

 from the 
\begin_inset Quotes eld
\end_inset

Set next aggregation
\begin_inset Quotes erd
\end_inset

 context menu.
\end_layout

\begin_layout Subsection
product 
\begin_inset Formula $\prod$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:product"

\end_inset

 Multiply along a given axis.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/product.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Reductions Operations (
\begin_inset Quotes eld
\end_inset

reduction
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar 
\begin_inset Graphics
	filename images/sum.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

product
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Standard
The same result can be achieved by collapsing the relevant Ravel axis after
 choosing 
\begin_inset Graphics
	filename images/product.svg

\end_inset

 from the 
\begin_inset Quotes eld
\end_inset

Set next aggregation
\begin_inset Quotes erd
\end_inset

 context menu.
\end_layout

\begin_layout Subsection
infimum
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:infimum"

\end_inset

 Return the least value along a given axis.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/infimum.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Reductions Operations (
\begin_inset Quotes eld
\end_inset

reduction
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar 
\begin_inset Graphics
	filename images/sum.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

infimum
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Subsection
supremum
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:supremum"

\end_inset

 Return the greatest value along a given axis.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/supremum.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Reductions Operations (
\begin_inset Quotes eld
\end_inset

reduction
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar 
\begin_inset Graphics
	filename images/sum.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

supremum
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Subsection
any
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:any"

\end_inset

 Return 1 if any value along a given axis is nonzero, otherwise return 0
 if all are zero.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/any.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the Reductions Operations toolbar 
\begin_inset Graphics
	filename images/sum.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

any
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Subsection
all
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:all"

\end_inset

 Return 1 if all values along a given axis are nonzero, otherwise return
 0 if any are zero.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/all.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Reductions Operations (
\begin_inset Quotes eld
\end_inset

reduction
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar 
\begin_inset Graphics
	filename images/sum.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

all
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Subsection
infindex
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:infIndex"

\end_inset

 Return the index of the least value along a given axis.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/infindex.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Reductions Operations (
\begin_inset Quotes eld
\end_inset

reduction
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar 
\begin_inset Graphics
	filename images/sum.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

infIndex
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Subsection
supindex
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:supIndex"

\end_inset

 Return the index of the greatest value along a given axis.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/supindex.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Reductions Operations (
\begin_inset Quotes eld
\end_inset

reduction
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar 
\begin_inset Graphics
	filename images/sum.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

supIndex
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Subsection
running sum 
\begin_inset Formula $\sum+$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:runningSum"

\end_inset

 Computes the running sum of the input tensor along a given axis.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/runningSum.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Scan Operations (
\begin_inset Quotes eld
\end_inset

scan
\begin_inset Quotes erd
\end_inset

) 
\emph default
toolbar 
\begin_inset Graphics
	filename images/runningSum.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

runningSum
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Standard
For example, take this rank 2 tensor:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left(\begin{array}{cccc}
1 & 2 & 3 & 4\\
5 & 4 & 3 & 2\\
8 & 7 & 6 & 5
\end{array}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
The running sum of this tensor, along the horizontal dimension, is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left(\begin{array}{cccc}
1 & 3 & 6 & 10\\
5 & 9 & 12 & 14\\
8 & 15 & 21 & 26
\end{array}\right)
\]

\end_inset


\end_layout

\begin_layout Subsection
running product 
\begin_inset Formula $\prod+$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:runningProduct"

\end_inset

 Computes the running product of the input tensor along a given axis.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/runningProduct.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Scan Operations (
\begin_inset Quotes eld
\end_inset

scan
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar 
\begin_inset Graphics
	filename images/runningSum.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

runningProduct
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Standard
For example, take this rank 2 tensor:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left(\begin{array}{cccc}
1 & 2 & 3 & 4\\
5 & 4 & 3 & 2\\
8 & 7 & 6 & 5
\end{array}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
The running product of this tensor, along the horizontal dimension, is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left(\begin{array}{cccc}
1 & 2 & 6 & 24\\
5 & 20 & 60 & 120\\
8 & 56 & 336 & 1680
\end{array}\right)
\]

\end_inset


\end_layout

\begin_layout Subsection
difference 
\begin_inset Formula $\Delta^{-},\Delta^{+}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:difference"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Operation:differencePlus"

\end_inset

 Computes the nearest neighbour difference along a given direction.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/difference.svg

\end_inset


\begin_inset Graphics
	filename images/differencePlus.svg

\end_inset


\end_layout

\begin_layout Standard
These operators can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Scan Operations (
\begin_inset Quotes eld
\end_inset

scan
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar 
\begin_inset Graphics
	filename images/runningSum.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

difference
\begin_inset ERT
status open

\begin_layout Plain Layout

"
\end_layout

\end_inset

 or 
\begin_inset Quotes qld
\end_inset

differencePlus
\begin_inset Quotes qrd
\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Standard
The optional argument (
\begin_inset Formula $\delta$
\end_inset

) can be used to specify the number of neighbours to skip in computing the
 differences.
 For example if your data is monthly and you want to calculate changes per
 year, you would set 
\begin_inset Formula $\delta$
\end_inset

 to 12.
 The length of the dimension being differenced is reduced by 
\begin_inset Formula $\delta$
\end_inset

 in the result.
\end_layout

\begin_layout Standard
It comes in two different forms which differ only in how the resultant x-vector
 is calculated.
 
\begin_inset Formula $\Delta_{i}^{-}=x_{i}-x_{i-\delta}$
\end_inset

, and 
\begin_inset Formula $\Delta_{i}^{+}=x_{i+\delta}-x_{i}$
\end_inset

, where 
\begin_inset Formula $i$
\end_inset

 refers to the x-vector index.
\end_layout

\begin_layout Standard
Where there is more than one dimension to data, the user needs to specify
 the axis along which the difference operation is calculated.
\end_layout

\begin_layout Subsection
index
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:index"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/index.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Tensor Operations (
\begin_inset Quotes eld
\end_inset

tensor
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar 
\begin_inset Graphics
	filename images/innerProduct.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

index
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Standard
Returns the index within the hypecube where the input is true (ie 
\begin_inset Formula $>0.5$
\end_inset

).
 For example, where 
\begin_inset Formula 
\begin{eqnarray*}
\iota(3,3) & = & \left(\begin{array}{ccc}
0 & 3 & 6\\
1 & 4 & 7\\
2 & 5 & 8
\end{array}\right),\\
\mathrm{idx}(\iota(3,3)<5) & = & \left(\begin{array}{ccc}
0 & 3 & nan\\
1 & 4 & nan\\
2 & nan & nan
\end{array}\right),\\
\end{eqnarray*}

\end_inset

Note that the output array has the same shape as the input, with unused
 values padded with NANs (missing value).
\end_layout

\begin_layout Standard
Dimension and argument parameters are unused.
\end_layout

\begin_layout Subsection
gather
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:gather"

\end_inset


\end_layout

\begin_layout Standard
Gather collects the values at index locations indexed by the second argument.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/gather.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Tensor Operations (
\begin_inset Quotes eld
\end_inset

tensor
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar 
\begin_inset Graphics
	filename images/innerProduct.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

gather
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Standard
The output tensor has shape 
\begin_inset Formula $[i_{0},\ldots i_{ir},a_{0},\ldots a_{j-1},a_{j+1},\ldots a_{ar}]$
\end_inset

 where 
\begin_inset Formula $[a_{0},\ldots,a_{ar}]$
\end_inset

 is the shape of the first argument, and 
\begin_inset Formula $[i_{0},\ldots,i_{ir}]$
\end_inset

 is the shape of the second second (index) argument, and 
\begin_inset Formula $j$
\end_inset

 is the axis along which the gather is performed.
\end_layout

\begin_layout Standard
If the index is not an integer, the gather will linearly interpolate between
 the values on either side.
 So, for example, 
\begin_inset Formula $x[2.5]=0.5(x[2]+x[3])$
\end_inset

.
\end_layout

\begin_layout Standard
If the index value is outside the range of the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
htmlref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

x-vector
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

x-vector
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 along the axis being gathered, then NAN is assigned to that tensor element.
\end_layout

\begin_layout Subsection
inner product 
\begin_inset Formula $\cdot$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:innerProduct"

\end_inset

 Calculates the inner product of two tensors.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/innerProduct.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Tensor Operations (
\begin_inset Quotes eld
\end_inset

tensor
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar 
\begin_inset Graphics
	filename images/innerProduct.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

innerProduct
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Standard
It computes 
\begin_inset Formula 
\[
z_{i_{1},\ldots,i_{r_{x}-1},j_{1},\ldots,j_{r_{y}-1}}=\sum_{k}x_{i_{1}\ldots,i_{a-1},k,i_{a+1}\ldots,i_{r_{x}-1}}y_{j_{1},\ldots,j_{r_{y}-1},k},
\]

\end_inset

where 
\begin_inset Formula $a$
\end_inset

 is the given axis, and 
\begin_inset Formula $r_{x}$
\end_inset

 and 
\begin_inset Formula $r_{y}$
\end_inset

 are the ranks of 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

 respectively.
\end_layout

\begin_layout Subsection
outer product 
\begin_inset Formula $\otimes$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:outerProduct"

\end_inset

 Calculates the inner product of two tensors.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/outerProduct.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Tensor Operations (
\begin_inset Quotes eld
\end_inset

tensor
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar 
\begin_inset Graphics
	filename images/innerProduct.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

outerProduct
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Standard
It computes: 
\begin_inset Formula 
\[
z_{i_{1},i_{2},\ldots,i_{r_{x}},j_{1},\ldots,j_{r_{y}}}=x_{i_{1},,i_{2},\ldots,i_{r_{x}}}y_{j_{1},\ldots,j_{r_{y}}}.
\]

\end_inset

where 
\begin_inset Formula $r_{x}$
\end_inset

 and 
\begin_inset Formula $r_{y}$
\end_inset

 are the ranks of 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

 respectively.
\end_layout

\begin_layout Subsection
Meld
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:meld"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/meld.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Tensor Operations (
\begin_inset Quotes eld
\end_inset

tensor
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar 
\begin_inset Graphics
	filename images/innerProduct.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

meld
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Standard
The meld operation merges the hypercubes of its input tensors.
 The value at a given hypercube value is given by the value of the first
 tensor that has a value defined at that hypercube point.
 So ordering of input tensors does matter where the data is inconsistent
 between input tensors.
\end_layout

\begin_layout Standard
For example, consider the following inputs and x-vectors:
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "ex1"

\end_inset

 
\begin_inset Formula $\{1.0,2.0,3.0\}$
\end_inset

 with x-vector 
\begin_inset Formula $\{1,2,3\}$
\end_inset

, and 
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "ex2"

\end_inset

 
\begin_inset Formula $\{0.0,1.5,4.0\}$
\end_inset

 with x-vector 
\begin_inset Formula $\{0,2,4\}$
\end_inset

 
\end_layout

\begin_layout Standard
then the resultant output has x-vector 
\begin_inset Formula $\{0,1,2,3,4\}$
\end_inset

 and the values are 
\begin_inset Formula $\{0.0,1.0,2.0,3.0,4.0\}$
\end_inset

 if 
\begin_inset CommandInset ref
LatexCommand ref
reference "ex1"
plural "false"
caps "false"
noprefix "false"

\end_inset

 is connected to port 1 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "ex2"
plural "false"
caps "false"
noprefix "false"

\end_inset

 connected to port 2.
 If they were connected the other way around, the the values would be 
\begin_inset Formula $\{0.0,1.0,1.5,3.0,4.0\}$
\end_inset

.
\end_layout

\begin_layout Subsection
Merge
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:merge"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/merge.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Tensor Operations (
\begin_inset Quotes eld
\end_inset

tensor
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar 
\begin_inset Graphics
	filename images/innerProduct.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

merge
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Standard
Merge combines two Ravels sharing 
\emph on
n
\emph default
 dimensions to produce a new Ravel with 
\emph on
n+1
\emph default
 dimensions.
\end_layout

\begin_layout Standard
For example, the file below creates two 2-dimensional Ravels, one with sales
 in dollars and the other with sales by each salesperson as a percentage
 of total sales.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/MergeExample01TwoVariables.svg
	width 10cm

\end_inset


\end_layout

\begin_layout Standard
Sales
\begin_inset script subscript

\begin_layout Plain Layout
SalesPerson
\begin_inset script superscript

\begin_layout Plain Layout
$
\end_layout

\end_inset

and SalesPerson
\begin_inset script superscript

\begin_layout Plain Layout
%
\end_layout

\end_inset


\end_layout

\end_inset

share the same dimensions (SalesPerson and Date), and they can be separately
 displayed as in the next figure.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/MergeExample02TwoVariablesSeparate.svg
	width 10cm

\end_inset


\end_layout

\begin_layout Standard
Using the Merge operator, you can create one new Ravel containing information
 from both the $ sales and the % of total sales analysis:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/MergeExample02TwoVariablesEditForm.svg.png
	width 10cm

\end_inset


\end_layout

\begin_layout Standard
The merged Ravel has 3 dimensions, with the extra dimension Analysis now
 containing the Sales by dollar amount and Sales as a percentage of total
 sales as entries on the Analysis axis.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/MergeExample03TwoVariablesMerged.svg
	width 15cm

\end_inset


\end_layout

\begin_layout Subsection
Slice
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:slice"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/slice.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Tensor Operations (
\begin_inset Quotes eld
\end_inset

tensor
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar 
\begin_inset Graphics
	filename images/innerProduct.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

slice
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Standard
Slice will cut off a tensor along a given axis by the argument, as configured
 in the operation edit dialog.
 For example 
\begin_inset Formula $\mathrm{slice}(\{x_{1},x_{2},\ldots x_{n}\},3)=\{x_{1},x_{2},x_{3}\}$
\end_inset

.
 If the tensor is rank one (ie a vector), it is not necessary to specify
 the axis.
\end_layout

\begin_layout Standard
If the slice argument is negative, then it refers to the number of elements
 from the end of that axis.
 For example 
\begin_inset Formula $\mathrm{slice}(\{x_{1},x_{2},\ldots x_{n}\},-3)=\{x_{n-2},x_{n-1},x_{n}\}$
\end_inset

.
\end_layout

\begin_layout Subsection
Size
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:size"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/size.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Tensor Operations (
\begin_inset Quotes eld
\end_inset

tensor
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar 
\begin_inset Graphics
	filename images/innerProduct.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

size
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Standard
Size refers to the number of elements along a named dimension given by the
 operation axisargument - eg a 
\begin_inset Formula $3\times2$
\end_inset

 rank 2 tensor with named axes 
\begin_inset Quotes eld
\end_inset

0
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

1
\begin_inset Quotes erd
\end_inset

, size(
\begin_inset Quotes eld
\end_inset

1
\begin_inset Quotes erd
\end_inset

)==2.
\end_layout

\begin_layout Standard
If the axis argument is left blank, the size returns the total number of
 elements present in the tensor.
 This may be less than the product of axis sizes if the data is sparse—which
 will normally be the case.
\end_layout

\begin_layout Subsection
Shape
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:shape"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/shape.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Tensor Operations (
\begin_inset Quotes eld
\end_inset

tensor
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar 
\begin_inset Graphics
	filename images/innerProduct.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

shape
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key.
\end_layout

\begin_layout Standard
Returns a vector of axis sizes.
 Coupling this operation with a 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
htmlref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

gather
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Operation:gather
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 operation and variable would allow you interactively select axis size.
\end_layout

\begin_layout Subsection
Mean
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:mean"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/mean.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Statistics (
\begin_inset Quotes eld
\end_inset

statistics
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar 
\begin_inset Graphics
	filename images/mean.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

mean
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key
\end_layout

\begin_layout Standard
Returns the mean (or average) along a named dimension of all elements present.
 If the dimension is not named, then the mean is over all elements present
 in the tensor.
 Note that missing elements are not counted.
\end_layout

\begin_layout Subsection
Median
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:median"

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Statistics (
\begin_inset Quotes eld
\end_inset

statistics
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar 
\begin_inset Graphics
	filename images/mean.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

median
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key
\end_layout

\begin_layout Standard
Returns the median along a named dimension of all elements present.
 If the dimension is not named, then the median is over all elements present
 in the tensor.
\end_layout

\begin_layout Subsection
Standard Deviation
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:stdDev"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/median.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Statistics (
\begin_inset Quotes eld
\end_inset

statistics
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar 
\begin_inset Graphics
	filename images/mean.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

stdDev
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key
\end_layout

\begin_layout Standard
Returns the standard deviation along a named dimension of all elements present.
 If the dimension is not named, then the standard deviation is over all
 elements present in the tensor.
 Note that missing elements are not counted.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\sigma=\frac{1}{N-1}\sum_{i}^{N}(x_{i}-\langle x\rangle)^{2}
\]

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset Formula $k$
\end_inset

-th moment
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:moment"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/moment.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Statistics (
\begin_inset Quotes eld
\end_inset

statistics
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar 
\begin_inset Graphics
	filename images/mean.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

moment
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key
\end_layout

\begin_layout Standard
Returns the 
\begin_inset Formula $k$
\end_inset

-th moment about the mean along a named dimension of all elements present.
 
\begin_inset Formula $k$
\end_inset

 is specified by the numerical argument of the operation, which defaults
 to 1 (hence the result will be 0 in that case).
 If the dimension is not named, then the 
\begin_inset Formula $k$
\end_inset

-th moment is over all elements present in the tensor.
 Note that missing elements are not counted.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\langle\Delta x^{k}\rangle=\frac{1}{N}\sum_{i}(x_{i}-\langle x\rangle)^{k}
\]

\end_inset


\end_layout

\begin_layout Standard
Also 
\begin_inset Formula 
\[
\sigma^{2}=\frac{N}{N-1}\langle\Delta x^{2}\rangle
\]

\end_inset


\end_layout

\begin_layout Subsection
Histogram
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:histogram"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/histogram.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Statistics (
\begin_inset Quotes eld
\end_inset

statistics
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar 
\begin_inset Graphics
	filename images/mean.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

histogram
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key
\end_layout

\begin_layout Standard
Computes the histogram along a named dimension of all elements present.
 If the dimension is not named, then the histogram is over all elements
 present in the tensor.
 The number of bins is specified by the numeric argument to the operation.
\end_layout

\begin_layout Standard
\align center
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
resizebox{
\backslash
textwidth}{!}{
\end_layout

\end_inset


\begin_inset Graphics
	filename images/histogram.eps

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
em
\end_layout

\end_inset

 An example usage of the histogram operation
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection
Covariance
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:covariance"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/covariance.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Statistics (
\begin_inset Quotes eld
\end_inset

statistics
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar 
\begin_inset Graphics
	filename images/mean.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

covariance
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key
\end_layout

\begin_layout Standard
Computes the covariance of two tensors along named dimension.
 If the inputs are of rank 
\begin_inset Formula $N$
\end_inset

 and 
\begin_inset Formula $M$
\end_inset

 respectively, the output will be a 
\begin_inset Formula $(N-1)\times(M-1)$
\end_inset

 rank tensor, where the 
\begin_inset Formula $(i,j)$
\end_inset

 element is the covariance of the 
\begin_inset Formula $i$
\end_inset

-th slice of the first argument along the named dimension, and the 
\begin_inset Formula $j$
\end_inset

-th slice along the named dimension.
 As such, it is conformant with the definition of 
\family typewriter
cov
\family default
 function in Octave, but not with the equivalently named function in Matlab:
 
\end_layout

\begin_layout Quote
Compatibility Note:: Octave always treats rows of X and Y as multivariate
 random variables.
 For two inputs, however, MATLAB treats X and Y as two univariate distributions
 regardless of their shapes, and will calculate âcov ([X(:), Y(:)])â
 whenever the number of elements in X and Y are equal.
 This will result in a 2x2 matrix.
 Code relying on MATLABâs definition will need to be changed when running
 in Octave.
 
\end_layout

\begin_layout Standard
If only a single argument 
\begin_inset Formula $x$
\end_inset

 is supplied to the covariance, then the result is equivalent to cov
\begin_inset Formula $(x,x)$
\end_inset

, ie each slice is covaried with each other slice.
\end_layout

\begin_layout Standard
The formula for covariance between stochastic variables 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

 is 
\begin_inset Formula 
\[
\mathrm{cov}(x,y)=\frac{1}{N-1}\sum_{i}(x_{i}-\langle x\rangle)(y_{i}-\langle y\rangle)
\]

\end_inset


\end_layout

\begin_layout Subsection
Correlation coefficient 
\begin_inset Formula $\rho$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Operation:rho"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/rhoCorrelationCoefficient.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas in two ways:
\end_layout

\begin_layout Itemize
From the 
\emph on
Statistics (
\begin_inset Quotes eld
\end_inset

statistics
\begin_inset Quotes erd
\end_inset

)
\emph default
 toolbar 
\begin_inset Graphics
	filename images/mean.svg

\end_inset

; or 
\end_layout

\begin_layout Itemize
By typing the letters 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

correlation
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 on the canvas and then pressing the Enter key
\end_layout

\begin_layout Standard
See 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
htmlref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

covariance
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Operation:covariance
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 for the interpretation of tensor valued arguments.
 The correlation coefficient is defined as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\rho(x,y)=\frac{\mathrm{cov(x,y)}}{\sigma(x)\sigma(y)}
\]

\end_inset


\end_layout

\begin_layout Section
Switch
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "SwitchIcon"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/switch.svg

\end_inset


\end_layout

\begin_layout Standard
The operator can be placed on the canvas by clicking on its icon on the
 widget bar.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
buttonIcon{
\end_layout

\end_inset

switchIcon.eps
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 A switch block (also known as a case block, or select in the Fortran world)
 is a way of selecting from a range of alternatives according to the value
 of the input, effectively defining a piecewise function.
\end_layout

\begin_layout Standard
\align center
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
resizebox{
\backslash
textwidth}{!}{
\end_layout

\end_inset


\begin_inset Graphics
	filename images/switch.eps

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
em
\end_layout

\end_inset

 An example switch block with 3 cases
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
The default switch has two cases, and can be used to implement an if/then/else
 construct.
 However, because the two cases are 0 and 1, or false and true, a two case
 switch statement will naturally appear 
\begin_inset Quotes eld
\end_inset

upside down
\begin_inset Quotes erd
\end_inset

 to how you might think of an if statement.
 In other words, it looks like:
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "c"
hor_pos "l"
has_inner_box 1
inner_pos "c"
use_parbox 1
use_makebox 0
width "100text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
 
\family typewriter
if not 
\family default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
em
\end_layout

\end_inset

 condition
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\family typewriter
then
\family default

\begin_inset Newline newline
\end_inset

 \SpecialChar ldots

\family typewriter
else
\family default

\begin_inset Newline newline
\end_inset

 \SpecialChar ldots

\end_layout

\end_inset


\end_layout

\begin_layout Standard
You can add or remove cases through the context menu.
\end_layout

\begin_layout Section
Variables
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Variables"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Variable:constant"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "VarConstant"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Variable:parameter"

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "Variable:flow"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Variable:integral"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Variable:stock"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/var.gif

\end_inset


\end_layout

\begin_layout Standard
Variables represent values in a calculation, and come in a number of varieties:
 
\end_layout

\begin_layout Description
Constants represent an explicit numerical value, and do not have a name.
 Their graphical representation shows the actual value of the constant.
 
\end_layout

\begin_layout Description
Parameters are named constants.
 All instances of a given name represent the same value, as with all other
 named variables, so changing the value of one parameter, either through
 its edit menu, or through a slider, will affect all the others of that
 name.
\end_layout

\begin_layout Description
Parameters are used to 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
htmlref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

import data from a CSV file
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

CSV import
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

, which is how external data is imported into Ravel for analysis.
 This process is explained in 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
htmlref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Importing data into a parameter from a CSV file
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

CSV import
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset ERT
status open

\begin_layout Plain Layout

Flow variables
\end_layout

\end_inset

 have an input port that defines how the value is to be calculated.
 Only one flow variable of a given name can have its input port connected,
 as they all refer to the same quantity.
 If no input ports are connected, then flow variables act just like parameters.
 
\end_layout

\begin_layout Description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

Integral variables
\end_layout

\end_inset

 represent the result of integrating its input over time by means of the
 differential equation solver.
 The integrand is represented by the input to an integral operator that
 is attached to the integral variable.
 
\end_layout

\begin_layout Description
\begin_inset ERT
status open

\begin_layout Plain Layout

Stock variables
\end_layout

\end_inset

 are the columns of Godley tables, and represent the integral over time
 of the sum of the flow variables making up the column.
 
\end_layout

\begin_layout Standard
Variables may be converted between types in the variable edit menu, available
 from the context menu, subject to certain rules.
 For example, a variable whose input is wired anywhere on the canvas cannot
 be changed from 
\begin_inset Quotes eld
\end_inset

flow
\begin_inset Quotes erd
\end_inset

.
 Stock variables need to be defined in a Godley table, and so on.
\end_layout

\begin_layout Subsection
Variable names
\end_layout

\begin_layout Standard
Variable names uniquely identify variables.
 Multiple icons on the canvas may have the same name — they all refer to
 the same variable.
 Variable names have scope, which is either local (no initial `:'), belonging
 to an outer 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
htmlref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

group
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Group
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 (indicated by a leading `:' on the inner group variable, and the outer
 group variable having no such leading `:'), or completely global otherwise.
 You may select a variable name from a drop down list in the 
\begin_inset Quotes eld
\end_inset

name
\begin_inset Quotes erd
\end_inset

 combo box, which makes for an easier way of selecting exactly which variable
 you want.
\end_layout

\begin_layout Subsection
Initial conditions
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "var:init"

\end_inset


\begin_inset Index idx
status open

\begin_layout Plain Layout
initial conditions
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Variable initial conditions can be defined through the 
\begin_inset Quotes eld
\end_inset

init value
\begin_inset Quotes erd
\end_inset

 field of the variable edit menu, or in the case of Godley table stock variables
, through the initial condition row of the Godley table.
 An initial value can be a simple number, or it can be a multiple of another
 named variable (or parameter).
 In case of symbolic definitions, it would be possible to set up a circular
 reference where the initial value of variable A is defined in terms of
 the initial value of variable B, which in turn depends on the intial value
 of A.
 Such a pathological situation is detected when the system is reset.
\end_layout

\begin_layout Subsection
Tensor valued initial conditions
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "tensor-init"

\end_inset


\begin_inset Index idx
status open

\begin_layout Plain Layout
initial conditions|tensor
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\emph on
Ravel
\emph default
 provides a simple functional language which allows for the generation of
 tensor-valued operations.
 This enables 
\emph on
Ravel
\emph default
 to work with hypothetical as well as actual data—for example, hypothetical
 sales volumes for a new product from zero to (say) 500,000 sales per year
 can be generated using the iota formula by putting the expression 
\begin_inset Quotes eld
\end_inset

iota(500001)
\begin_inset Quotes erd
\end_inset

 in the initial value field for the variable 
\emph on
Sales
\emph default
.
 This generates an axis/dimension named 0 with values from 0 to 500,000.
 
\end_layout

\begin_layout Standard
These functions take the form 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
em
\end_layout

\end_inset

 func
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Formula $(n_{1},n_{2},\ldots,n_{r})$
\end_inset

 where 
\begin_inset Formula $r$
\end_inset

 is the desired rank, and 
\begin_inset Formula $n_{1},n_{2},$
\end_inset

 etc are the dimensions of the tensor.
 Available functions include:
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="right" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="right" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
name 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb+one+
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the tensor is filled with `1'
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb+zero+
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the tensor is filled with `0'
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb+iota+
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the arithmetic sequence 
\begin_inset Formula $(0,1,...\prod_{i}n_{i})$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb+eye+
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
diagonal elements filled with `1', offdiagonal `0'
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb+rand+
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
tensor filled with random numbers in the range 
\begin_inset Formula $[0,1)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
one
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
zero
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
iota
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
eye
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
rand
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb+eye+
\end_layout

\end_inset

 is equivalent to 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb+one+
\end_layout

\end_inset

 for vectors.
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb+rand+
\end_layout

\end_inset

 generates different random numbers each time the simulation is reset, and
 uses the clib 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb+rand()+
\end_layout

\end_inset

 function.
 
\end_layout

\begin_layout Subsection
Sliders
\end_layout

\begin_layout Standard
Variables have a 
\begin_inset Quotes eld
\end_inset

slider
\begin_inset Quotes erd
\end_inset

 feature, which allows the value of the variable (or parameter or constant)
 to be altered by the user via the mouse or by arrowkeys.
\end_layout

\begin_layout Standard
The parameters max, min and step size in the Edit form let you control the
 maximum and minimum values for the variable/parameter, and how much the
 value changes for each press of an arrowkey.
 A relative slider means that the step size is expressed as a fraction of
 max-min.
\end_layout

\begin_layout Standard
Adjusting the slider of an integral (or stock) variable while the system
 is running actually adjusts the present value of the variable.
 The sliders can also be adjusted using the keyboard arrow keys.
\end_layout

\begin_layout Subsection
Importing data into a parameter from a CSV file
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "CSV import"

\end_inset

 
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
CSV|import
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Operation:csvImport"

\end_inset


\end_layout

\begin_layout Standard
After creating a parameter from the 
\begin_inset Quotes eld
\end_inset

Variable
\begin_inset Quotes erd
\end_inset

 drop-down in the 
\begin_inset Quotes eld
\end_inset

Insert
\begin_inset Quotes erd
\end_inset

 menu, right-clicking the parameter and selecting the option to 
\begin_inset Quotes eld
\end_inset

Import CSV
\begin_inset Quotes erd
\end_inset

, will open a dialogue box that allows you to select a CSV file.
 Upon selecting the file, a dialog is opened, allowing you to specify assorted
 encoding parameters.
\end_layout

\begin_layout Standard
An alternative is to click on the ImportData icon 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
buttonIcon{
\end_layout

\end_inset

importData.eps
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

, which will create a new parameter for you to import the data into.
\end_layout

\begin_layout Standard
The dialog looks somewhat like this (developments in the import routine
 may change some layout details):
\end_layout

\begin_layout Standard
\align center
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
resizebox{
\backslash
textwidth}{!}{
\end_layout

\end_inset


\begin_inset Graphics
	filename images/CSVimportDialog.eps

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Quick instructions: 
\end_layout

\begin_layout Itemize
Data is typically (but not always) stored in the rightmost columns of a
 CSV file.
 Click to set the top left cell of the data.
 Columns to the left will be marked as axes.
 
\end_layout

\begin_layout Itemize
Select 
\begin_inset Quotes eld
\end_inset

axis
\begin_inset Quotes erd
\end_inset

 in the Dimension dropdown to include a column as an axis.
 Column data turns blue.
 
\end_layout

\begin_layout Itemize
Select 
\begin_inset Quotes eld
\end_inset

ignore
\begin_inset Quotes erd
\end_inset

 in the Dimension dropdown to exclude a column.
 Column data turns red.
 
\end_layout

\begin_layout Itemize
Select 
\begin_inset Quotes eld
\end_inset

data
\begin_inset Quotes erd
\end_inset

 in the Dimension dropdown to treat a column as a data column.
 Column data turns black.
 
\end_layout

\begin_layout Itemize
Select Type for included axis columns.
 Select one of three types: 
\end_layout

\begin_deeper
\begin_layout Description
string most general type, data treated as is.
 
\end_layout

\begin_layout Description
value value data must be numerical, e.g.
 1, 2, and not quoted (as in 
\begin_inset Quotes eld
\end_inset

1
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

2
\begin_inset Quotes erd
\end_inset

, etc.)
\end_layout

\begin_layout Description
time data must refer to date-time data.
 The format field may be used to control interpretation of this data, though
 if this field is left blank, Ravel will interpret the data format itself.
 Blank format assumes data contains year/month/day/hour/minute/second separated
 by some non-numerical character.
 If fewer than 6 numerical fields present (from year to second), smallest
 units are set to minimum value (0 or 1 respectively).
 
\end_layout

\end_deeper
\begin_layout Itemize
Click the OK button.
 
\end_layout

\begin_layout Itemize
Data is imported into the parameter.
 
\end_layout

\begin_layout Itemize
You may now need to set units for the imported data field, which is located
 at Edit 
\begin_inset Formula $\rightarrow$
\end_inset

 Dimensions.
 
\end_layout

\begin_layout Standard
In the case shown above, the system has automatically guessed that the data
 is 3 dimensional, and that the first 3 columns give the axis labels for
 each dimension (shown in blue), and the 4th column contains the data.
 The first row has been automatically determined to be the first row of
 the file — with the dimension names are shown in green.
\end_layout

\begin_layout Standard
In this case, the automatic parsing system has worked things out correctly,
 but often times it needs help from the computer user.
 An example is as follows:
\end_layout

\begin_layout Standard
\align center
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
resizebox{
\backslash
textwidth}{!}{
\end_layout

\end_inset


\begin_inset Graphics
	filename images/CSVimportDialogFail.eps

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
In this example, 
\emph on
Ravel
\emph default
 has failed to determine where the data starts, probably because of the
 columns to the right of the 
\begin_inset Quotes eld
\end_inset

Price
\begin_inset Quotes erd
\end_inset

 columns.
 So the first thing to do is tell it where the data is located.
 This is one function on the context menu for data importing:
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Command
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Effect
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set as header row
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tells Ravel that the selected row contains the header information for the
 import
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auto-classify columns as axis/data
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Invokes Ravel's automated column classification routine
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Populate column labels
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transfers the information from the header row to the Name row
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Populate current column label
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transfers the information from the header to the Name for one column only
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set start of data row, and column
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tells Ravel where data begins in the file
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set start of data row
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tells Ravel where data begins in the file
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set start of data column
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tells Ravel where data begins in the file
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
resizebox{
\backslash
textwidth}{!}{
\end_layout

\end_inset


\begin_inset Graphics
	filename images/CSVimportDialogSelectData.eps

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Note that this causes all columns to the right of 
\begin_inset Quotes eld
\end_inset

Price paid
\begin_inset Quotes erd
\end_inset

 to be treated as data, which is not right since the columns to the right
 of 
\begin_inset Quotes eld
\end_inset

Price (text infill)
\begin_inset Quotes erd
\end_inset

 are text based columns, not data.
 So we need to mark those columns as either 
\begin_inset Quotes eld
\end_inset

axis
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

ignore
\begin_inset Quotes erd
\end_inset

.
 To do that, click and drag your mouse on the header field, which will cause
 those columns to be selected, like so:
\end_layout

\begin_layout Standard
\align center
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
resizebox{
\backslash
textwidth}{!}{
\end_layout

\end_inset


\begin_inset Graphics
	filename images/CSVimportDialogSelectedColumns.eps

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Then in the dimensions row, select 
\begin_inset Quotes eld
\end_inset

axis
\begin_inset Quotes erd
\end_inset

, which flips the selected columns:
\end_layout

\begin_layout Standard
\align center
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
resizebox{
\backslash
textwidth}{!}{
\end_layout

\end_inset


\begin_inset Graphics
	filename images/CSVimportDialogSelectedAxes.eps

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Now the axes index labels are rendered in blue, the axes names in green
 and the data is in black.
 In this example, some axes have unique values, which are not particularly
 useful to scan over.
 Other examples might have columns that duplicate others, in effect the
 data is a planar slice through the hypercube.
 We can remove these axes from the data by marking the column 
\begin_inset Quotes eld
\end_inset

ignore
\begin_inset Quotes erd
\end_inset

 in the 
\begin_inset Quotes eld
\end_inset

Dimension
\begin_inset Quotes erd
\end_inset

 row.
 The deselected columns are rendered in red, indicating data that is commented
 out:
\end_layout

\begin_layout Standard
\align center
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
resizebox{
\backslash
textwidth}{!}{
\end_layout

\end_inset


\begin_inset Graphics
	filename images/CSVimportDialogAxesDeselected.eps

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
In this example, the axis names has not been correctly inferred.
 Whilst, one can manually edit the axis names in the 
\begin_inset Quotes eld
\end_inset

Name
\begin_inset Quotes erd
\end_inset

 line, a quick shortcut is to drag 
\begin_inset Quotes eld
\end_inset

Header
\begin_inset Quotes erd
\end_inset

 and drop it on 
\begin_inset Quotes eld
\end_inset

Name
\begin_inset Quotes erd
\end_inset

.
 There is also a right-click (context) menu option to use the Header to
 name the columns.
\end_layout

\begin_layout Standard
\align center
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
resizebox{
\backslash
textwidth}{!}{
\end_layout

\end_inset


\begin_inset Graphics
	filename images/CSVimportDialogAxesNamed.eps

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
The Date column is current parsed as strings, which not only will be sorted
 incorrectly, but even if the data were in a YYYYMMDD format which is sorted
 correctly, will not have a uniform temporal spacing.
 It is therefore important to parse the Date column as temporal data, which
 is achieved by changing the column type to 
\begin_inset Quotes eld
\end_inset

time
\begin_inset Quotes erd
\end_inset

, and specifying a format string, which follows strftime conventions with
 the addition of a quarter specifier (
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb+%Q+
\end_layout

\end_inset

).
 
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
strftime format specifier
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "strftime format specifier"

\end_inset


\end_layout

\begin_layout Standard
If your temporal data is in the form Y*M*D*H*M*S, where * signifies any
 sequence of non-digit characters, and the year, month, day, hour minutes,
 second fields are regular integers in that order, then it suffices to use
 the blank format string 
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
blank strftime format
\end_layout

\end_inset

.
 If some of the fields are missing, eg minutes and seconds, then they will
 be filled in with sensible defaults.
\end_layout

\begin_layout Standard
\align center
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
resizebox{
\backslash
textwidth}{!}{
\end_layout

\end_inset


\begin_inset Graphics
	filename images/CSVimportDialogTimeFormat.eps

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="17" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Code 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
%a or %A 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The name of the day of the week according to the current locale, in abbreviated
 form or the full name.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
%b or %B 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The month name according to the current locale, in abbreviated form or the
 full name.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
%d 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Day of month in range 01 to 31
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
%H 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hour in range 0 to 23
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
%I 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hour in range 1 to 12
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
%m 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Month as a decimal number (01 to 12)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
%M 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Minute in range 00 to 59
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
%Q 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Quarter (0=1st January, 1=1st March etc)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
%p 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
AM or PM
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
%s 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of seconds since epoch (1st January 1970)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
%S 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seconds in range 00 to 59 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
%y 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Two digit year YY
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
%Y 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Four digit year YYYY
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
%z 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
numerical timezone offset
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
%Z 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Timezone name
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
%% 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Literal % character
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Table of strftime codes
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Strftime code"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Strftime formatted string consists of escape codes (with leading % characters).
 All other characters are treated as matching literally the characters of
 the input.
 So to match a date string of the format YYYY-MM-DD HH:MM:SS+ZZ (ISO format),
 use a format string 
\begin_inset Quotes eld
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb|%Y-%m-%d %H:%M:%S+%Z|
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
 Similarly, for quarterly data expressed like 1972-Q1, use 
\begin_inset Quotes eld
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb+%Y-Q%Q+
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
 Note that only %Y and %y can be mixed with %Q (nothing else makes sense
 anyway).
\end_layout

\begin_layout Standard
Even in the current settings, you may still get a message 
\begin_inset Quotes eld
\end_inset

exhausted memory — try reducing the rank
\begin_inset Quotes erd
\end_inset

, or a similar message about hitting a 20% of physical memory threshold.
 In some cases, 
\begin_inset Quotes eld
\end_inset

titles
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

addresses
\begin_inset Quotes erd
\end_inset

 might be pretty much unique for each record, leading to a large, but very
 sparse hypercube.
 If you remove those columns, then you may encounter the 
\begin_inset Quotes eld
\end_inset

Duplicate key
\begin_inset Quotes erd
\end_inset

 message.
 In this case, we want to aggregate over these records, which we can do
 by setting 
\begin_inset Quotes eld
\end_inset

Duplicate Key Action
\begin_inset Quotes erd
\end_inset

 to sum or maybe average for this example.
 After some additional playing around with dimensions to aggregate over,
 we can get the data imported.
\end_layout

\begin_layout Standard
\align center
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
resizebox{
\backslash
textwidth}{!}{
\end_layout

\end_inset


\begin_inset Graphics
	filename images/CSVimportDialogFinal.eps

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection
Duplicate keys
\end_layout

\begin_layout Standard
In a hypercube, data is indexed by a list of indices, collectively known
 as a key.
 The indices may be strings, integers or date/time values.
 If more than one value exists in the CSV file for a given key, Minsky throws
 a 
\begin_inset Quotes eld
\end_inset

Duplicate key
\begin_inset Quotes erd
\end_inset

 exception.
 This exception gives you the option of writing a report, which is basically
 a sorted version of the original CSV file, with the errors listed at the
 beginning.
 You can open this report in a spreadsheet to see if data needs to be corrected
 or removed.
\end_layout

\begin_layout Standard
In the case where the data is correct, but there are still duplicate keys,
 such as the example in the previous section, the duplicate keys may be
 aggregated over by setting the 
\begin_inset Quotes eld
\end_inset

Duplicate Key action
\begin_inset Quotes erd
\end_inset

 option.
 This allows all the entries in a transactional database—where every transaction
 is recorded—to be aggregated to a higher level (days, weeks or years, rather
 than the minutes during a day when various transactions occurred) for analysis
 of trends in the data.
\end_layout

\begin_layout Subsection
Variable Browser
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "VariableBrowser"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/browserWindow.png

\end_inset


\end_layout

\begin_layout Standard
The browser can be accessed in two ways:
\end_layout

\begin_layout Itemize
From the Insert Menu; or 
\end_layout

\begin_layout Itemize
From the 
\begin_inset Graphics
	filename images/var.eps

\end_inset

widget, which brings up a horizontal menu for defining, constants, parameters
 and variables.
 Click on the final option on this menu, 
\begin_inset Quotes eld
\end_inset

Browser
\begin_inset Quotes erd
\end_inset

, to bring up the window.
 
\end_layout

\begin_layout Standard
The 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
em
\end_layout

\end_inset

 variable browser
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 is a popup window that shows all currently defined variables in the system.
 It is an 
\begin_inset Quotes eld
\end_inset

always on top
\begin_inset Quotes erd
\end_inset

 window, which will be visible over any other window (including that for
 Ravel/Minsky).
 This facilitates its use as a means to insert multiple variables into a
 model.
\end_layout

\begin_layout Standard
This is a convenience toolbar that allows one to select a variable for insertion
 into the design canvas, instead of having to type the new variable's name
 from scratch.
\end_layout

\begin_layout Standard
At the top of the variable browser are some filter checkboxes, that allow
 you filter the variables shown by variable type.
\end_layout

\begin_layout Section
Wires
\end_layout

\begin_layout Standard
Wire represent the flow of values from one operation to the next.
 To add a wire to the canvas, click on the output port of an operation or
 variable (right hand side of the icon in its initial unrotated orientation),
 and then drag it towards an input port (on the left hand side of an unrotated
 icon).
 You can't connect an operator to itself (that would be a loop, which is
 not allowed, unless passing through an integral), nor in general can an
 input port have more than one wire attached—the exceptions are mathematical
 operators such as 
\begin_inset Formula $+/-$
\end_inset

 and 
\begin_inset Formula $\times/\div$
\end_inset

 (and similarly max/min), where the multiple wires are summed or multiplied,
 respectively.
\end_layout

\begin_layout Standard
Wires can be bent by dragging the blue dots (
\begin_inset Quotes eld
\end_inset

handles
\begin_inset Quotes erd
\end_inset

).
 Every time a handle is dragged out of a straight line with its neighbours,
 new handles appear on either side.
 Handles can be removed by double-clicking on them.
\end_layout

\begin_layout Section
Tensor values
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "tensors"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
tensors
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Variables may have tensor values, or sets of data.
 Different tensors are sorted by rank.
 For example, a tensor of rank 0 may appear as a single number, let's refer
 to it as 
\begin_inset Formula $x$
\end_inset

.
 A tensor of rank 1 may appear as a sequence of numbers, let's say 
\begin_inset Formula $(xxxx)$
\end_inset

.
 Rank 2 means a tensor appears as a 2D sequence of numbers, for example:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left(\begin{array}{ccc}
x & x & x\\
x & x & x\\
x & x & x
\end{array}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
A tensor of rank 3 will appear as a three-dimensional cube, rank 4 as a
 four-dimensional hypercube, and so on.
 Two ways of getting tensor values into Minsky are via tensor-valued initial
 conditions (
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
S
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "tensor-init"
plural "false"
caps "false"
noprefix "false"

\end_inset

), or by importing a CSV file into a parameter (
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
S
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "CSV import"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 Scalar operations are extended to operating elementwise over tensors, and
 a number of operations exist for operating on tensors (
\begin_inset CommandInset ref
LatexCommand ref
reference "tensor   operations"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Standard
When two or more tensors are combined with a binary operation (such as addition
 or multiplication), they must have the same rank.
 For example, two tensors of rank 2 can be multiplied together, but a tensor
 of rank 2 and a tensor of rank 3 cannot.
 They may have differing dimensions, which means the values within each
 tensor may not necessarily match up 1-to-1 exactly.
 To understand what happens when a given dimension is mismatched requires
 understanding the concept of an x-vector
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
x-vector
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "x-vector"

\end_inset

.
\end_layout

\begin_layout Standard
When 
\emph on
Minsky
\emph default
 is given tensor values, it sorts the values within each tensor by corresponding
 dimensions.
 For example, a rank 2 tensor would have its values sorted into two sets
 of data.
 This data can be in the form of numbers, dates (time values), or strings.
 Minsky will then look at cross-sections of the datasets in order to process
 the values within.
 When the dimensions of two tensors match up, for example two rank 2 tensors,
 the corresponding cross-sections of both tensors should also match up.
 When they don't, a weighted interpolation of the corresponding values is
 taken.
 This involves using an x-vector.
\end_layout

\begin_layout Standard
An x-vector is a vector of real values, strings or date/time values.
 If no x-vector is explicitly provided, then implicitly it consists of the
 the values 
\begin_inset Formula $(0,\ldots,n_{i}-1)$
\end_inset

, where 
\begin_inset Formula $n_{i}$
\end_inset

 is the dimension size of axis 
\begin_inset Formula $i$
\end_inset

 of the tensor.
\end_layout

\begin_layout Standard
For example, if the first tensor consists of three elements 
\begin_inset Formula $(x_{0},x_{1},x_{2})$
\end_inset

 and the second consist of a number of different elements that roughly correspon
d to the same three elements, these can be added together.
 The x-vector starts with the first tensor's value of 
\begin_inset Formula $(x_{0})$
\end_inset

 and looks for a matching value in the second tensor.
 If it can't find a direct match, it will search for nearby values which
 roughly correspond.
 It can then take those values and interpolate the corresponding value based
 on where in the tensor it appears.
 This is weighted, so say there are four values nearby, the program will
 average those out and find where a value in the middle of those four values
 would appear, and what that hypothetical value would be.
 To take another example:
\end_layout

\begin_layout Standard
Suppose the first tensor was a vector 
\begin_inset Formula $(x_{0},x_{1})$
\end_inset

 and had an x-vector (1,3) and the second tensor 
\begin_inset Formula $(y_{0},y_{1},y_{2})$
\end_inset

 had an x-vector (0,2,3), then the resulting tensor will be 
\begin_inset Formula $(x_{0}+0.5(y_{0}+y_{1}),x_{1}+y_{2})$
\end_inset

.
 If the x-vector were date/time data, then the tensor values will be interpolate
d according to the actual time values.
 If the first tensor's x-vector value lies outside the second tensor's x-vector,
 then it doesn't result in a value being included in the output.
 The resultant x-vector's range of values is the intersection of input tensors'
 x-vector ranges.
\end_layout

\begin_layout Standard
If both tensor had string x-vectors, then the resultant tensor will only
 have values where both input tensors have the same string value in their
 x-vectors.
 In the above case, where the x-vectors were ('1','3') and ('0','2','3')
 the resulting tensor will be the scalar 
\begin_inset Formula $x_{1}+y_{2}$
\end_inset

.
\end_layout

\begin_layout Standard
It goes without saying that the type of the x-vector for each axis must
 also match.
\end_layout

\begin_layout Section
Groups
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Group"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/group.svg
	width 2cm

\end_inset


\end_layout

\begin_layout Standard
Grouping gives the capability to create reusable modules, or subroutines
 that can dramatically simplify more complicated systems.
 Groups may be created in the following ways: 
\end_layout

\begin_layout Itemize
by lassoing a number of items to select them, then selecting 
\begin_inset Quotes eld
\end_inset

group
\begin_inset Quotes erd
\end_inset

 from the canvas context menu, or the edit menu.
 
\end_layout

\begin_layout Itemize
by pasting the selection.
 You may 
\begin_inset Quotes eld
\end_inset

ungroup
\begin_inset Quotes erd
\end_inset

 the group from the context menu if you don't desire the result of the paste
 to be a group.
 
\end_layout

\begin_layout Itemize
by copying another group 
\end_layout

\begin_layout Itemize
by inserting a Minsky file as a group 
\end_layout

\begin_layout Standard
Groups are 
\begin_inset Quotes eld
\end_inset

transparent
\begin_inset Quotes erd
\end_inset

: at a low level of magnification, the group icon is shown, but as you zoom
 in on a group, it will become transparent, which allows you see and edit
 its contents.
 
\end_layout

\begin_layout Standard
Groups may be nested heirarchically, which gives an excellent way of zooming
 in to see the detail of a model, or zooming out to get an overview of it.
 The group context menu item 
\begin_inset Quotes eld
\end_inset

Zoom to display
\begin_inset Quotes erd
\end_inset

 zooms the canvas in just enough for the group's contents to be visible.
\end_layout

\begin_layout Standard
You may also select 
\begin_inset Quotes eld
\end_inset

Open in canvas
\begin_inset Quotes erd
\end_inset

 from the context menu.
 This replaces the current canvas contents with the contents of the group,
 allowing you to edit the contents of the group directly without the distraction
s of the rest of the model.
 Select 
\begin_inset Quotes eld
\end_inset

Open master group
\begin_inset Quotes erd
\end_inset

 to return to the top level group occupying the canvas.
\end_layout

\begin_layout Standard
Around the edges of a group are input or output variables, which allow one
 to parameterise the group.
 One can drag a variable and dock it in the I/O area to create a new input
 or output for the group.
\end_layout

\begin_layout Standard
When creating a group, or dragging a variable or operation into or out of
 a group, if a wire ends up crossing the group boundary, a new temporary
 variable is added as an I/O variable.
 You may then edit the I/O variable name to be something more meaningful
 to your model.
\end_layout

\begin_layout Standard
Variable names within groups can be locally scoped to that group.
 That means that a variable of the same name outside the group refers to
 a different entity completely.
 By default, grouped variables refer to entities outside the group scope,
 but may be marked local by means of context menu option.
 One can also convert all variables in a group to be local by means of the
 
\begin_inset Quotes eld
\end_inset

Make subroutine
\begin_inset Quotes erd
\end_inset

 context menu entry.
\end_layout

\begin_layout Standard
Nonlocal variables refers to a local variable within an outer scope, going
 all the way to global scope if no such variable exists.
 In this way, two groups can share a variable reference to a variable, and
 you can limit the scope of the shared variable by placing a local variable
 of the same name in an outer group that both groups are contain within.
\end_layout

\begin_layout Standard
A group can also be exported to a file from the context menu.
 This allows you to build up a library of building blocks.
 There is a github project 
\begin_inset Quotes eld
\end_inset

minsky-models
\begin_inset Quotes erd
\end_inset

 allowing people to publish their building blocks and models for others
 to use.
 In the future, we hope to integrate Minsky with this github repository,
 allowing even more seamless sharing of models.
\end_layout

\begin_layout Section
Plot widget
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "PlotWidget"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/plotWidget.png

\end_inset


\end_layout

\begin_layout Standard
The plot widget embeds a plot into the canvas.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename images/Plot.svg

\end_inset

 
\end_layout

\begin_layout Standard
Around the outside of the plot are a number of input ports that can be wired:
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

left hand edge
\end_layout

\end_inset

 Multiple series can be plotted by attaching them as inputs to the black
 input triangle on the middle of the Y1 axis.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

right hand edge
\end_layout

\end_inset

 Multiple series can be plotted by attaching them as inputs to the red input
 triangle on the middle of the Y2 axis.
 These are shown on a different scale to the left hand Y1 inputs, which
 allows very different magnitudes to be compared on the one plot.
 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

bottom edge
\end_layout

\end_inset

 The default for the X-axis is either time—for a Minsky simulation model—or
 the right-pointing axis of a Ravel.
 XY plots can be created by attaching an input to the matching input on
 the X axis: the input to the black triangle will be plotted against the
 variable(s) inputted on the black Y1 input port; and the input to the red
 triangle will be plotted against the variable(s) inputted on the red Y2
 input port.
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename images/plotLissajous.eps

\end_inset

 
\end_layout

\begin_layout Standard
If only one bottom port is connected, then that controls all pens simultaneously
, and if no ports are connected, then the simulation time is used to provide
 the 
\begin_inset Formula $x$
\end_inset

 coordinates 
\end_layout

\end_deeper
\begin_layout Itemize
corners Corner ports control the scale.
 You can wire up variables controlling minimum and maximum of the 
\begin_inset Formula $x$
\end_inset

, 
\begin_inset Formula $y$
\end_inset

 and right hand 
\begin_inset Formula $y$
\end_inset

 axes.
 If left unwired, the scales are determined automatically from the data—or
 set by fields in the Options form.
 Corner ports can also be used to, for example, implement a sliding window
 graph—so that the scale of the graph adapts to the simulation in a Minsky
 model.
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename images/plotSlidingWindow.eps

\end_inset

 
\end_layout

\end_deeper
\begin_layout Standard
Plots can be resized using the resize arrows that appear when the mouse
 hovers over a plot.
 Click on one of these arrows and drag the mouse and the plot will be resized.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/plotResize.png

\end_inset


\end_layout

\begin_layout Subsection
Plot context menu
\end_layout

\begin_layout Standard
The plot context menu is:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/PlotContextMenu.png

\end_inset


\end_layout

\begin_layout Subsubsection
Description
\end_layout

\begin_layout Standard
Description bring up a text window (
\begin_inset CommandInset ref
LatexCommand ref
reference "Notes"
plural "false"
caps "false"
noprefix "false"

\end_inset

) into which you can enter text to describe a plot.
 The Short Description field becomes a 
\begin_inset Quotes eld
\end_inset

Hint
\begin_inset Quotes erd
\end_inset

 that is displayed when the mouse hovers over a plot.
 If you check the Bookmark field, the Short Description becomes a bookmark
 which can be used to navigate the document.
\end_layout

\begin_layout Subsubsection
Expand
\end_layout

\begin_layout Standard
This generates a large display window for the plot alone, independent of
 the 
\emph on
Ravel/Minsky
\emph default
 canvas itself.
\end_layout

\begin_layout Subsubsection
Make Group Plot
\end_layout

\begin_layout Standard
If this option is checked on a plot within a Group, this plot replaces the
 default image for a Group.
 It is a dynamic rendition, so in a 
\emph on
Minsky
\emph default
 model this can show the plotted variables changing over time.
\end_layout

\begin_layout Subsubsection
Options
\end_layout

\begin_layout Standard
The format of a plot is controlled by the Plot Window Options form.
 Titles, axis labels, plot type and other features of a plot are controlled
 through this form.
\end_layout

\begin_layout Description
\begin_inset Graphics
	filename images/plotOptions.png

\end_inset


\end_layout

\begin_layout Subsubsection
Set options as default
\end_layout

\begin_layout Standard
This command reproduces the settings of the selected plot in any subsequent
 plot.
 This can expedite plot labelling, as well as setting a default appearance
 for the style of graph applied to the data in each plot.
\end_layout

\begin_layout Subsubsection
Apply default options
\end_layout

\begin_layout Standard
This applies the default plot options to any selected plot.
\end_layout

\begin_layout Subsubsection
Pen Styles 
\end_layout

\begin_layout Standard
This brings up the pen styles control form.
 When variables are attached to the input ports, their names will appear
 above each formatting bar.
 This menu can also be accessed from the Pen Styles button on the Options
 form.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/PlotPenStyles.png

\end_inset


\end_layout

\begin_layout Subsubsection
Export as CSV
\end_layout

\begin_layout Standard
This command exports the data from a Plot as a csv file.
\end_layout

\begin_layout Section
Sheet Widget
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Sheet"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/SheetBlank'.svg

\end_inset


\end_layout

\begin_layout Standard
The Sheet widget displays data as in a typical spreadsheet program.
\end_layout

\begin_layout Standard
The default sheet is a blank square box, as shown above.
 Once data is attached to the sheet, formatted and hierarchical data will
 fill the sheet.
 The example shown below has 4 dimensions—the data is Price, while the dimension
s are Date, Salesperson, Suburb and Source.
 Data for the first two dimensions—the downward and right-pointing Ravel
 axes—is shown, while the first entry in the third and higher order dimensions
 are shown at the head of the sheet.
 You can alter the displayed data by manipulating the Ravel attached to
 the sheet.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/sheetBasics.svg

\end_inset


\end_layout

\begin_layout Standard
To use the Sheet widget, simply wire a variable, Ravel, or other item on
 your canvas to the left-hand side of the sheet widget box.
 This will diplay the input data as a number (in the case of a variable
 being simulated in a 
\emph on
Minsky
\emph default
 model) or an array of data (in the case of a Ravel).
 Note that only one wire can be connected to a sheet, as the sheet can only
 display a single input value–however, the 
\emph on
Ravel
\emph default
 commands 
\begin_inset CommandInset ref
LatexCommand ref
reference "Operation:meld"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "Operation:merge"
plural "false"
caps "false"
noprefix "false"

\end_inset

enable you to combine data from several Ravels to allow them to be displayed
 in a single sheet.
\end_layout

\begin_layout Standard
If you have 
\emph on
Ravel
\emph default
™ installed, you will see a small 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
htmlref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Ravel
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Ravel
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 icon in the top left corner.
 Clicking this causes a ravel window to pop up, allowing you to manipulate
 the input data to the sheet, so as to change slices or rotate a multidimensiona
l datacube.
 
\emph on
This feature will be deprecated in future releases of Ravel and replaced
 by Sheets and Plots being embedded in Ravels themselves
\emph default
.
\end_layout

\begin_layout Standard
By default, a Sheet outputs the beginning of the data series.
 The context menu allows you to specify that the data displayed comes from
 the Head of the data (the default), its Tail (the final entries in the
 data series), or the Head and Tail.
 The next figure shows the Head and Tail displayed for the rows of this
 sheet.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/SheetHeadTailSmallBusiness.svg
	width 15cm

\end_inset


\end_layout

\begin_layout Section
Note Widget
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Notes"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Item"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/NoteWidget.png

\end_inset


\end_layout

\begin_layout Standard
The note widget places the text line 
\begin_inset Quotes eld
\end_inset

Enter your note here
\begin_inset Quotes erd
\end_inset

 on the canvas.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/note.svg

\end_inset


\end_layout

\begin_layout Standard
Double-clicking on the text, or choosing Description from the context menu,
 brings up the note form:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/NoteWindow.png
	width 10cm

\end_inset


\end_layout

\begin_layout Standard
The Short Description field becomes a tool-tip for this note, and also doubles
 as a Bookmark (
\begin_inset CommandInset ref
LatexCommand ref
reference "Bookmarks"
plural "false"
caps "false"
noprefix "false"

\end_inset

) should you check the Bookmark? box.
 
\end_layout

\begin_layout Standard
Notes allow arbitrary text to be placed on the canvas for explanatory purposes.
 Anything that can be entered on the keyboard can be placed here, including
 unicode characters, and LaTeX formatting is supported.
 
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/Note+Text.svg

\end_inset


\end_layout

\begin_layout Section
Godley Tables
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "godley"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "GodleyIcon"

\end_inset


\end_layout

\begin_layout Standard
Godley tables describes sets of financial flows from the point of view of
 a particular economic agent, such as a bank.
 The columns of the table represent accounts (possibly aggregated), which
 are treated as integration variables by the system.
 Accounts may be assets, liabilities or equities.
 Assets may appear as liabilities in another agent's Godley table, and vice
 versa, with the sense of the financial flows treated oppositely (a credit
 flow increasing the asset of one entity will appear as a debit flow, increasing
 the value of a liability).
 Transfers between accounts should satisfy the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
em
\end_layout

\end_inset

 accounting equation
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
accounting equation
\end_layout

\end_inset

 (Assets-Liabilities-Equities = 0).
 So if the transfer is between an asset and a liability, then it should
 appear with the same sign (both positive or both negative), otherwise between
 two accounts of the same type, or between a liability and an equity, the
 terms should have opposite signs.
\end_layout

\begin_layout Standard
Instead of signed flows, one can optionally use CR and DR prefixes, as specified
 in the options panel.
 Each row of the table should have have one CR entry, and one DR entry.
 The row sum column should be zero if it is done correctly.
\end_layout

\begin_layout Standard
The first row specifies the stock variables, after which follow the flow
 rows.
 Usually, the row marked 
\begin_inset Quotes eld
\end_inset

Initial Conditions
\begin_inset Quotes erd
\end_inset

 comes next, but may be placed in any position.
 These specify the initial conditions of the stock variables, and may refer
 to a multiple of another variable, just like the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
htmlref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

initial condition field
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

var:init
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

, or just be a numerical value.
\end_layout

\begin_layout Standard
Finally come the flows.
 The first column is a simple textual label (the phrase 
\begin_inset Quotes eld
\end_inset

Initial Conditions
\begin_inset Quotes erd
\end_inset

, regardless of capitalisation, is a reserved phrase for setting stock variable
 initial conditions) identifying the flow.
 The flows themselves are written as a numerical multiplier times a flow
 variable.
 For example, if you wanted to transfer an amount between the asset and
 liability column, you might write 
\begin_inset Quotes eld
\end_inset

Amount
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 in both columns, which would satisfy the equation A-L-E=0.
 It would also be possible to write 
\begin_inset Quotes eld
\end_inset

2Amount
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 in the asset column, along with 
\begin_inset Quotes eld
\end_inset

Amount
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 in both the Liability and Equity columns.
 This would still satisfy A-L-E=0.
\end_layout

\begin_layout Standard
The Godley table also shows the value of the entered variable, displayed
 within the table.
 For example, if you set 
\begin_inset Quotes eld
\end_inset

Amount
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 to equal the value of system time, on opening the Godley table, wherever
 you entered 
\begin_inset Quotes eld
\end_inset

Amount
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 in the table the cell would show 
\begin_inset Quotes eld
\end_inset

Amount = 0.00
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

 if the system time was set to 0.00.
 This provides a helpful tool for displaying the value of the variable at
 that point in the simulation.
 This feature can be enabled or disabled in the preferences panel.
\end_layout

\begin_layout Section
Context Menu
\end_layout

\begin_layout Standard
All canvas items have a context menu, which allow a variety of operations
 to be applied to the canvas item.
 Common context menu items are explained here: 
\end_layout

\begin_layout Description
Help bring up context specific help for the item 
\end_layout

\begin_layout Description
Description Attach an annotation to the item.
 This is only visible by selecting the description item from the context
 menu, although whatever is set as the 
\begin_inset Quotes eld
\end_inset

Short Description
\begin_inset Quotes erd
\end_inset

 will also appear as a tooltip whenever the mouse hovers over the item.
 
\end_layout

\begin_layout Description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

Port values
\end_layout

\end_inset

 When running a simulation, you can drill down into the actual values at
 the input and output ports of the variable or operation, which is a useful
 aid for debugging models.
 
\end_layout

\begin_layout Description
Edit set or query various attributes of an item.
 This function can also be accessed by double clicking on the item.
 (Plot widgets behave slightly differently).
 
\end_layout

\begin_layout Description
Copy Creates a copy of an item, retaining the same attributes of the original.
 This is very useful for creating copies of the same variable to reduce
 the amount of overlapping wiring (aka 
\begin_inset Quotes eld
\end_inset

rats nest
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"
\end_layout

\end_inset

) in a model.
 
\end_layout

\begin_layout Description
Flip actually rotates an object through 
\begin_inset Formula $180^{\circ}$
\end_inset

.
 You can specify aribtrary rotations of objects through the edit menu.
 
\end_layout

\begin_layout Description
Delete delete the object.
 
\end_layout

\begin_layout Standard
Item specific context menu items: 
\end_layout

\begin_layout Description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

variables, parameters and constants
\end_layout

\end_inset

 
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 1
width ""
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Description
Local Make the variable's scope local to its 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
htmlref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

group
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Group
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

Find definition
\end_layout

\end_inset

 Place a red circle on the variable that defines its value.
 
\end_layout

\begin_layout Description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

Select all instances
\end_layout

\end_inset

 Select all instances of this variable 
\end_layout

\begin_layout Description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

Rename all instance
\end_layout

\end_inset

 Do a global search and replace of this variable name with a new name.
 
\end_layout

\begin_layout Description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

Export as CSV
\end_layout

\end_inset

 Export the current variable's value as a CSV file.
 Obviously only really useful when the variable contains a 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
htmlref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

tensor
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

tensors
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

Add integral
\end_layout

\end_inset

 attach an integration operation, and convert the variable into an integral
 type 
\end_layout

\end_deeper
\begin_layout Description
integrals 
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 1
width ""
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

Copy Var
\end_layout

\end_inset

 copy just the integration variable, not the integration operation 
\end_layout

\begin_layout Description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

Toggle Var Binding
\end_layout

\end_inset

 Normally, integrals are tightly bound to their variables.
 By toggling the binding, the integral icon can then be moved independently
 of the variable it is bound to.
 
\end_layout

\end_deeper
\begin_layout Description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

Godley tables
\end_layout

\end_inset

 
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 1
width ""
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

Open Godley Table
\end_layout

\end_inset

 opens a spreadsheet to allow financial flows defining the Godley table
 to be entered or modified.
 
\end_layout

\begin_layout Description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

Resize Godley Table
\end_layout

\end_inset

 allows the icon to be resized.
 
\end_layout

\begin_layout Description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

Edit/Copy var
\end_layout

\end_inset

 allows individual stock and flow variables to be copied or edited.
 
\end_layout

\begin_layout Description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

Export to file
\end_layout

\end_inset

 export table contents as either CSV data, or as a LaTeX table, for import
 into other software.
 
\end_layout

\end_deeper
\begin_layout Description
Groups 
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 1
width ""
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

Zoom to Display
\end_layout

\end_inset

 Zoom the canvas sufficiently to see the contents of the group.
 
\end_layout

\begin_layout Description
Resize Resize the group icon on the canvas.
 
\end_layout

\begin_layout Description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

Save group as
\end_layout

\end_inset

 Save the group in it's own Minsky file.
 
\end_layout

\begin_layout Description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

Flip contents
\end_layout

\end_inset

 Rotate each item within the group by 180
\begin_inset Formula $^{\circ}$
\end_inset

 
\end_layout

\begin_layout Description
Ungroup Ungroup the group, leaving it's contents as icons on the canvas.
 
\end_layout

\begin_layout Description
contentBounds Draws a box on the canvas indicating the smallest bounding
 box containing the group items.
 
\end_layout

\end_deeper
\begin_layout Description
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

Plot Widgets
\end_layout

\end_inset

 
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 1
width ""
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Description
Expand By double-clicking, or selecting 
\begin_inset Quotes eld
\end_inset

Expand
\begin_inset Quotes erd
\end_inset

 from the context menu, a popup window is created of the plot, which can
 be used examine the plotting in more detail.
\end_layout

\begin_layout Description
Resize Allows you to resize the plot icon on the canvas 
\end_layout

\begin_layout Description
Options Customize the plot by adding a title, axes labels and control the
 number of axis ticks and grid lines on the detailed plot.
 You can also add a legend, which is populated from the names of variables
 attached to the plot.
 
\end_layout

\end_deeper
\begin_layout Section
Canvas background and keyboard shortcuts
\end_layout

\begin_layout Standard
The canvas is not simply an inert place for the canvas items to exist.
 There is also a background context menu, giving access to the edit menu
 functionality such as cut/copy/paste, and also keyboard entry.
\end_layout

\begin_layout Standard
Special keys: 
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="right" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
F1 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
context sensitive help
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Shift 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
enter panning mode
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\leftarrow,\rightarrow,\uparrow,\downarrow$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
adjust sliders, adjust Ravel slicers
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The following keystrokes insert an operation
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="2">
<features tabularvalignment="middle">
<column alignment="right" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb-+-
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
add
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb+-+
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
subtract 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb+*+
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
multiply
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb++
\end_layout

\end_inset

/
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
divide
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb+^+
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pow
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb+%+
\end_layout

\end_inset

 & percent operator
\begin_inset Newline newline
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+ 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb+=+
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Godley table
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb+@+
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
plot
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb+#+
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
start a text comment, finish with return
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Typing any other character, then return will insert an operation (if the
 name matches), or otherwise a variable with that name.
\end_layout

\begin_layout Section
Dimensional Analysis
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "dimensional analysis"

\end_inset


\end_layout

\begin_layout Standard
Dimensional analysis is the idea of attaching units of measurement (eg metre
 or second) to the quantities being computed.
 It provides an additional constraint that the system must satisfy, reducing
 the chance of wiring errors.
 Two different units being added together will throw up an error - you cannot
 add 2 metres to 3 kilograms.
 But it should be possible add 2 metres to 3 feet, and get the correct answer.
 You may need to explicitly add a multiply operation to convert from one
 unit to another, for example, dividing the 3 feet by 3.281 before adding
 it to the 2 metres, providing a total of 2.914 meters.
\end_layout

\begin_layout Standard

\series bold
Using Dimensional Analysis in Minsky
\end_layout

\begin_layout Standard
To attach units to quantities in Minsky, you use the units field of the
 variable/parameters/constants edit dialog box.
 Each word typed in this box describes a separate unit.
 
\begin_inset Quotes eld
\end_inset

˖̂
\begin_inset Quotes erd
\end_inset

 followed by an integer is used to represent a power.
 Finally, a single 
\begin_inset Quotes eld
\end_inset

/
\begin_inset Quotes erd
\end_inset

 indicates that the following units are on the denominator, dividing the
 first set of units by the second.
 So to represent the unit of acceleration, you can equivalently type all
 of the following:
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb+m/s^2+
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb+m/s s+
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb+m/s^-2+
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Or spelling it out in full:
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb+metre/second^2+
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb+metre second^-2+
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb+metre / second second+
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Note that metre and m are distinctly different units in Minsky.
\end_layout

\begin_layout Standard
Note – setting the time dimension is done in the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
htmlref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

simulation menu
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

RungeKutta
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Consider the network introduced in the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
htmlref
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

New to System Dynamics
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

intro:new
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 section of the Minsky manual.
 For GDP, one could enter $/year for the units.
 Labor Productivity should be expressed in terms of $ per person year.
 If the system does not accept $/person year, you can enter this as 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb+$ person^-1 year^-1+
\end_layout

\end_inset

.
 Finally, Population has units of person.
 Press reset, and the Workers variable automatically has units of person,
 and EmpRate is dimensionless.
\end_layout

\begin_layout Standard
All function objects require dimensionless inputs.
 You can use dimensional analysis to avoid, for example, incorrectly feeding
 a degree measurement into a sine function, by requiring them to be multiplied
 by a radiansPerDegree parameter.
\end_layout

\begin_layout Section
Bookmarks
\end_layout

\begin_layout Standard
Bookmarks are a useful feature for saving the current position and zoom
 of the canvas, to be able to come back to that part of the canvas later.
 This helps to manage more complicated models.
 To create a new bookmark, click on the 
\begin_inset Quotes eld
\end_inset

Bookmark
\begin_inset Quotes erd
\end_inset

 tab in the top left-hand corner (in-between 
\begin_inset Quotes eld
\end_inset

Edit
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

Insert
\begin_inset Quotes erd
\end_inset

) and select 
\begin_inset Quotes eld
\end_inset

Bookmark this position
\begin_inset Quotes erd
\end_inset

.
 The program will provide a dialogue box to enter in a name for the new
 bookmark.
 After creating the bookmark, all user-created bookmarks can be seen in
 the Bookmarks menu.
 To delete a bookmark, simply select 
\begin_inset Quotes eld
\end_inset

Delete
\begin_inset Quotes erd
\end_inset

 from the Bookmarks menu and select the desired bookmark.
 To open an existing bookmark, select one from the menu.
\end_layout

\begin_layout Standard
You may also create a bookmark from any item on the canvas by selecting
 the bookmark checkbox in the 
\begin_inset Quotes eld
\end_inset

description
\begin_inset Quotes erd
\end_inset

 dialog.
 This is especially useful with text boxes, since they provide a visual
 indicator for what is bookmarked at a given location—Parameter definitions,
 Plots, etc.
\end_layout

\begin_layout Section
Ravel
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Ravel"

\end_inset


\emph on
Ravel
\emph default
 the program is a commercial data analysis extension to the Open Source
 system dynamics program 
\emph on
Minsky
\emph default
.
 It inherits all of 
\emph on
Minsky
\emph default
's features and adds the Ravel™℗, a graphical object for the manipulation
 and analysis of multidimensional data.
 If you are using 
\emph on
Minsky
\emph default
 and would like to check out 
\emph on
Ravel
\emph default
, go to 
\emph on
Ravel
\emph default
's Patreon page 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.patreon.com/ravelation
\end_layout

\end_inset

and sign up.
 The monthly fee is A
\backslash
$10 (roughly US
\backslash
$6.50) and there is a 7-day welcome period during which you can trial 
\emph on
Ravel
\emph default
 before the fee is applied.
\end_layout

\begin_layout Subsection
Installing Ravel
\end_layout

\begin_layout Standard
Once you are a member of 
\emph on
Ravel
\emph default
's Patreon group, you have access to the Ravelation Patreon store, and you
 can download the latest copy of 
\emph on
Minsky
\emph default
—either from the store or from attachments to posts announcing updated versions.
\end_layout

\begin_layout Standard
Download and install 
\emph on
Minsky
\emph default
, which will launch the program once it is installed.
 Then choose 
\begin_inset Quotes eld
\end_inset

Upgrade
\begin_inset Quotes erd
\end_inset

 from the File menu.
 The RavelUpgrader form will pop up, asking you for confirmation that you
 are willing to let the process check your name and account details on Patreon.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/RavelUpgradeForm.png

\end_inset


\end_layout

\begin_layout Standard
Click on 
\begin_inset Quotes eld
\end_inset

Allow
\begin_inset Quotes erd
\end_inset

 and 
\emph on
Minsky
\emph default
 will check that you are a member, and if so then download and install the
 
\emph on
Ravel
\emph default
 extension into 
\emph on
Minsky
\emph default
.
 Once this is completed, the latest version of 
\emph on
Ravel 
\emph default
will be installed in your 
\emph on
Minsky 
\emph default
subdirectory, and you will have full access to its commands.
\end_layout

\begin_layout Subsection
Introduction to the Ravel GUI Object
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Ravel-GUI Object"

\end_inset


\end_layout

\begin_layout Standard
A Ravel is inserted onto the wiring canvas by clicking on the 
\begin_inset Graphics
	filename images/RavelWidget.png

\end_inset

widget from the toolbar.
 The first Ravel inserted into a document appears in Edit mode as shown
 below:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/00RavelBlank.svg

\end_inset


\end_layout

\begin_layout Standard
The essential step in using a Ravel is to attach data to it via the triangular
 input port.
 See 
\begin_inset CommandInset ref
LatexCommand ref
reference "CSV import"
plural "false"
caps "false"
noprefix "false"

\end_inset

 for how to import data.
 When a data file is attached to the input port of a Ravel, a multi-arrowed
 object fills the Ravel rectangle.
 If there are seven dimensions or more to the data, it will appear as shown
 below, with arrows in a pastel shade and axes labels not shown unless your
 mouse is hovering over an axis:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/RavelDataImporting01.svg
	width 10cm

\end_inset


\end_layout

\begin_layout Standard
With six or less dimensions it will appear as shown below, with full-colour
 axes and axis labels shown:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/RavelDataImporting02.svg
	width 10cm

\end_inset


\end_layout

\begin_layout Standard
The arrows are the dimensions of the data; the dots are selectors for specific
 values on each dimension.
 When a CSV import parameter (
\begin_inset CommandInset ref
LatexCommand ref
reference "CSV import"
plural "false"
caps "false"
noprefix "false"

\end_inset

) is first attached to a Ravel, all the selector dots are in the centre
 of the Ravel, so that all the data in the Ravel is outputted to any Variable,
 Sheet or Plot attached to it.
 The next figure shows all 4 selectors being used so that the Ravel outputs
 the annualized rate of inflation for the USA in June 2022.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/RavelSingleDataPointSelected.svg
	width 10cm

\end_inset


\end_layout

\begin_layout Standard
If the selector dot remains in the centre for one dimension, then a column
 of data for that dimension is outputted from the Ravel:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/RavelDataSeriesSelected.svg
	width 15cm

\end_inset


\end_layout

\begin_layout Standard
With two selector dots remaining in the centre, an array of data is outputted:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/RavelData2SeriesSelected.svg
	width 15cm

\end_inset


\end_layout

\begin_layout Standard
Clearly a number of countries had extreme rates of inflation at various
 times between the 1970s and the mid-1990s.
 There are Ravel functions which can be used to isolate these countries
 (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "Operations"
plural "false"
caps "false"
noprefix "false"

\end_inset

), but it is also easy to identify them visually by moving the selector
 dot along the Reference Area axis.
 You can do this by either:
\end_layout

\begin_layout Itemize
Clicking on the selector dot with the mouse and dragging it along the axis;
 or
\end_layout

\begin_layout Itemize
Hovering the mouse over the axis and using the arrow keys.
 The up-arrow and right-arrow move you forward along a data axis from the
 first entry to the last; the down and left arrow keys move you backward.
\end_layout

\begin_layout Standard
Eyeballing the data indicates that a 40% annual inflation rate is the dividing
 line between countries which did and did not experience a hyperinflation
 in the post-WWII period (defined as from 1955 onwards to exclude WWII-influence
d price disturbances—for instance, those associated with the Russian occupation
 of Austria ending in 1955).
 That set of countries (Argentina, Brazil, Bulgaria, Chile, Colombia, Croatia,
 Czechia, Estonia, Iceland, Indonesia, Israel, Latvia, Lithuania, Mexico,
 North Macedonia, Peru, Philippines, Poland, Romania, Serbia, Slovakia,
 Slovenia and Turkey) are identified in the next figure as 
\begin_inset Quotes eld
\end_inset

HyperInflation
\begin_inset Quotes erd
\end_inset

 countries, while the remainder are 
\begin_inset Quotes eld
\end_inset

NormalInflation
\begin_inset Quotes erd
\end_inset

 countries.
 Except for Iceland, Israel, the Philippines, and Turkey, the hyperinflation
 countries were either South American, or countries which underwent the
 transition from socialism to capitalism in the 1990s.
 This figure also shows the iconized version of a Ravel, which is generated
 by toggling 
\begin_inset Quotes eld
\end_inset

Editor mode
\begin_inset Quotes erd
\end_inset

 on the context menu (also, by default, the first Ravel inserted into a
 document is in Editor mode, and all subsequent Ravels are inserted in iconized
 mode).
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/RavelDataLockedSubsets.svg
	width 15cm

\end_inset


\end_layout

\begin_layout Standard
This selection employed one context-menu feature of a Ravel—
\begin_inset Quotes erd
\end_inset

Pick Axis Slices
\begin_inset Quotes erd
\end_inset

 was used on the Reference area axis to choose countries which had annual
 inflation rate of above 40% between 1955 and 2024—and one Ravel-specific
 widget, the Lock (
\begin_inset CommandInset ref
LatexCommand ref
reference "Lock"
plural "false"
caps "false"
noprefix "false"

\end_inset

), which creates a subset of the data which can be allocated to a variable.
 The selection on the Ravel can then be changed without altering the subset
 selected by the Lock.
\end_layout

\begin_layout Standard
Now that the data is sensibly divided, it is feasible to calculate average
 inflation rates for normal countries.
 This is done by choosing 
\begin_inset Quotes eld
\end_inset

Av
\begin_inset Quotes erd
\end_inset

 on the context menu command 
\begin_inset Quotes eld
\end_inset

Set next aggregation
\begin_inset Quotes erd
\end_inset

, and then dragging the Reference Area axis in to the centre of the Ravel.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/CPI_SubsetsAverages.svg
	width 15cm

\end_inset


\end_layout

\begin_layout Standard
It is now possible to compare the inflation of individual countries to the
 average for all normal inflation countries.
 In the next figure, the USA and Japan were selected using Pick axis slices,
 and their data is graphed against the average.
 This shows that Japan's inflation rate exceeded America's—and the average—until
 1975, after which Japan's inflation rate has been consistently lower than
 that of the USA and the average.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/CPI_SubsetsAverageVsSelection.svg
	width 15cm

\end_inset


\end_layout

\begin_layout Subsection
Ravel-specific commands
\end_layout

\begin_layout Standard
Ravels have a range of features controlled by the Ravel itself, the axes
 of the Ravel, and context menu commands relevant to the Ravel and its axes.
\end_layout

\begin_layout Subsubsection
Axis rotation
\end_layout

\begin_layout Standard
Ravel outputs the data in the right-pointing axis as the series for graphing
 in a plot, and as the rows of a sheet.
 In the previous figures, Date was the right-pointing axis, which generated
 a set of time series for plotting (the data shown on the Y1 axis).
 In the next figure, Reference Area is rotated into the right-pointing axis
 position in the second plot, which means that Date data now generates the
 x-axis information.
 The y-axis information is therefore the rate of inflation on a specified
 date.
 The second plot in the figure below shows the annual inflation rates for
 Japan and the USA at the highest point for the inflation data since WWII.
 Since this date follows the Oil Embargo imposed by OPEC members after the
 Yom Kippur War, this implies that the main cause of the inflationary surge
 was the four-fold increase in oil prices (from US
\backslash
$2.50 a barrel to 
\backslash
$10) caused by the embargo.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/CPI_SubsetsAxisRotation.svg
	width 15cm

\end_inset


\end_layout

\begin_layout Subsubsection
Axis aggregation
\end_layout

\begin_layout Standard
Axes can be collapsed as well as rotated, in which case the data on the
 axis is aggregated according to the choice made on the 
\begin_inset Quotes eld
\end_inset

Set next aggregation
\begin_inset Quotes erd
\end_inset

 Ravel context menu.
 In the next figure, Price is chosen on the Data axis, and all other axes
 apart from Date are aggregated by the Sum function (the default aggregation
 method).
 The Ravel therefore outputs total sales by date.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/SmallBusinessAggregation.svg
	width 15cm

\end_inset


\end_layout

\begin_layout Standard
The available aggregations are: Sum, Product, Average, Minimum, Maximum,
 and Standard Deviation.
 The default setting is Sum.
 The other options can be set via the Context (right-mouse click) menu for
 Ravels.
\end_layout

\begin_layout Subsection
Context menu for Ravels
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="20" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Command
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Effect
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Help
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bring up context help on Ravels
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Open a text form for documenting the Ravel
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Editor Mode
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Toggle between seeing the Ravel in Edit or Icon mode
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Export as CSV
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Export the data in the Ravel as a CSV file
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set next aggregation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Determine the mathematical operation applied when the next axis is collapsed
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Collapse all handles
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aggregate all axes.
 Ravel will return a single number
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Expand all handles
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Disaggregate all axes.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Flip
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Turn the Ravel around so that the input is on the right and output on the
 left
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Link specific handles
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Control over linked Ravels to link only some aspects–orientation, caliper,
 etc.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Join Link Group
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Add this Ravel to an existing set of linked Ravels
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unlink
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Remove this Ravel from an existing set of linked Ravels
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Toggle Axis Calipers
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Turn the caliper on a selected axis on or off
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sort Axis
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sort axis by the value of axis labels.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sort by value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sort axis by the value of the data on an axis.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pick axis slices
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Manually choose which axis values are output by the Ravel
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Axis properties
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description and Dimension show the dimension name; Set next aggregation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rotate Ravel
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rotate the Ravel through an arbitrary angle
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Add to Publication Tab
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Place the Ravel on a specified Publication Tab
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Delete Ravel
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Many
\end_layout

\begin_layout Subsubsection
Calipers
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Calipers"

\end_inset

A caliper is a range selector for an axis.
 Its customary use will be to select a range of dates, but a caliper can
 be applied to any axis to select a subset of data which is contiguous.
 In the next figure, calipers have been applied to extract the last 15 days'
 of data from this Ravel.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/SmallBusinessCalipers.svg
	width 15cm

\end_inset


\end_layout

\begin_layout Standard
When a caliper is initially created, it spans the entire range of a given
 dimension.
 It is applied to sections of that data by moving the vertical left or right
 side of the parenthesis; the entire parenthesis is moved by clicking and
 dragging on the peak of the parenthesis—the length of the selection is
 thus maintained while the segment selected is altered.
\end_layout

\begin_layout Standard
Ravel currently allows one caliper per axis.
 Future releases will enable multiple calipers, which will allow non-contiguous
 segments of data to be displayed on the one plot or sheet.
\end_layout

\begin_layout Subsubsection
Sort axis
\end_layout

\begin_layout Standard
The default order of an axis is determined by the data input into it.
 The data can be sorted by the names of axis entries—for example, countries
 can be sorted alphabetically.
 This can be sorted forward (from A to Z) or in reverse
\end_layout

\begin_layout Subsubsection
Sort by value
\end_layout

\begin_layout Standard
The order of an axis can also be determined by the data values for specific
 axis selections.
 The command is only available if the axis selections return a single column
 of data for ranking—for example, in the inflation data, a single date is
 chosen so that the value of the inflation for all Reference Areas (countries)
 can be compared.
 There are four options generated by the combination of dynamic or static
 sorting, and forward or backward direction.
 Static sorting sorts the single axis by the value of the data, and does
 not alter that data as (for example) different dates are chosen using the
 selector dot.
 Dynamic sorting alters the order so that the axis is resorted when (for
 example) a different date is selected.
 In the next figure, dynamic sorting is applied to the Reference Area axis
 for the rate of inflation.
 The output is also put through a Slice 
\begin_inset CommandInset ref
LatexCommand ref
reference "Operation:slice"
plural "false"
caps "false"
noprefix "false"

\end_inset

 operator, so that only the top 5 countries are output.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/CPI_SubsetsDynamicSorting.svg
	width 15cm

\end_inset


\end_layout

\begin_layout Subsubsection
Pick axis slices
\end_layout

\begin_layout Standard
Pick axis slices lets you select an arbitrary number of slices—as was done
 above to choose just the USA and Japan to compare their rates of inflation.
 Individual slices can be chosen by left-clicking on the slice; to select
 more than one slice, hold down the control key as you click.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/PickSlices.png

\end_inset


\end_layout

\begin_layout Subsubsection
Rotate Ravel
\end_layout

\begin_layout Standard
This is a convenience command for when you want to have the output from
 a Ravel be on its left side rather than its right–for example, when the
 Ravel is linked to the Y2 axis of a plot.
\end_layout

\begin_layout Subsection
Lock
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Lock"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/Lock.svg

\end_inset


\end_layout

\begin_layout Standard
Locks can only be attached to the output of Ravels.
 The Lock widget is used to fix the output of a Ravel with a particular
 configuration of data.
 After the Lock is closed (either by double-clicking on the Lock, or choosing
 Lock from the context menu), alterations can be made to the source Ravel
 without altering the output of the Lock.
 This makes it possible to take multiple slices of the data from one Ravel,
 and to work with them by assigning those slices to variables, manipulating
 the subset of data via additional Ravels, etc.
 It has a number of useful context menu commands.
\end_layout

\begin_layout Subsubsection
Apply Lock state to Ravel
\end_layout

\begin_layout Standard
This menu item imposes the lock's state on the source Ravel.
 Since many locks can be applied to one Ravel, this makes it easy to edit
 the data as required to fine-tune individual locks.
 For example, the data for Inflation
\begin_inset script subscript

\begin_layout Plain Layout
Average
\end_layout

\end_inset


\begin_inset script superscript

\begin_layout Plain Layout
Normal
\end_layout

\end_inset

 initially began in 1950.
 Since this included a very brief period of hyperinflation for Austria associate
d with Russia ceasing its occupation, it was advisable to alter the selection
 to start the caliper in 1955.
 This was easily done by applying the state of the lock to the Ravel, then
 editing the caliper, and opening and re-closing the lock.
\end_layout

\begin_layout Subsection
Linking Ravels
\end_layout

\begin_layout Standard
When Ravels share dimensions, it is possible to link them together so that
 what is done to one Ravel—plotting, selecting data, rotating axes, etc.—is
 done to the other Ravel.
 This is very useful when you wish to examine relations between different
 sets of data.
\end_layout

\begin_layout Standard
Ravels are linked by dragging the mouse to select the desired Ravels, then
 choosing 
\begin_inset Quotes eld
\end_inset

Link selected Ravels
\begin_inset Quotes erd
\end_inset

 from the context menu when the mouse is hovering over the canvas.
\end_layout

\begin_layout Standard
In the next figure, the two Ravels whose borders are highlighted in brown
 have been linked.
 When the country 
\begin_inset Quotes eld
\end_inset

United States
\begin_inset Quotes erd
\end_inset

 is chosen for the Ravel containing house price data, the same selection
 is made for the Ravel containing household debt data.
 The plot and the regression analysis therefore compare United States house
 price changes to the change in the change in household debt.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/RavelLinking.svg
	width 15cm

\end_inset


\end_layout

\begin_layout Standard
When the selector dot for Country is moved to another country, the graph
 and the correlation result for household debt and house prices for that
 country replaces the information shown for the USA.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/RavelLinking2ndCountry.svg
	width 15cm

\end_inset


\end_layout

\begin_layout Standard
Linking can be refined using the context menu for Ravels—rather than for
 the canvas.
 If your mouse is over one of the selected Ravels rather than the canvas,
 the context menu option is 
\begin_inset Quotes eld
\end_inset

Lock specific handles
\begin_inset Quotes erd
\end_inset

.
 That brings up the detailed lock menu:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/RavelLockSpecificHandles.png
	width 12cm

\end_inset


\end_layout

\begin_layout Standard
It is thus possible to turn on or off selecting of the same slices, arrow
 orientation, calipers and sort order if desired.
\end_layout

\end_body
\end_document
