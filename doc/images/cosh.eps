%!PS-Adobe-3.0
%%Creator: cairo 1.15.10 (http://cairographics.org)
%%CreationDate: Mon May 27 11:24:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 12x11mm 35 32 0 () ()
%%BoundingBox: 0 0 35 32
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 12x11mm
%%PageBoundingBox: 0 0 35 32
35 32 cairo_set_page_size
%%EndPageSetup
q 0 0 35 32 rectclip
1 0 0 -1 0 32 cm q
0 g
9.043 18.102 m 9.906 18.211 l 9.809 18.809 9.566 19.277 9.18 19.613 c 8.789
 19.953 8.313 20.117 7.75 20.117 c 7.035 20.117 6.465 19.887 6.035 19.422
 c 5.602 18.961 5.387 18.297 5.391 17.426 c 5.387 16.871 5.477 16.375 5.668
 15.957 c 5.852 15.539 6.133 15.227 6.516 15.016 c 6.891 14.805 7.305 14.695
 7.754 14.695 c 8.316 14.695 8.773 14.844 9.137 15.125 c 9.492 15.414 9.723
 15.816 9.824 16.336 c 8.969 16.469 l 8.887 16.125 8.742 15.863 8.535 15.684
 c 8.324 15.512 8.078 15.426 7.789 15.422 c 7.344 15.426 6.984 15.582 6.711
 15.898 c 6.426 16.215 6.289 16.719 6.293 17.402 c 6.289 18.102 6.422 18.609
 6.695 18.922 c 6.957 19.242 7.309 19.398 7.738 19.395 c 8.082 19.398 8.367
 19.293 8.602 19.078 c 8.832 18.867 8.98 18.547 9.043 18.102 c h
9.043 18.102 m f
10.332 17.406 m 10.328 16.449 10.594 15.742 11.133 15.273 c 11.578 14.891
 12.117 14.695 12.766 14.695 c 13.473 14.695 14.059 14.93 14.512 15.398 
c 14.961 15.867 15.188 16.516 15.191 17.336 c 15.188 18.004 15.082 18.531
 14.887 18.91 c 14.684 19.297 14.395 19.594 14.016 19.801 c 13.633 20.016
 13.211 20.117 12.766 20.117 c 12.031 20.117 11.445 19.887 11 19.418 c 10.551
 18.961 10.328 18.285 10.332 17.406 c h
11.234 17.406 m 11.23 18.07 11.375 18.57 11.672 18.902 c 11.957 19.234 
12.32 19.398 12.766 19.395 c 13.195 19.398 13.559 19.234 13.852 18.898 c
 14.141 18.57 14.281 18.063 14.289 17.379 c 14.281 16.738 14.137 16.254 
13.848 15.922 c 13.555 15.594 13.195 15.43 12.766 15.426 c 12.32 15.43 11.957
 15.594 11.672 15.918 c 11.375 16.25 11.23 16.742 11.234 17.406 c h
11.234 17.406 m f
15.867 18.453 m 16.738 18.316 l 16.781 18.668 16.918 18.938 17.145 19.117
 c 17.367 19.305 17.68 19.398 18.082 19.395 c 18.48 19.398 18.781 19.316
 18.98 19.148 c 19.172 18.984 19.266 18.793 19.273 18.57 c 19.266 18.375
 19.18 18.219 19.016 18.102 c 18.887 18.027 18.59 17.926 18.117 17.805 c
 17.465 17.641 17.016 17.504 16.773 17.383 c 16.52 17.266 16.332 17.102 
16.207 16.891 c 16.078 16.68 16.016 16.445 16.016 16.191 c 16.016 15.961
 16.063 15.75 16.172 15.551 c 16.273 15.355 16.422 15.191 16.605 15.059 
c 16.738 14.961 16.922 14.879 17.164 14.805 c 17.398 14.734 17.652 14.695
 17.926 14.695 c 18.328 14.695 18.688 14.758 18.992 14.875 c 19.301 14.992
 19.531 15.152 19.68 15.352 c 19.824 15.551 19.922 15.82 19.98 16.152 c 
19.121 16.27 l 19.082 16.008 18.965 15.797 18.781 15.645 c 18.59 15.5 18.324
 15.426 17.988 15.422 c 17.578 15.426 17.289 15.488 17.125 15.621 c 16.949
 15.758 16.867 15.914 16.867 16.09 c 16.867 16.207 16.898 16.309 16.973 
16.398 c 17.039 16.492 17.152 16.57 17.309 16.633 c 17.391 16.664 17.652
 16.742 18.086 16.855 c 18.707 17.027 19.141 17.164 19.383 17.266 c 19.629
 17.375 19.82 17.523 19.965 17.727 c 20.102 17.93 20.176 18.18 20.176 18.477
 c 20.176 18.77 20.086 19.047 19.918 19.305 c 19.746 19.566 19.5 19.766 
19.18 19.906 c 18.859 20.047 18.492 20.117 18.086 20.117 c 17.406 20.117
 16.895 19.98 16.543 19.695 c 16.191 19.422 15.969 19.008 15.867 18.453 
c h
15.867 18.453 m f
21.219 20 m 21.219 12.844 l 22.102 12.844 l 22.102 15.41 l 22.508 14.938
 23.027 14.695 23.652 14.695 c 24.031 14.695 24.367 14.773 24.652 14.926
 c 24.93 15.078 25.133 15.289 25.258 15.551 c 25.375 15.824 25.438 16.211
 25.445 16.715 c 25.445 20 l 24.566 20 l 24.566 16.715 l 24.563 16.281 24.461
 15.961 24.277 15.758 c 24.082 15.563 23.813 15.461 23.473 15.453 c 23.207
 15.461 22.965 15.527 22.734 15.66 c 22.504 15.797 22.344 15.977 22.246 
16.207 c 22.148 16.441 22.102 16.762 22.102 17.164 c 22.102 20 l h
21.219 20 m f
0 0 1 rg
1.25 w
0 J
0 j
[] 0.0 d
10 M q 1 0 0 1 0 0 cm
1.25 1.25 m 1.25 31.25 l 31.25 31.25 l 33.75 16.25 l 31.25 1.25 l h
1.25 1.25 m S Q
Q Q
showpage
%%Trailer
%%EOF
