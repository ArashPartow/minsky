%!PS-Adobe-3.0
%%Creator: cairo 1.15.10 (http://cairographics.org)
%%CreationDate: Mon May 27 11:24:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 12x11mm 35 32 0 () ()
%%BoundingBox: 0 0 35 32
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 12x11mm
%%PageBoundingBox: 0 0 35 32
35 32 cairo_set_page_size
%%EndPageSetup
q 0 0 35 32 rectclip
1 0 0 -1 0 32 cm q
0 g
5.309 18.453 m 6.176 18.316 l 6.219 18.668 6.359 18.938 6.582 19.117 c 
6.805 19.305 7.117 19.398 7.52 19.395 c 7.922 19.398 8.219 19.316 8.418 
19.148 c 8.609 18.984 8.707 18.793 8.711 18.57 c 8.707 18.375 8.617 18.219
 8.453 18.102 c 8.324 18.027 8.027 17.926 7.555 17.805 c 6.906 17.641 6.453
 17.504 6.211 17.383 c 5.957 17.266 5.773 17.102 5.645 16.891 c 5.516 16.68
 5.453 16.445 5.453 16.191 c 5.453 15.961 5.504 15.75 5.609 15.551 c 5.711
 15.355 5.859 15.191 6.047 15.059 c 6.176 14.961 6.363 14.879 6.602 14.805
 c 6.836 14.734 7.09 14.695 7.363 14.695 c 7.77 14.695 8.125 14.758 8.434
 14.875 c 8.742 14.992 8.969 15.152 9.117 15.352 c 9.262 15.551 9.359 15.82
 9.418 16.152 c 8.559 16.27 l 8.52 16.008 8.402 15.797 8.219 15.645 c 8.027
 15.5 7.766 15.426 7.426 15.422 c 7.016 15.426 6.727 15.488 6.563 15.621
 c 6.387 15.758 6.305 15.914 6.305 16.09 c 6.305 16.207 6.336 16.309 6.41
 16.398 c 6.48 16.492 6.594 16.57 6.75 16.633 c 6.832 16.664 7.09 16.742
 7.523 16.855 c 8.145 17.027 8.578 17.164 8.824 17.266 c 9.066 17.375 9.258
 17.523 9.406 17.727 c 9.539 17.93 9.613 18.18 9.613 18.477 c 9.613 18.77
 9.527 19.047 9.355 19.305 c 9.184 19.566 8.941 19.766 8.617 19.906 c 8.297
 20.047 7.93 20.117 7.523 20.117 c 6.844 20.117 6.332 19.98 5.98 19.695 
c 5.629 19.422 5.406 19.008 5.309 18.453 c h
5.309 18.453 m f
10.664 13.852 m 10.664 12.844 l 11.543 12.844 l 11.543 13.852 l h
10.664 20 m 10.664 14.813 l 11.543 14.813 l 11.543 20 l h
10.664 20 m f
12.883 20 m 12.883 14.813 l 13.672 14.813 l 13.672 15.551 l 14.055 14.984
 14.602 14.695 15.32 14.695 c 15.629 14.695 15.918 14.758 16.18 14.867 c
 16.441 14.98 16.637 15.125 16.773 15.309 c 16.898 15.492 16.992 15.707 
17.047 15.957 c 17.074 16.125 17.09 16.41 17.094 16.813 c 17.094 20 l 16.215
 20 l 16.215 16.844 l 16.211 16.488 16.176 16.219 16.113 16.047 c 16.039
 15.867 15.918 15.727 15.746 15.621 c 15.57 15.512 15.371 15.461 15.137 
15.461 c 14.762 15.461 14.434 15.582 14.164 15.816 c 13.891 16.059 13.758
 16.508 13.758 17.168 c 13.758 20 l h
12.883 20 m f
18.441 20 m 18.441 12.844 l 19.32 12.844 l 19.32 15.41 l 19.73 14.938 20.25
 14.695 20.875 14.695 c 21.254 14.695 21.586 14.773 21.875 14.926 c 22.152
 15.078 22.352 15.289 22.48 15.551 c 22.598 15.824 22.66 16.211 22.664 16.715
 c 22.664 20 l 21.789 20 l 21.789 16.715 l 21.781 16.281 21.684 15.961 21.5
 15.758 c 21.305 15.563 21.035 15.461 20.695 15.453 c 20.43 15.461 20.188
 15.527 19.957 15.66 c 19.727 15.797 19.566 15.977 19.469 16.207 c 19.371
 16.441 19.32 16.762 19.32 17.164 c 19.32 20 l h
18.441 20 m f
0 0 1 rg
1.25 w
0 J
0 j
[] 0.0 d
10 M q 1 0 0 1 0 0 cm
1.25 1.25 m 1.25 31.25 l 31.25 31.25 l 33.75 16.25 l 31.25 1.25 l h
1.25 1.25 m S Q
Q Q
showpage
%%Trailer
%%EOF
