%!PS-Adobe-3.0
%%Creator: cairo 1.15.10 (http://cairographics.org)
%%CreationDate: Mon May 27 11:24:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 12x11mm 35 32 0 () ()
%%BoundingBox: 0 0 35 32
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 12x11mm
%%PageBoundingBox: 0 0 35 32
35 32 cairo_set_page_size
%%EndPageSetup
q 0 0 35 32 rectclip
1 0 0 -1 0 32 cm q
0 g
5.348 18.258 m 6.324 18.105 l 6.375 18.5 6.527 18.797 6.781 19.004 c 7.027
 19.215 7.379 19.32 7.832 19.316 c 8.285 19.32 8.625 19.227 8.844 19.043
 c 9.063 18.863 9.176 18.641 9.176 18.391 c 9.176 18.168 9.078 17.992 8.883
 17.859 c 8.746 17.773 8.406 17.664 7.871 17.531 c 7.148 17.352 6.645 17.191
 6.367 17.055 c 6.086 16.918 5.867 16.734 5.727 16.5 c 5.582 16.266 5.512
 16.008 5.512 15.711 c 5.512 15.461 5.57 15.219 5.688 14.996 c 5.805 14.773
 5.969 14.59 6.176 14.445 c 6.328 14.332 6.539 14.234 6.801 14.156 c 7.066
 14.078 7.348 14.039 7.656 14.031 c 8.109 14.039 8.512 14.105 8.863 14.234
 c 9.203 14.371 9.461 14.547 9.629 14.77 c 9.797 14.996 9.906 15.297 9.969
 15.672 c 9.004 15.801 l 8.961 15.508 8.832 15.273 8.625 15.102 c 8.406 
14.938 8.109 14.852 7.73 14.848 c 7.273 14.852 6.953 14.926 6.758 15.074
 c 6.563 15.227 6.465 15.398 6.465 15.602 c 6.465 15.734 6.504 15.852 6.586
 15.945 c 6.664 16.055 6.793 16.141 6.969 16.211 c 7.063 16.25 7.352 16.332
 7.844 16.465 c 8.535 16.656 9.02 16.805 9.301 16.922 c 9.574 17.039 9.797
 17.219 9.953 17.441 c 10.109 17.676 10.188 17.953 10.191 18.285 c 10.188
 18.617 10.086 18.93 9.902 19.219 c 9.707 19.512 9.43 19.734 9.066 19.891
 c 8.703 20.055 8.297 20.133 7.844 20.133 c 7.078 20.133 6.5 19.977 6.109
 19.664 c 5.707 19.352 5.453 18.883 5.348 18.258 c h
5.348 18.258 m f
11.371 13.086 m 11.371 11.949 l 12.363 11.949 l 12.363 13.086 l h
11.371 20 m 11.371 14.164 l 12.363 14.164 l 12.363 20 l h
11.371 20 m f
13.867 20 m 13.867 14.164 l 14.754 14.164 l 14.754 14.996 l 15.18 14.359
 15.801 14.039 16.609 14.031 c 16.961 14.039 17.285 14.102 17.582 14.223
 c 17.875 14.355 18.094 14.523 18.246 14.723 c 18.387 14.93 18.492 15.176
 18.555 15.449 c 18.582 15.641 18.602 15.957 18.609 16.41 c 18.609 20 l 
17.617 20 l 17.617 16.449 l 17.613 16.055 17.574 15.758 17.5 15.551 c 17.422
 15.355 17.289 15.195 17.094 15.074 c 16.898 14.957 16.668 14.898 16.406
 14.891 c 15.98 14.898 15.613 15.031 15.313 15.293 c 15.004 15.563 14.852
 16.07 14.852 16.816 c 14.852 20 l h
13.867 20 m f
19.656 13.598 2.367 0.773 re f
25.555 16.25 m 24.785 16.25 l 24.785 11.348 l 24.598 11.531 24.355 11.711
 24.055 11.879 c 23.754 12.063 23.484 12.191 23.246 12.273 c 23.246 11.531
 l 23.676 11.332 24.051 11.09 24.375 10.801 c 24.695 10.512 24.922 10.234
 25.059 9.961 c 25.555 9.961 l h
25.555 16.25 m f
0 0 1 rg
1.25 w
0 J
0 j
[] 0.0 d
10 M q 1 0 0 1 0 0 cm
1.25 1.25 m 1.25 31.25 l 31.25 31.25 l 33.75 16.25 l 31.25 1.25 l h
1.25 1.25 m S Q
Q Q
showpage
%%Trailer
%%EOF
