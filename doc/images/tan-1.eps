%!PS-Adobe-3.0
%%Creator: cairo 1.15.10 (http://cairographics.org)
%%CreationDate: Mon May 27 11:24:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 12x11mm 35 32 0 () ()
%%BoundingBox: 0 0 35 32
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 12x11mm
%%PageBoundingBox: 0 0 35 32
35 32 cairo_set_page_size
%%EndPageSetup
q 0 0 35 32 rectclip
1 0 0 -1 0 32 cm q
0 g
7.898 19.117 m 8.043 19.992 l 7.758 20.047 7.508 20.074 7.297 20.078 c 
6.934 20.074 6.656 20.02 6.461 19.906 c 6.254 19.797 6.117 19.645 6.039 
19.457 c 5.961 19.273 5.922 18.887 5.922 18.289 c 5.922 14.938 l 5.195 14.938
 l 5.195 14.164 l 5.922 14.164 l 5.922 12.719 l 6.906 12.129 l 6.906 14.164
 l 7.898 14.164 l 7.898 14.938 l 6.906 14.938 l 6.906 18.344 l 6.906 18.629
 6.918 18.813 6.957 18.891 c 6.988 18.98 7.047 19.043 7.129 19.086 c 7.203
 19.137 7.313 19.16 7.465 19.156 c 7.574 19.16 7.719 19.145 7.898 19.117
 c h
7.898 19.117 m f
12.676 19.281 m 12.305 19.594 11.953 19.813 11.617 19.941 c 11.273 20.07
 10.914 20.133 10.527 20.133 c 9.883 20.133 9.391 19.977 9.047 19.664 c 
8.703 19.352 8.527 18.949 8.531 18.461 c 8.527 18.18 8.594 17.922 8.727 
17.68 c 8.852 17.445 9.02 17.258 9.234 17.109 c 9.438 16.969 9.68 16.859
 9.953 16.789 c 10.137 16.738 10.43 16.688 10.832 16.641 c 11.621 16.547
 12.211 16.438 12.594 16.297 c 12.594 16.168 12.594 16.078 12.598 16.039
 c 12.594 15.641 12.5 15.355 12.316 15.188 c 12.063 14.969 11.684 14.859
 11.191 14.852 c 10.723 14.859 10.383 14.941 10.16 15.098 c 9.938 15.266
 9.77 15.551 9.668 15.961 c 8.703 15.828 l 8.785 15.422 8.93 15.082 9.137
 14.828 c 9.336 14.574 9.625 14.379 10.012 14.242 c 10.387 14.105 10.832
 14.039 11.332 14.031 c 11.832 14.039 12.23 14.098 12.543 14.211 c 12.852
 14.332 13.082 14.477 13.234 14.652 c 13.375 14.828 13.477 15.055 13.539
 15.328 c 13.57 15.492 13.59 15.797 13.59 16.234 c 13.59 17.555 l 13.59 
18.477 13.609 19.063 13.652 19.301 c 13.691 19.547 13.773 19.773 13.906 
20 c 12.871 20 l 12.766 19.797 12.695 19.555 12.676 19.281 c h
12.594 17.07 m 12.23 17.219 11.691 17.344 10.977 17.445 c 10.566 17.508
 10.277 17.578 10.113 17.648 c 9.941 17.727 9.816 17.828 9.723 17.965 c 
9.629 18.105 9.582 18.262 9.586 18.434 c 9.582 18.695 9.684 18.914 9.883
 19.094 c 10.082 19.266 10.375 19.355 10.762 19.355 c 11.145 19.355 11.48
 19.273 11.777 19.105 c 12.07 18.941 12.289 18.715 12.434 18.422 c 12.539
 18.203 12.594 17.871 12.594 17.438 c h
12.594 17.07 m f
15.125 20 m 15.125 14.164 l 16.012 14.164 l 16.012 14.996 l 16.438 14.359
 17.059 14.039 17.867 14.031 c 18.219 14.039 18.543 14.102 18.84 14.223 
c 19.133 14.355 19.352 14.523 19.504 14.723 c 19.645 14.93 19.75 15.176 
19.813 15.449 c 19.84 15.641 19.859 15.957 19.867 16.41 c 19.867 20 l 18.875
 20 l 18.875 16.449 l 18.871 16.055 18.832 15.758 18.758 15.551 c 18.68 
15.355 18.547 15.195 18.352 15.074 c 18.156 14.957 17.926 14.898 17.664 
14.891 c 17.238 14.898 16.871 15.031 16.57 15.293 c 16.262 15.563 16.109
 16.07 16.109 16.816 c 16.109 20 l h
15.125 20 m f
20.918 13.598 2.363 0.773 re f
26.816 16.25 m 26.043 16.25 l 26.043 11.348 l 25.859 11.531 25.613 11.711
 25.316 11.879 c 25.012 12.063 24.746 12.191 24.504 12.273 c 24.504 11.531
 l 24.934 11.332 25.313 11.09 25.633 10.801 c 25.957 10.512 26.18 10.234
 26.316 9.961 c 26.816 9.961 l h
26.816 16.25 m f
0 0 1 rg
1.25 w
0 J
0 j
[] 0.0 d
10 M q 1 0 0 1 0 0 cm
1.25 1.25 m 1.25 31.25 l 31.25 31.25 l 33.75 16.25 l 31.25 1.25 l h
1.25 1.25 m S Q
Q Q
showpage
%%Trailer
%%EOF
