%!PS-Adobe-3.0
%%Creator: cairo 1.15.10 (http://cairographics.org)
%%CreationDate: Tue Jun 04 13:37:16 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 12x11mm 35 32 0 () ()
%%BoundingBox: 0 0 35 32
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 12x11mm
%%PageBoundingBox: 0 0 35 32
35 32 cairo_set_page_size
%%EndPageSetup
q 0 0 35 32 rectclip
1 0 0 -1 0 32 cm q
0 g
5.824 20 m 5.824 13.516 l 6.805 13.516 l 6.805 14.43 l 7.008 14.109 7.273
 13.859 7.617 13.664 c 7.949 13.473 8.336 13.375 8.77 13.367 c 9.25 13.375
 9.645 13.473 9.953 13.672 c 10.258 13.871 10.473 14.148 10.605 14.508 c
 11.113 13.75 11.781 13.375 12.609 13.367 c 13.246 13.375 13.742 13.551 
14.086 13.906 c 14.434 14.262 14.609 14.813 14.609 15.551 c 14.609 20 l 
13.516 20 l 13.516 15.918 l 13.512 15.484 13.477 15.164 13.406 14.969 c 
13.336 14.781 13.203 14.625 13.016 14.5 c 12.828 14.391 12.609 14.332 12.363
 14.328 c 11.906 14.332 11.527 14.484 11.227 14.781 c 10.922 15.086 10.773
 15.57 10.773 16.234 c 10.773 20 l 9.68 20 l 9.68 15.789 l 9.672 15.309 
9.586 14.941 9.41 14.691 c 9.227 14.453 8.93 14.332 8.523 14.328 c 8.211
 14.332 7.93 14.414 7.672 14.57 c 7.402 14.734 7.211 14.969 7.102 15.281
 c 6.977 15.594 6.918 16.051 6.922 16.637 c 6.922 20 l h
5.824 20 m f
16.242 12.313 m 16.242 11.055 l 17.34 11.055 l 17.34 12.313 l h
16.242 20 m 16.242 13.516 l 17.34 13.516 l 17.34 20 l h
16.242 20 m f
19.016 20 m 19.016 13.516 l 20 13.516 l 20 14.438 l 20.477 13.73 21.164
 13.375 22.066 13.367 c 22.453 13.375 22.813 13.441 23.141 13.586 c 23.469
 13.727 23.711 13.91 23.879 14.137 c 24.039 14.367 24.152 14.633 24.219 
14.945 c 24.258 15.152 24.285 15.508 24.285 16.016 c 24.285 20 l 23.18 20
 l 23.18 16.055 l 23.176 15.609 23.137 15.277 23.055 15.055 c 22.965 14.84
 22.813 14.664 22.598 14.527 c 22.379 14.398 22.121 14.332 21.832 14.328
 c 21.359 14.332 20.957 14.477 20.621 14.77 c 20.281 15.07 20.109 15.633
 20.113 16.461 c 20.113 20 l h
19.016 20 m f
0 0 1 rg
1.25 w
0 J
0 j
[] 0.0 d
10 M q 1 0 0 1 0 0 cm
1.25 1.25 m 1.25 31.25 l 31.25 31.25 l 33.75 16.25 l 31.25 1.25 l h
1.25 1.25 m S Q
Q Q
showpage
%%Trailer
%%EOF
