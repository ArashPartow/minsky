%!PS-Adobe-3.0
%%Creator: cairo 1.15.10 (http://cairographics.org)
%%CreationDate: Mon May 27 11:24:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 12x11mm 35 32 0 () ()
%%BoundingBox: 0 0 35 32
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 12x11mm
%%PageBoundingBox: 0 0 35 32
35 32 cairo_set_page_size
%%EndPageSetup
q 0 0 35 32 rectclip
1 0 0 -1 0 32 cm q
0 g
11.523 15 m 11.523 14.344 l 11.191 14.863 10.707 15.117 10.074 15.117 c
 9.652 15.117 9.273 15.004 8.93 14.773 c 8.578 14.551 8.313 14.234 8.125
 13.824 c 7.93 13.418 7.836 12.949 7.844 12.414 c 7.836 11.898 7.926 11.43
 8.102 11.008 c 8.273 10.586 8.531 10.258 8.875 10.035 c 9.219 9.809 9.605
 9.695 10.035 9.695 c 10.348 9.695 10.625 9.766 10.867 9.898 c 11.113 10.031
 11.309 10.199 11.465 10.41 c 11.465 7.844 l 12.34 7.844 l 12.34 15 l h
8.746 12.414 m 8.746 13.082 8.883 13.574 9.164 13.902 c 9.438 14.234 9.77
 14.398 10.156 14.395 c 10.539 14.398 10.863 14.242 11.133 13.926 c 11.402
 13.613 11.531 13.133 11.539 12.484 c 11.531 11.781 11.398 11.258 11.129
 10.922 c 10.852 10.594 10.512 10.43 10.117 10.426 c 9.723 10.43 9.395 10.59
 9.137 10.902 c 8.871 11.227 8.746 11.727 8.746 12.414 c h
8.746 12.414 m f
0.625 w
0 J
0 j
[] 0.0 d
10 M q 1 0 0 1 0 0 cm
7.5 16.25 m 18.75 16.25 l S Q
11.523 25 m 11.523 24.344 l 11.191 24.863 10.707 25.117 10.074 25.117 c
 9.652 25.117 9.273 25.004 8.93 24.773 c 8.578 24.551 8.313 24.234 8.125
 23.824 c 7.93 23.418 7.836 22.949 7.844 22.414 c 7.836 21.898 7.926 21.43
 8.102 21.008 c 8.273 20.586 8.531 20.258 8.875 20.035 c 9.219 19.809 9.605
 19.695 10.035 19.695 c 10.348 19.695 10.625 19.766 10.867 19.898 c 11.113
 20.031 11.309 20.199 11.465 20.41 c 11.465 17.844 l 12.34 17.844 l 12.34
 25 l h
8.746 22.414 m 8.746 23.082 8.883 23.574 9.164 23.902 c 9.438 24.234 9.77
 24.398 10.156 24.395 c 10.539 24.398 10.863 24.242 11.133 23.926 c 11.402
 23.613 11.531 23.133 11.539 22.484 c 11.531 21.781 11.398 21.258 11.129
 20.922 c 10.852 20.594 10.512 20.43 10.117 20.426 c 9.723 20.43 9.395 20.59
 9.137 20.902 c 8.871 21.227 8.746 21.727 8.746 22.414 c h
8.746 22.414 m f
15.641 24.215 m 15.766 24.992 l 15.512 25.043 15.293 25.063 15.102 25.07
 c 14.781 25.063 14.531 25.02 14.359 24.918 c 14.18 24.82 14.059 24.688 
13.988 24.523 c 13.914 24.359 13.883 24.016 13.883 23.48 c 13.883 20.5 l
 13.238 20.5 l 13.238 19.813 l 13.883 19.813 l 13.883 18.531 l 14.758 18.004
 l 14.758 19.813 l 15.641 19.813 l 15.641 20.5 l 14.758 20.5 l 14.758 23.531
 l 14.75 23.785 14.766 23.945 14.801 24.016 c 14.828 24.086 14.883 24.145
 14.953 24.184 c 15.02 24.234 15.117 24.254 15.254 24.25 c 15.348 24.254
 15.477 24.242 15.641 24.215 c h
15.641 24.215 m f
0 0 1 rg
1.25 w
q 1 0 0 1 0 0 cm
1.25 1.25 m 1.25 31.25 l 31.25 31.25 l 33.75 16.25 l 31.25 1.25 l h
1.25 1.25 m S Q
Q Q
showpage
%%Trailer
%%EOF
