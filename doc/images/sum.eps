%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.16.0 (https://cairographics.org)
%%CreationDate: Wed Sep 29 14:49:04 2021
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 0 0 28 26
%%EndComments
%%BeginProlog
50 dict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
%%EndProlog
%%BeginSetup
%%BeginResource: font Roboto-Regular
11 dict begin
/FontType 42 def
/FontName /Roboto-Regular def
/PaintType 0 def
/FontMatrix [ 1 0 0 1 0 0 ] def
/FontBBox [ 0 0 0 0 ] def
/Encoding 256 array def
0 1 255 { Encoding exch /.notdef put } for
Encoding 1 /uni2211 put
/CharStrings 2 dict dup begin
/.notdef 0 def
/uni2211 1 def
end readonly def
/sfnts [
<000100000006004000020020676c796661e8404a0000006c0000008c68656164018e3f8e0000
00f8000000366868656110a90b150000013000000024686d7478083b00aa0000015400000008
6c6f6361000000e00000015c0000000c6d6178700026013f0000016800000020000500640000
032805b0000300060009000c000f00003311211109020301110511010321016402c4fd9a0102
0101e50112fda8010ce40203feff05b0fa50057afda2025efd5efd7c05080cfb100278fd5e02
5e0000010046fef304ac05b0000c000013352115210115012115213501460419fcc60246fdbb
0386fb9a026005218f97fd4119fd49978e02cd00000100000002228f3e2dfbb45f0f3cf50019
080000000000c4f0739e00000000d4345e1af8dffdd5105c0873000000090002000100000000
00010000076cfe0c00001110f8dffbf6105b000100000000000000000000000000000002038c
006404af004600000000000000540000008c00010000000200e8001600540007000100000000
00000000000000000006000200>
] def
/f-0-1 currentdict end definefont pop
%%EndResource
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 0 0 28 26
%%EndPageSetup
q 0 0 28 26 rectclip
1 0 0 -1 0 26 cm q
0 g
BT
9.333008 0 0 -9.333008 9 14.658285 Tm
/f-0-1 1 Tf
<01>Tj
ET
0 0 1 rg
1 w
0 J
0 j
[] 0.0 d
10 M 1 1 m 1 25 l 25 25 l 27 13 l 25 1 l h
1 1 m S
Q Q
showpage
%%Trailer
end
%%EOF
