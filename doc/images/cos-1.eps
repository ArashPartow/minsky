%!PS-Adobe-3.0
%%Creator: cairo 1.15.10 (http://cairographics.org)
%%CreationDate: Mon May 27 11:24:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 12x11mm 35 32 0 () ()
%%BoundingBox: 0 0 35 32
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 12x11mm
%%PageBoundingBox: 0 0 35 32
35 32 cairo_set_page_size
%%EndPageSetup
q 0 0 35 32 rectclip
1 0 0 -1 0 32 cm q
0 g
9.551 17.859 m 10.523 17.988 l 10.414 18.664 10.141 19.188 9.703 19.566
 c 9.262 19.945 8.727 20.133 8.09 20.133 c 7.289 20.133 6.645 19.875 6.168
 19.352 c 5.68 18.828 5.438 18.082 5.438 17.105 c 5.438 16.48 5.543 15.93
 5.75 15.453 c 5.957 14.98 6.273 14.625 6.703 14.391 c 7.129 14.156 7.594
 14.039 8.094 14.031 c 8.727 14.039 9.242 14.199 9.652 14.516 c 10.055 14.84
 10.313 15.293 10.43 15.879 c 9.469 16.031 l 9.371 15.641 9.203 15.348 8.98
 15.148 c 8.746 14.953 8.469 14.852 8.133 14.848 c 7.637 14.852 7.23 15.031
 6.918 15.387 c 6.605 15.742 6.449 16.309 6.453 17.078 c 6.449 17.867 6.602
 18.434 6.906 18.785 c 7.207 19.141 7.598 19.32 8.082 19.316 c 8.469 19.32
 8.789 19.199 9.055 18.961 c 9.305 18.727 9.473 18.359 9.551 17.859 c h
9.551 17.859 m f
10.996 17.086 m 10.992 16.008 11.293 15.203 11.898 14.684 c 12.398 14.254
 13.008 14.039 13.734 14.031 c 14.531 14.039 15.188 14.301 15.699 14.824
 c 16.207 15.352 16.461 16.078 16.465 17 c 16.461 17.754 16.348 18.344 16.129
 18.773 c 15.898 19.211 15.57 19.539 15.141 19.773 c 14.707 20.016 14.238
 20.133 13.734 20.133 c 12.914 20.133 12.258 19.875 11.754 19.344 c 11.246
 18.828 10.992 18.07 10.996 17.086 c h
12.016 17.086 m 12.016 17.832 12.18 18.395 12.504 18.758 c 12.828 19.137
 13.238 19.32 13.734 19.316 c 14.223 19.32 14.633 19.137 14.961 18.758 c
 15.281 18.391 15.445 17.816 15.449 17.051 c 15.445 16.332 15.277 15.785
 14.957 15.41 c 14.625 15.043 14.219 14.859 13.734 14.852 c 13.238 14.859
 12.828 15.043 12.504 15.41 c 12.18 15.781 12.016 16.336 12.016 17.086 c
 h
12.016 17.086 m f
17.227 18.258 m 18.203 18.105 l 18.258 18.5 18.41 18.797 18.664 19.004 
c 18.906 19.215 19.258 19.32 19.715 19.316 c 20.168 19.32 20.504 19.227 
20.723 19.043 c 20.945 18.863 21.055 18.641 21.055 18.391 c 21.055 18.168
 20.957 17.992 20.762 17.859 c 20.625 17.773 20.289 17.664 19.754 17.531
 c 19.031 17.352 18.527 17.191 18.25 17.055 c 17.965 16.918 17.75 16.734
 17.609 16.5 c 17.461 16.266 17.395 16.008 17.395 15.711 c 17.395 15.461
 17.453 15.219 17.57 14.996 c 17.688 14.773 17.848 14.59 18.059 14.445 c
 18.211 14.332 18.418 14.234 18.684 14.156 c 18.945 14.078 19.23 14.039 
19.539 14.031 c 19.992 14.039 20.391 14.105 20.742 14.234 c 21.086 14.371
 21.344 14.547 21.512 14.77 c 21.676 14.996 21.789 15.297 21.852 15.672 
c 20.887 15.801 l 20.84 15.508 20.715 15.273 20.504 15.102 c 20.289 14.938
 19.992 14.852 19.609 14.848 c 19.156 14.852 18.836 14.926 18.641 15.074
 c 18.445 15.227 18.348 15.398 18.348 15.602 c 18.348 15.734 18.387 15.852
 18.469 15.945 c 18.547 16.055 18.672 16.141 18.848 16.211 c 18.941 16.25
 19.234 16.332 19.723 16.465 c 20.418 16.656 20.898 16.805 21.184 16.922
 c 21.457 17.039 21.676 17.219 21.832 17.441 c 21.988 17.676 22.066 17.953
 22.07 18.285 c 22.066 18.617 21.969 18.93 21.785 19.219 c 21.59 19.512 
21.309 19.734 20.949 19.891 c 20.582 20.055 20.176 20.133 19.723 20.133 
c 18.961 20.133 18.379 19.977 17.988 19.664 c 17.59 19.352 17.336 18.883
 17.227 18.258 c h
17.227 18.258 m f
22.781 13.598 2.367 0.773 re f
28.68 16.25 m 27.91 16.25 l 27.91 11.348 l 27.723 11.531 27.48 11.711 27.18
 11.879 c 26.879 12.063 26.609 12.191 26.371 12.273 c 26.371 11.531 l 26.801
 11.332 27.176 11.09 27.5 10.801 c 27.82 10.512 28.047 10.234 28.184 9.961
 c 28.68 9.961 l h
28.68 16.25 m f
0 0 1 rg
1.25 w
0 J
0 j
[] 0.0 d
10 M q 1 0 0 1 0 0 cm
1.25 1.25 m 1.25 31.25 l 31.25 31.25 l 33.75 16.25 l 31.25 1.25 l h
1.25 1.25 m S Q
Q Q
showpage
%%Trailer
%%EOF
