%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (C:/Users/debun/AppData/Local/Temp/lyx_tmpdir.qsjlPxtgAchu/lyx_tmpbuf0/108C__Users_debun_OneDrive_Documents_GitHub_minsky_doc_images_var.eps)
%%CreationDate: (2024-05-27T09:24:56+00:00)
%%BoundingBox: -0 -0 24 12
%%HiResBoundingBox: 0 0 24 12
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 24 12
userdict begin
DisplayImage
0 0
24 12
12
24 12
0
0
AB6E6EAD6565AD6565AD6565AD6565AD6565AD6565AD6565AD6565AD6565AD6565AD6565AD6565
AD6565AD6565AD6565AD6565AD6565AD6565AD6565AD6565AD6565D4D3D3FFFFFFAF6060D7D7D7
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBAB2B2AD9090FFFFFFB6ABABB09D9DFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB15959FFFFFFD8D8D8AF5E5EEB0F0FCAC8C8FFFFFFFFFFFF
B09C9CC23A3AFFFFFFC4C1C1C43838F80505E21616AC8D8DFFFFFFD8D8D8BE3F3FAA7979F30808
BBB3B3FFFFFFFFFFFFAA7B7BCAC9C9FFFFFFAC6A6ACD2D2DB5A8A8FFFFFFD7D7D7D12727B8AFAF
FFFFFFC73333AA7F7FD2D2D2B4A6A6F00B0BFFFFFFC3BFBFEC0E0EAC6D6DD6D6D6FFFFFFFFFFFF
FFFFFFC6C4C4AA7D7DFFFFFFC1BCBCC73333AB8787FFFFFFAB8585B74B4BFFFFFFFFFFFFCDCCCC
C0BBBBB9B0B0AB8787E41515FFFFFFB09C9CDA1E1ED8D8D8FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
B15A5AFFFFFFC2BEBEB94848AD6666D0D0D0DD1C1CC1BCBCFFFFFFAC8E8EF70505CD2D2DBC4343
CD2D2DB64E4EFFFFFFAA7979AF5F5FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB15858FFFFFF
AC6969AB8989B94949AB7171B05D5DFFFFFFFFFFFFE11717BAB1B1FFFFFFFFFFFFC83232AD9191
FFFFFFB25656AB8888FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC6C4C4AA7D7DD7D7D7AF6060B8AFAF
D42525E01919C9C7C7FFFFFFFFFFFFEC0E0EB3A5A5CDCCCCAE6161FF0000CAC8C8FFFFFFC73333
B5A9A9FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFAB7777CDCDCDB4A5A5B2A2A2D0CFCFFF0000AB6E6E
FFFFFFFFFFFFFFFFFFAB8484EF0B0BDA1E1EAA8181EE0C0CCAC8C8FFFFFFE91111CAC9C9FFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFB25757FFFFFFB05B5BD7D7D7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFBAB2B2AE9494FFFFFFAA7D7DAB7373AB7373AB7373AB7373AB7373AB7373AB7373AB7373
AB7373AB7373AB7373AB7373AB7373AB7373AB7373AB7373AB7373AB7373AB7373AB7373AB7373
D4D3D3FFFFFF

end
%%PageTrailer
%%Trailer
%%EOF
