%!PS-Adobe-3.0
%%Creator: cairo 1.15.10 (http://cairographics.org)
%%CreationDate: Mon May 27 11:24:42 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 12x11mm 35 32 0 () ()
%%BoundingBox: 0 0 35 32
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 12x11mm
%%PageBoundingBox: 0 0 35 32
35 32 cairo_set_page_size
%%EndPageSetup
q 0 0 35 32 rectclip
1 0 0 -1 0 32 cm q
0 g
10.055 19.199 m 9.645 19.551 9.25 19.797 8.875 19.93 c 8.496 20.078 8.094
 20.148 7.664 20.148 c 6.953 20.148 6.406 19.977 6.023 19.625 c 5.641 19.281
 5.445 18.836 5.449 18.289 c 5.445 17.977 5.516 17.688 5.664 17.422 c 5.805
 17.156 5.996 16.949 6.234 16.793 c 6.465 16.637 6.727 16.52 7.027 16.43
 c 7.234 16.375 7.563 16.32 8.004 16.266 c 8.891 16.156 9.539 16.035 9.961
 15.891 c 9.961 15.742 9.965 15.645 9.969 15.602 c 9.965 15.156 9.863 14.84
 9.656 14.652 c 9.375 14.41 8.953 14.289 8.406 14.281 c 7.887 14.289 7.504
 14.379 7.262 14.555 c 7.012 14.742 6.832 15.059 6.715 15.512 c 5.641 15.367
 l 5.734 14.914 5.895 14.539 6.125 14.254 c 6.344 13.977 6.672 13.754 7.094
 13.598 c 7.516 13.445 8.004 13.375 8.563 13.367 c 9.117 13.375 9.566 13.438
 9.914 13.563 c 10.254 13.695 10.508 13.863 10.672 14.059 c 10.836 14.262
 10.945 14.512 11.016 14.805 c 11.051 15 11.07 15.336 11.074 15.82 c 11.074
 17.285 l 11.07 18.313 11.094 18.953 11.141 19.223 c 11.188 19.496 11.281
 19.758 11.422 20 c 10.273 20 l 10.156 19.773 10.082 19.512 10.055 19.199
 c h
9.961 16.75 m 9.563 16.914 8.965 17.055 8.168 17.164 c 7.715 17.23 7.391
 17.305 7.207 17.383 c 7.016 17.469 6.875 17.586 6.773 17.738 c 6.672 17.898
 6.617 18.078 6.621 18.262 c 6.617 18.559 6.727 18.805 6.953 18.992 c 7.172
 19.195 7.5 19.293 7.93 19.289 c 8.352 19.293 8.727 19.199 9.059 19.008 
c 9.383 18.828 9.625 18.574 9.785 18.246 c 9.898 18.004 9.957 17.637 9.961
 17.148 c h
9.961 16.75 m f
12.754 11.055 1.098 8.945 re f
15.531 11.055 1.098 8.945 re f
0 0 1 rg
1.25 w
0 J
0 j
[] 0.0 d
10 M q 1 0 0 1 0 0 cm
1.25 1.25 m 1.25 31.25 l 31.25 31.25 l 33.75 16.25 l 31.25 1.25 l h
1.25 1.25 m S Q
Q Q
showpage
%%Trailer
%%EOF
