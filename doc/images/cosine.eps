%!PS-Adobe-3.0
%%Creator: cairo 1.15.10 (http://cairographics.org)
%%CreationDate: Mon May 27 11:24:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 12x11mm 35 32 0 () ()
%%BoundingBox: 0 0 35 32
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 12x11mm
%%PageBoundingBox: 0 0 35 32
35 32 cairo_set_page_size
%%EndPageSetup
q 0 0 35 32 rectclip
1 0 0 -1 0 32 cm q
0 g
10.055 17.625 m 11.133 17.766 l 11.012 18.516 10.707 19.098 10.227 19.516
 c 9.734 19.938 9.141 20.148 8.438 20.148 c 7.543 20.148 6.832 19.859 6.293
 19.277 c 5.75 18.703 5.484 17.871 5.488 16.781 c 5.484 16.09 5.602 15.473
 5.836 14.945 c 6.063 14.422 6.414 14.031 6.895 13.766 c 7.367 13.508 7.887
 13.375 8.441 13.367 c 9.145 13.375 9.719 13.551 10.164 13.906 c 10.609 
14.262 10.898 14.77 11.031 15.422 c 9.961 15.586 l 9.852 15.152 9.672 14.824
 9.418 14.605 c 9.156 14.391 8.848 14.281 8.484 14.277 c 7.93 14.281 7.477
 14.477 7.133 14.875 c 6.781 15.27 6.609 15.898 6.617 16.754 c 6.609 17.625
 6.777 18.258 7.113 18.652 c 7.445 19.047 7.883 19.25 8.422 19.242 c 8.852
 19.25 9.215 19.117 9.5 18.848 c 9.789 18.586 9.977 18.172 10.055 17.625
 c h
10.055 17.625 m f
11.664 16.758 m 11.66 15.563 11.992 14.672 12.664 14.094 c 13.219 13.613
 13.902 13.375 14.707 13.367 c 15.594 13.375 16.324 13.668 16.891 14.25 
c 17.457 14.836 17.738 15.641 17.738 16.672 c 17.738 17.504 17.613 18.16
 17.363 18.637 c 17.109 19.117 16.742 19.488 16.27 19.75 c 15.785 20.016
 15.27 20.148 14.707 20.148 c 13.797 20.148 13.063 19.859 12.504 19.273 
c 11.938 18.695 11.66 17.855 11.664 16.758 c h
12.793 16.758 m 12.789 17.594 12.969 18.211 13.336 18.625 c 13.695 19.039
 14.156 19.25 14.707 19.242 c 15.25 19.25 15.699 19.039 16.063 18.625 c 
16.426 18.207 16.609 17.578 16.609 16.723 c 16.609 15.922 16.426 15.313 
16.063 14.902 c 15.695 14.492 15.242 14.289 14.707 14.281 c 14.156 14.289
 13.695 14.492 13.336 14.898 c 12.969 15.313 12.789 15.934 12.793 16.758
 c h
12.793 16.758 m f
18.586 18.066 m 19.672 17.895 l 19.73 18.336 19.902 18.668 20.18 18.898
 c 20.457 19.133 20.848 19.25 21.352 19.242 c 21.855 19.25 22.227 19.145
 22.473 18.938 c 22.715 18.734 22.836 18.492 22.84 18.211 c 22.836 17.969
 22.727 17.773 22.52 17.625 c 22.363 17.531 21.992 17.406 21.395 17.258 
c 20.586 17.055 20.023 16.879 19.715 16.727 c 19.402 16.582 19.168 16.375
 19.008 16.109 c 18.848 15.852 18.762 15.555 18.77 15.238 c 18.762 14.953
 18.832 14.688 18.969 14.438 c 19.102 14.195 19.281 13.988 19.512 13.824
 c 19.676 13.703 19.906 13.594 20.203 13.5 c 20.496 13.418 20.813 13.375
 21.156 13.367 c 21.66 13.375 22.109 13.445 22.492 13.59 c 22.879 13.742
 23.164 13.938 23.348 14.184 c 23.527 14.438 23.656 14.773 23.723 15.191
 c 22.648 15.336 l 22.598 15.004 22.453 14.746 22.227 14.555 c 21.984 14.375
 21.66 14.281 21.234 14.277 c 20.727 14.281 20.363 14.367 20.156 14.527 
c 19.934 14.695 19.828 14.891 19.832 15.113 c 19.828 15.258 19.871 15.387
 19.965 15.5 c 20.051 15.621 20.195 15.719 20.391 15.789 c 20.492 15.836
 20.813 15.93 21.355 16.07 c 22.133 16.281 22.676 16.449 22.98 16.582 c 
23.289 16.715 23.527 16.906 23.703 17.156 c 23.875 17.414 23.965 17.727 
23.969 18.094 c 23.965 18.461 23.855 18.809 23.645 19.133 c 23.43 19.457
 23.125 19.707 22.723 19.883 c 22.313 20.059 21.859 20.148 21.355 20.148
 c 20.512 20.148 19.871 19.977 19.434 19.625 c 18.988 19.277 18.703 18.754
 18.586 18.066 c h
18.586 18.066 m f
0 0 1 rg
1.25 w
0 J
0 j
[] 0.0 d
10 M q 1 0 0 1 0 0 cm
1.25 1.25 m 1.25 31.25 l 31.25 31.25 l 33.75 16.25 l 31.25 1.25 l h
1.25 1.25 m S Q
Q Q
showpage
%%Trailer
%%EOF
