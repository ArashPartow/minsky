%!PS-Adobe-3.0
%%Creator: cairo 1.15.10 (http://cairographics.org)
%%CreationDate: Mon May 27 11:24:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 12x11mm 35 32 0 () ()
%%BoundingBox: 0 0 35 32
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 12x11mm
%%PageBoundingBox: 0 0 35 32
35 32 cairo_set_page_size
%%EndPageSetup
q 0 0 35 32 rectclip
1 0 0 -1 0 32 cm q
0 g
5.867 20 m 5.867 15.5 l 5.094 15.5 l 5.094 14.813 l 5.867 14.813 l 5.867
 14.262 l 5.863 13.922 5.895 13.664 5.961 13.484 c 6.039 13.262 6.191 13.078
 6.406 12.934 c 6.621 12.793 6.918 12.719 7.305 12.719 c 7.547 12.719 7.82
 12.75 8.125 12.809 c 7.992 13.574 l 7.809 13.547 7.637 13.523 7.477 13.523
 c 7.207 13.523 7.016 13.586 6.91 13.695 c 6.797 13.813 6.742 14.027 6.742
 14.336 c 6.742 14.813 l 7.754 14.813 l 7.754 15.5 l 6.742 15.5 l 6.742 
20 l h
5.867 20 m f
8.43 20 m 8.43 14.813 l 9.219 14.813 l 9.219 15.602 l 9.418 15.234 9.605
 14.992 9.773 14.875 c 9.945 14.758 10.137 14.695 10.344 14.695 c 10.633
 14.695 10.934 14.797 11.246 14.98 c 10.941 15.797 l 10.727 15.668 10.512
 15.605 10.297 15.605 c 10.102 15.605 9.926 15.664 9.781 15.781 c 9.625 
15.898 9.516 16.059 9.453 16.258 c 9.352 16.578 9.301 16.918 9.305 17.285
 c 9.305 20 l h
8.43 20 m f
15.152 19.359 m 14.824 19.645 14.508 19.84 14.211 19.945 c 13.906 20.063
 13.586 20.117 13.242 20.117 c 12.664 20.117 12.23 19.98 11.93 19.703 c 
11.621 19.422 11.465 19.066 11.469 18.633 c 11.465 18.383 11.523 18.156 
11.641 17.938 c 11.754 17.734 11.906 17.563 12.094 17.43 c 12.281 17.309
 12.492 17.211 12.73 17.145 c 12.895 17.102 13.16 17.055 13.512 17.012 c
 14.219 16.93 14.742 16.832 15.078 16.711 c 15.078 16.594 15.078 16.516 
15.082 16.48 c 15.078 16.125 14.996 15.867 14.836 15.723 c 14.605 15.527
 14.273 15.43 13.832 15.426 c 13.418 15.43 13.109 15.504 12.914 15.645 c
 12.715 15.789 12.57 16.047 12.48 16.41 c 11.621 16.293 l 11.699 15.93 11.828
 15.633 12.008 15.406 c 12.184 15.18 12.441 15.004 12.781 14.883 c 13.121
 14.762 13.512 14.695 13.961 14.695 c 14.398 14.695 14.762 14.75 15.039 
14.852 c 15.313 14.961 15.516 15.094 15.648 15.25 c 15.777 15.41 15.863 
15.609 15.922 15.844 c 15.945 16 15.961 16.27 15.969 16.656 c 15.969 17.828
 l 15.961 18.648 15.98 19.164 16.02 19.379 c 16.055 19.602 16.129 19.805
 16.246 20 c 15.328 20 l 15.234 19.82 15.176 19.609 15.152 19.359 c h
15.078 17.398 m 14.758 17.535 14.277 17.641 13.641 17.73 c 13.281 17.781
 13.023 17.844 12.875 17.906 c 12.719 17.973 12.609 18.07 12.531 18.195 
c 12.445 18.32 12.402 18.457 12.406 18.609 c 12.402 18.844 12.492 19.039
 12.672 19.195 c 12.848 19.352 13.109 19.43 13.453 19.43 c 13.789 19.43 
14.086 19.355 14.355 19.211 c 14.613 19.063 14.809 18.863 14.938 18.598 
c 15.031 18.402 15.078 18.109 15.078 17.719 c h
15.078 17.398 m f
20.711 18.102 m 21.578 18.211 l 21.48 18.809 21.234 19.277 20.852 19.613
 c 20.461 19.953 19.98 20.117 19.418 20.117 c 18.707 20.117 18.133 19.887
 17.703 19.422 c 17.27 18.961 17.055 18.297 17.063 17.426 c 17.055 16.871
 17.148 16.375 17.34 15.957 c 17.52 15.539 17.805 15.227 18.184 15.016 c
 18.559 14.805 18.977 14.695 19.422 14.695 c 19.984 14.695 20.445 14.844
 20.805 15.125 c 21.164 15.414 21.391 15.816 21.492 16.336 c 20.641 16.469
 l 20.555 16.125 20.41 15.863 20.203 15.684 c 19.996 15.512 19.746 15.426
 19.457 15.422 c 19.016 15.426 18.652 15.582 18.379 15.898 c 18.094 16.215
 17.961 16.719 17.965 17.402 c 17.961 18.102 18.09 18.609 18.363 18.922 
c 18.629 19.242 18.98 19.398 19.41 19.395 c 19.75 19.398 20.039 19.293 20.273
 19.078 c 20.504 18.867 20.648 18.547 20.711 18.102 c h
20.711 18.102 m f
0 0 1 rg
1.25 w
0 J
0 j
[] 0.0 d
10 M q 1 0 0 1 0 0 cm
1.25 1.25 m 1.25 31.25 l 31.25 31.25 l 33.75 16.25 l 31.25 1.25 l h
1.25 1.25 m S Q
Q Q
showpage
%%Trailer
%%EOF
