%!PS-Adobe-3.0
%%Creator: cairo 1.15.10 (http://cairographics.org)
%%CreationDate: Mon May 27 11:24:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 12x11mm 35 32 0 () ()
%%BoundingBox: 0 0 35 32
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 12x11mm
%%PageBoundingBox: 0 0 35 32
35 32 cairo_set_page_size
%%EndPageSetup
q 0 0 35 32 rectclip
1 0 0 -1 0 32 cm q
0 g
5.348 16.266 m 5.66 16.254 5.918 16.172 6.113 16.012 c 6.309 15.855 6.441
 15.633 6.508 15.352 c 6.57 15.074 6.605 14.594 6.609 13.91 c 6.609 13.238
 6.621 12.789 6.648 12.57 c 6.68 12.227 6.75 11.953 6.852 11.742 c 6.949
 11.539 7.07 11.371 7.223 11.246 c 7.363 11.129 7.555 11.031 7.781 10.961
 c 7.938 10.922 8.188 10.902 8.539 10.898 c 8.883 10.898 l 8.883 11.855 
l 8.691 11.855 l 8.266 11.855 7.984 11.934 7.848 12.086 c 7.703 12.242 7.637
 12.582 7.641 13.109 c 7.637 14.18 7.617 14.852 7.578 15.125 c 7.5 15.566
 7.375 15.902 7.195 16.137 c 7.023 16.375 6.742 16.586 6.367 16.766 c 6.813
 16.957 7.133 17.242 7.34 17.621 c 7.535 18.008 7.637 18.637 7.641 19.512
 c 7.637 20.309 7.648 20.777 7.664 20.93 c 7.695 21.203 7.777 21.391 7.914
 21.504 c 8.047 21.609 8.305 21.672 8.691 21.672 c 8.883 21.672 l 8.883 
22.633 l 8.539 22.633 l 8.133 22.625 7.848 22.598 7.676 22.535 c 7.414 22.438
 7.195 22.281 7.027 22.074 c 6.852 21.859 6.738 21.598 6.688 21.281 c 6.637
 20.957 6.609 20.434 6.609 19.703 c 6.605 18.977 6.57 18.469 6.508 18.184
 c 6.441 17.898 6.309 17.68 6.113 17.516 c 5.918 17.359 5.66 17.27 5.348
 17.262 c h
5.348 16.266 m f
10 20 m 10 13.516 l 10.984 13.516 l 10.984 14.438 l 11.461 13.73 12.148
 13.375 13.051 13.367 c 13.438 13.375 13.797 13.441 14.125 13.586 c 14.453
 13.727 14.695 13.91 14.863 14.137 c 15.023 14.367 15.137 14.633 15.203 
14.945 c 15.242 15.152 15.27 15.508 15.27 16.016 c 15.27 20 l 14.164 20 
l 14.164 16.055 l 14.16 15.609 14.121 15.277 14.039 15.055 c 13.949 14.84
 13.797 14.664 13.586 14.527 c 13.363 14.398 13.105 14.332 12.816 14.328
 c 12.344 14.332 11.945 14.477 11.605 14.77 c 11.266 15.07 11.094 15.633
 11.098 16.461 c 11.098 20 l h
10 20 m f
17.484 15.605 m 16.738 15.605 l 16.738 14.75 l 17.484 14.75 l h
17.484 20.805 m 16.738 20.805 l 16.738 16.426 l 17.484 16.426 l h
17.484 20.805 m f
21.91 16.266 m 21.91 17.262 l 21.594 17.27 21.34 17.359 21.145 17.516 c
 20.945 17.68 20.813 17.898 20.754 18.18 c 20.684 18.457 20.652 18.938 20.645
 19.613 c 20.641 20.293 20.633 20.738 20.613 20.957 c 20.574 21.297 20.504
 21.57 20.406 21.781 c 20.309 21.988 20.188 22.152 20.039 22.281 c 19.895
 22.398 19.703 22.496 19.48 22.563 c 19.316 22.609 19.07 22.625 18.723 22.633
 c 18.379 22.633 l 18.379 21.672 l 18.57 21.672 l 18.992 21.672 19.273 21.594
 19.41 21.441 c 19.547 21.289 19.617 20.945 19.617 20.414 c 19.617 19.395
 19.637 18.754 19.676 18.48 c 19.738 18.031 19.863 17.672 20.066 17.398 
c 20.254 17.133 20.535 16.922 20.895 16.766 c 20.422 16.547 20.09 16.25 
19.902 15.879 c 19.707 15.512 19.617 14.891 19.617 14.016 c 19.617 13.223
 19.605 12.742 19.586 12.586 c 19.559 12.32 19.473 12.133 19.348 12.023 
c 19.211 11.914 18.953 11.855 18.57 11.855 c 18.379 11.855 l 18.379 10.898
 l 18.723 10.898 l 19.117 10.902 19.406 10.938 19.586 10.996 c 19.844 11.094
 20.059 11.246 20.23 11.449 c 20.402 11.664 20.508 11.93 20.563 12.25 c 
20.613 12.574 20.641 13.102 20.645 13.828 c 20.652 14.566 20.684 15.074 
20.754 15.348 c 20.813 15.629 20.945 15.852 21.145 16.008 c 21.34 16.172
 21.594 16.254 21.91 16.266 c h
21.91 16.266 m f
0 0 1 rg
1.25 w
0 J
0 j
[] 0.0 d
10 M q 1 0 0 1 0 0 cm
1.25 1.25 m 1.25 31.25 l 31.25 31.25 l 33.75 16.25 l 31.25 1.25 l h
1.25 1.25 m S Q
Q Q
showpage
%%Trailer
%%EOF
