%!PS-Adobe-3.0
%%Creator: cairo 1.15.10 (http://cairographics.org)
%%CreationDate: Mon May 27 11:24:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 12x11mm 35 32 0 () ()
%%BoundingBox: 0 0 35 32
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 12x11mm
%%PageBoundingBox: 0 0 35 32
35 32 cairo_set_page_size
%%EndPageSetup
q 0 0 35 32 rectclip
1 0 0 -1 0 32 cm q
0 g
8.242 13.516 m 9.336 13.516 l 9.336 16.719 l 9.332 17.313 9.379 17.773 
9.484 18.086 c 9.574 18.402 9.781 18.664 10.102 18.867 c 10.414 19.078 10.852
 19.195 11.406 19.223 c 11.406 13.516 l 12.504 13.516 l 12.504 19.223 l 
13.031 19.195 13.457 19.082 13.773 18.883 c 14.082 18.688 14.293 18.434 
14.406 18.121 c 14.512 17.813 14.566 17.344 14.57 16.719 c 14.57 13.516 
l 15.66 13.516 l 15.66 16.68 l 15.66 17.531 15.582 18.156 15.426 18.563 
c 15.27 18.977 14.953 19.336 14.473 19.645 c 13.992 19.953 13.336 20.117
 12.504 20.148 c 12.504 22.484 l 11.406 22.484 l 11.406 20.148 l 10.859 
20.125 10.387 20.055 9.984 19.918 c 9.574 19.781 9.234 19.555 8.949 19.254
 c 8.668 18.949 8.477 18.633 8.383 18.301 c 8.285 17.969 8.238 17.43 8.242
 16.68 c h
8.242 13.516 m f
18.457 18.09 m 18.027 17.555 17.672 16.934 17.379 16.215 c 17.086 15.5 
16.938 14.75 16.938 13.98 c 16.938 13.305 17.047 12.656 17.27 12.031 c 17.523
 11.313 17.922 10.594 18.457 9.879 c 19.008 9.879 l 18.664 10.473 18.434
 10.898 18.324 11.148 c 18.148 11.543 18.012 11.953 17.914 12.379 c 17.789
 12.914 17.73 13.453 17.73 13.984 c 17.73 15.359 18.156 16.723 19.008 18.09
 c h
18.457 18.09 m f
19.688 13.16 m 19.68 12.422 19.758 11.828 19.914 11.371 c 20.066 10.922
 20.293 10.578 20.594 10.328 c 20.891 10.086 21.273 9.965 21.73 9.961 c 
22.063 9.965 22.355 10.035 22.617 10.164 c 22.863 10.305 23.074 10.5 23.242
 10.75 c 23.402 11.012 23.535 11.324 23.633 11.684 c 23.723 12.055 23.77
 12.543 23.773 13.16 c 23.77 13.898 23.695 14.492 23.543 14.941 c 23.391
 15.395 23.168 15.742 22.871 15.984 c 22.566 16.23 22.188 16.352 21.73 16.359
 c 21.121 16.352 20.648 16.137 20.305 15.707 c 19.891 15.191 19.68 14.34
 19.688 13.16 c h
20.477 13.16 m 20.473 14.188 20.594 14.879 20.84 15.215 c 21.078 15.555
 21.375 15.723 21.73 15.723 c 22.078 15.723 22.375 15.551 22.621 15.211 
c 22.859 14.867 22.977 14.184 22.98 13.16 c 22.977 12.133 22.859 11.449 
22.621 11.109 c 22.375 10.766 22.074 10.594 21.723 10.594 c 21.359 10.594
 21.082 10.746 20.879 11.047 c 20.609 11.43 20.473 12.133 20.477 13.16 c
 h
20.477 13.16 m f
25.27 18.09 m 24.719 18.09 l 25.566 16.723 25.992 15.359 25.996 13.984 
c 25.992 13.457 25.93 12.926 25.813 12.391 c 25.715 11.969 25.582 11.559
 25.406 11.164 c 25.293 10.906 25.066 10.477 24.719 9.879 c 25.27 9.879 
l 25.801 10.594 26.203 11.313 26.461 12.031 c 26.676 12.656 26.785 13.305
 26.789 13.98 c 26.785 14.75 26.637 15.5 26.344 16.215 c 26.051 16.934 25.691
 17.555 25.27 18.09 c h
25.27 18.09 m f
6.156 7.25 m 6.984 6.07 l 6.215 4.98 l 6.699 4.98 l 7.047 5.512 l 7.109
 5.621 7.156 5.703 7.203 5.766 c 7.262 5.68 7.32 5.594 7.379 5.516 c 7.758
 4.98 l 8.219 4.98 l 7.438 6.051 l 8.277 7.25 l 7.809 7.25 l 7.34 6.547 
l 7.219 6.359 l 6.621 7.25 l h
6.156 7.25 m f
6.41 25.25 m 6.41 22.977 l 6.758 22.977 l 6.758 23.301 l 6.918 23.055 7.156
 22.934 7.48 22.93 c 7.613 22.934 7.738 22.961 7.855 23.004 c 7.969 23.055
 8.051 23.121 8.109 23.199 c 8.164 23.277 8.207 23.375 8.234 23.48 c 8.246
 23.559 8.25 23.68 8.258 23.852 c 8.258 25.25 l 7.871 25.25 l 7.871 23.867
 l 7.867 23.715 7.852 23.598 7.828 23.52 c 7.793 23.441 7.738 23.383 7.664
 23.336 c 7.586 23.289 7.5 23.266 7.398 23.262 c 7.23 23.266 7.09 23.316
 6.973 23.418 c 6.855 23.523 6.797 23.727 6.797 24.008 c 6.797 25.25 l h
6.41 25.25 m f
0 0 1 rg
1.25 w
0 J
0 j
[] 0.0 d
10 M q 1 0 0 1 0 0 cm
1.25 1.25 m 1.25 31.25 l 31.25 31.25 l 33.75 16.25 l 31.25 1.25 l h
1.25 1.25 m S Q
Q Q
showpage
%%Trailer
%%EOF
