%!PS-Adobe-3.0
%%Creator: cairo 1.15.10 (http://cairographics.org)
%%CreationDate: Mon May 27 11:25:06 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 45x45mm 128 128 0 () ()
%%BoundingBox: 0 1 127 128
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 45x45mm
%%PageBoundingBox: 0 1 127 128
128 128 cairo_set_page_size
%%EndPageSetup
q 0 1 127 127 rectclip
1 0 0 -1 0 128 cm q
0.203922 0.254902 0.356863 rg
3.277 11.813 m 2 10.727 3.039 8.094 5.582 5.934 c 8.125 3.77 11.227 2.891
 12.496 3.977 c 11.57 3.188 l 10.305 2.109 7.207 2.984 4.656 5.148 c 2.113
 7.313 1.078 9.945 2.352 11.023 c h
3.277 11.813 m f
0.937255 0.25098 0.341176 rg
8.078 13.043 m 6.281 13.043 4.82 10.563 4.82 7.5 c 4.82 4.438 6.273 1.957
 8.078 1.957 c 6.773 1.957 l 4.969 1.957 3.516 4.438 3.516 7.5 c 3.516 10.563
 4.969 13.043 6.773 13.043 c h
8.078 13.043 m f
0.286275 0.741176 0.576471 rg
12.496 11.023 m 11.227 12.109 8.125 11.23 5.582 9.066 c 3.039 6.906 2 4.273
 3.277 3.188 c 2.352 3.977 l 1.078 5.055 2.113 7.688 4.656 9.852 c 7.207
 12.016 10.305 12.891 11.57 11.813 c h
12.496 11.023 m f
0.0745098 0.619608 0.843137 rg
11.57 3.188 m 12.848 4.273 11.816 6.906 9.266 9.066 c 6.723 11.23 3.629
 12.109 2.352 11.023 c 3.277 11.813 l 4.551 12.891 7.648 12.016 10.191 9.852
 c 12.738 7.688 13.77 5.055 12.496 3.977 c h
11.57 3.188 m f
0 g
1.25 w
0 J
0 j
[] 0.0 d
10 M q 1 0 0 1 0 0 cm
13.75 13.75 100 100 re S Q
q 1 0 0 1 0 0 cm
13.75 13.75 m 113.75 13.75 l 113.75 113.75 l 13.75 113.75 l h
1.25 1.25 m 126.25 1.25 l 126.25 126.25 l 1.25 126.25 l h
1.25 1.25 m S Q
Q Q
showpage
%%Trailer
%%EOF
