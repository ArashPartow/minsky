%!PS-Adobe-3.0
%%Creator: cairo 1.15.10 (http://cairographics.org)
%%CreationDate: Mon May 27 11:24:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 12x11mm 35 32 0 () ()
%%BoundingBox: 0 0 35 32
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 12x11mm
%%PageBoundingBox: 0 0 35 32
35 32 cairo_set_page_size
%%EndPageSetup
q 0 0 35 32 rectclip
1 0 0 -1 0 32 cm q
0 g
7.578 19.215 m 7.703 19.992 l 7.453 20.043 7.23 20.063 7.039 20.07 c 6.719
 20.063 6.469 20.02 6.297 19.918 c 6.117 19.82 5.996 19.688 5.93 19.523 
c 5.855 19.359 5.82 19.016 5.82 18.48 c 5.82 15.5 l 5.176 15.5 l 5.176 14.813
 l 5.82 14.813 l 5.82 13.531 l 6.695 13.004 l 6.695 14.813 l 7.578 14.813
 l 7.578 15.5 l 6.695 15.5 l 6.695 18.531 l 6.688 18.785 6.703 18.945 6.738
 19.016 c 6.766 19.086 6.82 19.145 6.891 19.184 c 6.957 19.234 7.055 19.254
 7.191 19.25 c 7.285 19.254 7.418 19.242 7.578 19.215 c h
7.578 19.215 m f
11.82 19.359 m 11.492 19.645 11.176 19.84 10.879 19.945 c 10.578 20.063
 10.254 20.117 9.914 20.117 c 9.336 20.117 8.902 19.98 8.598 19.703 c 8.289
 19.422 8.133 19.066 8.141 18.633 c 8.133 18.383 8.195 18.156 8.313 17.938
 c 8.422 17.734 8.574 17.563 8.766 17.43 c 8.949 17.309 9.16 17.211 9.398
 17.145 c 9.566 17.102 9.828 17.055 10.18 17.012 c 10.891 16.93 11.41 16.832
 11.75 16.711 c 11.75 16.594 11.75 16.516 11.754 16.48 c 11.75 16.125 11.664
 15.867 11.504 15.723 c 11.273 15.527 10.941 15.43 10.504 15.426 c 10.086
 15.43 9.781 15.504 9.586 15.645 c 9.383 15.789 9.238 16.047 9.148 16.41
 c 8.289 16.293 l 8.367 15.93 8.496 15.633 8.676 15.406 c 8.852 15.18 9.109
 15.004 9.453 14.883 c 9.789 14.762 10.18 14.695 10.629 14.695 c 11.07 14.695
 11.43 14.75 11.711 14.852 c 11.984 14.961 12.188 15.094 12.32 15.25 c 12.445
 15.41 12.535 15.609 12.594 15.844 c 12.617 16 12.633 16.27 12.637 16.656
 c 12.637 17.828 l 12.633 18.648 12.652 19.164 12.691 19.379 c 12.727 19.602
 12.797 19.805 12.914 20 c 11.996 20 l 11.906 19.82 11.844 19.609 11.82 
19.359 c h
11.75 17.398 m 11.426 17.535 10.945 17.641 10.313 17.73 c 9.953 17.781 
9.691 17.844 9.547 17.906 c 9.391 17.973 9.277 18.07 9.199 18.195 c 9.117
 18.32 9.07 18.457 9.078 18.609 c 9.07 18.844 9.16 19.039 9.34 19.195 c 
9.516 19.352 9.781 19.43 10.121 19.43 c 10.461 19.43 10.758 19.355 11.023
 19.211 c 11.285 19.063 11.48 18.863 11.605 18.598 c 11.699 18.402 11.75
 18.109 11.75 17.719 c h
11.75 17.398 m f
14 20 m 14 14.813 l 14.789 14.813 l 14.789 15.551 l 15.172 14.984 15.719
 14.695 16.441 14.695 c 16.75 14.695 17.035 14.758 17.301 14.867 c 17.559
 14.98 17.754 15.125 17.891 15.309 c 18.016 15.492 18.109 15.707 18.164 
15.957 c 18.195 16.125 18.207 16.41 18.211 16.813 c 18.211 20 l 17.336 20
 l 17.336 16.844 l 17.328 16.488 17.297 16.219 17.23 16.047 c 17.156 15.867
 17.035 15.727 16.867 15.621 c 16.688 15.512 16.488 15.461 16.254 15.461
 c 15.879 15.461 15.551 15.582 15.281 15.816 c 15.008 16.059 14.879 16.508
 14.879 17.168 c 14.879 20 l h
14 20 m f
19.563 20 m 19.563 12.844 l 20.438 12.844 l 20.438 15.41 l 20.852 14.938
 21.367 14.695 21.992 14.695 c 22.375 14.695 22.703 14.773 22.992 14.926
 c 23.273 15.078 23.473 15.289 23.598 15.551 c 23.715 15.824 23.781 16.211
 23.785 16.715 c 23.785 20 l 22.906 20 l 22.906 16.715 l 22.898 16.281 22.805
 15.961 22.617 15.758 c 22.422 15.563 22.152 15.461 21.813 15.453 c 21.547
 15.461 21.305 15.527 21.074 15.66 c 20.844 15.797 20.684 15.977 20.586 
16.207 c 20.488 16.441 20.438 16.762 20.438 17.164 c 20.438 20 l h
19.563 20 m f
0 0 1 rg
1.25 w
0 J
0 j
[] 0.0 d
10 M q 1 0 0 1 0 0 cm
1.25 1.25 m 1.25 31.25 l 31.25 31.25 l 33.75 16.25 l 31.25 1.25 l h
1.25 1.25 m S Q
Q Q
showpage
%%Trailer
%%EOF
