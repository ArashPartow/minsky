<?xml version="1.0" encoding="UTF-8"?>
<xs:schema  targetNamespace="http://minsky.sf.net/minsky"
 xmlns:xs="http://www.w3.org/2001/XMLSchema"
 xmlns:tns="http://minsky.sf.net/minsky"
 elementFormDefault="qualified" attributeFormDefault="unqualified">

  <xs:simpleType name="__civita__Dimension__Type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="string"/>
      <xs:enumeration value="time"/>
      <xs:enumeration value="value"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="__civita__Dimension">
    <xs:sequence>
      <xs:element name="type" type="tns:__civita__Dimension__Type" minOccurs="0"/>
      <xs:element name="units" type="xs:string" minOccurs="0"/>
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="__classdesc__CDATA">
    <xs:sequence>
      <xs:element name="tensorData" type="xs:string" minOccurs="0"/>
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="__ecolab__Plot__LineStyle__DashStyle">
    <xs:restriction base="xs:string">
      <xs:enumeration value="solid"/>
      <xs:enumeration value="dash"/>
      <xs:enumeration value="dot"/>
      <xs:enumeration value="dashDot"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="__ecolab__cairo__Colour">
    <xs:sequence>
      <xs:element name="r" type="xs:double" minOccurs="0"/>
      <xs:element name="g" type="xs:double" minOccurs="0"/>
      <xs:element name="b" type="xs:double" minOccurs="0"/>
      <xs:element name="a" type="xs:double" minOccurs="0"/>
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="__ecolab__Plot__LineStyle">
    <xs:sequence>
      <xs:element name="colour" type="tns:__ecolab__cairo__Colour" minOccurs="0"/>
      <xs:element name="width" type="xs:double" minOccurs="0"/>
      <xs:element name="dashStyle" type="tns:__ecolab__Plot__LineStyle__DashStyle" minOccurs="0"/>
      <xs:element name="width" type="xs:double" minOccurs="0"/>
      <xs:element name="dashStyle" type="tns:__ecolab__Plot__LineStyle__DashStyle" minOccurs="0"/>
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="__ecolab__Plot__PlotType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="line"/>
      <xs:enumeration value="bar"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="__ecolab__Plot__Side">
    <xs:restriction base="xs:string">
      <xs:enumeration value="left"/>
      <xs:enumeration value="right"/>
      <xs:enumeration value="boundingBox"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="__minsky__Bookmark">
    <xs:sequence>
      <xs:element name="x" type="xs:float" minOccurs="0"/>
      <xs:element name="y" type="xs:float" minOccurs="0"/>
      <xs:element name="zoom" type="xs:float" minOccurs="0"/>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="__minsky__GodleyAssetClass__AssetClass">
    <xs:restriction base="xs:string">
      <xs:enumeration value="noAssetClass"/>
      <xs:enumeration value="asset"/>
      <xs:enumeration value="liability"/>
      <xs:enumeration value="equity"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="__minsky__RavelState__HandleState__HandleSort">
    <xs:restriction base="xs:string">
      <xs:enumeration value="none"/>
      <xs:enumeration value="forward"/>
      <xs:enumeration value="reverse"/>
      <xs:enumeration value="custom"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="__minsky__RavelState__HandleState__ReductionOp">
    <xs:restriction base="xs:string">
      <xs:enumeration value="sum"/>
      <xs:enumeration value="prod"/>
      <xs:enumeration value="av"/>
      <xs:enumeration value="stddev"/>
      <xs:enumeration value="min"/>
      <xs:enumeration value="max"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="std__vector_std__string_">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="string" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="__minsky__RavelState__HandleState">
    <xs:sequence>
      <xs:element name="x" type="xs:double" minOccurs="0"/>
      <xs:element name="y" type="xs:double" minOccurs="0"/>
      <xs:element name="collapsed" type="xs:boolean" minOccurs="0"/>
      <xs:element name="displayFilterCaliper" type="xs:boolean" minOccurs="0"/>
      <xs:element name="reductionOp" type="tns:__minsky__RavelState__HandleState__ReductionOp" minOccurs="0"/>
      <xs:element name="order" type="tns:__minsky__RavelState__HandleState__HandleSort" minOccurs="0"/>
      <xs:element name="customOrder" type="tns:std__vector_std__string_" minOccurs="0"/>
      <xs:element name="minLabel" type="xs:string" minOccurs="0"/>
      <xs:element name="maxLabel" type="xs:string" minOccurs="0"/>
      <xs:element name="sliceLabel" type="xs:string" minOccurs="0"/>
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="std__pair_const_std__string___minsky__RavelState__HandleState_">
    <xs:sequence>
      <xs:element name="first" type="xs:string" minOccurs="0"/>
      <xs:element name="second" type="tns:__minsky__RavelState__HandleState" minOccurs="0"/>
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="std__map_std__string___minsky__RavelState__HandleState_">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="pair" type="tns:std__pair_const_std__string___minsky__RavelState__HandleState_"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="__minsky__RavelState">
    <xs:sequence>
      <xs:element name="radius" type="xs:double" minOccurs="0"/>
      <xs:element name="handleStates" type="tns:std__map_std__string___minsky__RavelState__HandleState_" minOccurs="0"/>
      <xs:element name="outputHandles" type="tns:std__vector_std__string_" minOccurs="0"/>
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="__minsky__RungeKutta">
    <xs:sequence>
      <xs:element name="stepMin" type="xs:double"/>
      <xs:element name="stepMax" type="xs:double"/>
      <xs:element name="nSteps" type="xs:int"/>
      <xs:element name="epsRel" type="xs:double"/>
      <xs:element name="epsAbs" type="xs:double"/>
      <xs:element name="order" type="xs:int"/>
      <xs:element name="implicit" type="xs:boolean"/>
      <xs:element name="simulationDelay" type="xs:int"/>
      <xs:element name="timeUnit" type="xs:string"/>
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="std__vector_int_">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="int" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="__schema3__Group">
      <xs:complexContent>
      <xs:extension base="tns:__schema3__Item">
    <xs:sequence>
      <xs:element name="items" type="tns:std__vector_int_"/>
      <xs:element name="inVariables" type="tns:std__vector_int_" minOccurs="0"/>
      <xs:element name="outVariables" type="tns:std__vector_int_" minOccurs="0"/>
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
    </xs:sequence>
      </xs:extension>
      </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="__schema3__Slider">
    <xs:sequence>
      <xs:element name="visible" type="xs:boolean" minOccurs="0"/>
      <xs:element name="stepRel" type="xs:boolean" minOccurs="0"/>
      <xs:element name="min" type="xs:double" minOccurs="0"/>
      <xs:element name="max" type="xs:double" minOccurs="0"/>
      <xs:element name="step" type="xs:double" minOccurs="0"/>
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="std__pair_const_double_double_">
    <xs:sequence>
      <xs:element name="first" type="xs:double" minOccurs="0"/>
      <xs:element name="second" type="xs:double" minOccurs="0"/>
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="std__map_double_double_">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="pair" type="tns:std__pair_const_double_double_"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="std__pair_const_std__string___civita__Dimension_">
    <xs:sequence>
      <xs:element name="first" type="xs:string" minOccurs="0"/>
      <xs:element name="second" type="tns:__civita__Dimension" minOccurs="0"/>
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="std__map_std__string___civita__Dimension_">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="pair" type="tns:std__pair_const_std__string___civita__Dimension_"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="std__vector___ecolab__Plot__LineStyle_">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="LineStyle" type="tns:__ecolab__Plot__LineStyle"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="std__vector___minsky__Bookmark_">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Bookmark" type="tns:__minsky__Bookmark"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="std__vector___minsky__GodleyAssetClass__AssetClass_">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="AssetClass" type="tns:__minsky__GodleyAssetClass__AssetClass"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="std__vector_std__vector_std__string__">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="vector" type="tns:std__vector_std__string_"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="__schema3__Item">
      <xs:complexContent>
      <xs:extension base="tns:__schema3__ItemBase">
    <xs:sequence>
      <xs:element name="width" type="xs:float" minOccurs="0"/>
      <xs:element name="height" type="xs:float" minOccurs="0"/>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
      <xs:element name="init" type="xs:string" minOccurs="0"/>
      <xs:element name="units" type="xs:string" minOccurs="0"/>
      <xs:element name="slider" type="tns:__schema3__Slider" minOccurs="0"/>
      <xs:element name="intVar" type="xs:int" minOccurs="0"/>
      <xs:element name="dataOpData" type="tns:std__map_double_double_" minOccurs="0"/>
      <xs:element name="filename" type="xs:string" minOccurs="0"/>
      <xs:element name="ravelState" type="tns:__minsky__RavelState" minOccurs="0"/>
      <xs:element name="lockGroup" type="xs:int" minOccurs="0"/>
      <xs:element name="dimensions" type="tns:std__map_std__string___civita__Dimension_" minOccurs="0"/>
      <xs:element name="axis" type="xs:string" minOccurs="0"/>
      <xs:element name="arg" type="xs:double" minOccurs="0"/>
      <xs:element name="data" type="tns:std__vector_std__vector_std__string__" minOccurs="0"/>
      <xs:element name="assetClasses" type="tns:std__vector___minsky__GodleyAssetClass__AssetClass_" minOccurs="0"/>
      <xs:element name="iconScale" type="xs:float" minOccurs="0"/>
      <xs:element name="logx" type="xs:boolean" minOccurs="0"/>
      <xs:element name="logy" type="xs:boolean" minOccurs="0"/>
      <xs:element name="ypercent" type="xs:boolean" minOccurs="0"/>
      <xs:element name="plotType" type="tns:__ecolab__Plot__PlotType" minOccurs="0"/>
      <xs:element name="xlabel" type="xs:string" minOccurs="0"/>
      <xs:element name="ylabel" type="xs:string" minOccurs="0"/>
      <xs:element name="y1label" type="xs:string" minOccurs="0"/>
      <xs:element name="nxTicks" type="xs:int" minOccurs="0"/>
      <xs:element name="nyTicks" type="xs:int" minOccurs="0"/>
      <xs:element name="xtickAngle" type="xs:double" minOccurs="0"/>
      <xs:element name="exp_threshold" type="xs:double" minOccurs="0"/>
      <xs:element name="legend" type="tns:__ecolab__Plot__Side" minOccurs="0"/>
      <xs:element name="bookmarks" type="tns:std__vector___minsky__Bookmark_" minOccurs="0"/>
      <xs:element name="tensorData" type="tns:__classdesc__CDATA" minOccurs="0"/>
      <xs:element name="palette" type="tns:std__vector___ecolab__Plot__LineStyle_" minOccurs="0"/>
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
    </xs:sequence>
      </xs:extension>
      </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="__schema3__ItemBase">
      <xs:complexContent>
      <xs:extension base="tns:__schema3__Note">
    <xs:sequence>
      <xs:element name="id" type="xs:int"/>
      <xs:element name="type" type="xs:string"/>
      <xs:element name="x" type="xs:float"/>
      <xs:element name="y" type="xs:float"/>
      <xs:element name="zoomFactor" type="xs:float"/>
      <xs:element name="scaleFactor" type="xs:float"/>
      <xs:element name="rotation" type="xs:double"/>
      <xs:element name="ports" type="tns:std__vector_int_"/>
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
    </xs:sequence>
      </xs:extension>
      </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="std__pair_const_std__string_double_">
    <xs:sequence>
      <xs:element name="first" type="xs:string"/>
      <xs:element name="second" type="xs:double"/>
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="std__map_std__string_double_">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="pair" type="tns:std__pair_const_std__string_double_"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="std__vector___schema3__Group_">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Group" type="tns:__schema3__Group"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="std__vector___schema3__Item_">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Item" type="tns:__schema3__Item"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="std__vector_float_">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="float" type="xs:float"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="__schema3__Wire">
      <xs:complexContent>
      <xs:extension base="tns:__schema3__Note">
    <xs:sequence>
      <xs:element name="id" type="xs:int"/>
      <xs:element name="from" type="xs:int"/>
      <xs:element name="to" type="xs:int"/>
      <xs:element name="coords" type="tns:std__vector_float_" minOccurs="0"/>
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
    </xs:sequence>
      </xs:extension>
      </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="std__vector___schema3__Wire_">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Wire" type="tns:__schema3__Wire"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="__schema3__Minsky">
    <xs:sequence>
      <xs:element name="schemaVersion" type="xs:int"/>
      <xs:element name="wires" type="tns:std__vector___schema3__Wire_"/>
      <xs:element name="items" type="tns:std__vector___schema3__Item_"/>
      <xs:element name="groups" type="tns:std__vector___schema3__Group_"/>
      <xs:element name="rungeKutta" type="tns:__minsky__RungeKutta"/>
      <xs:element name="zoomFactor" type="xs:double"/>
      <xs:element name="bookmarks" type="tns:std__vector___minsky__Bookmark_"/>
      <xs:element name="dimensions" type="tns:std__map_std__string___civita__Dimension_"/>
      <xs:element name="conversions" type="tns:std__map_std__string_double_"/>
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="__schema3__Note">
    <xs:sequence>
      <xs:element name="detailedText" type="xs:string" minOccurs="0"/>
      <xs:element name="tooltip" type="xs:string" minOccurs="0"/>
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>

  <xs:element name="Minsky" type="tns:__schema3__Minsky"/>
</xs:schema>
